{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/health": {
      "get": {
        "description": "Endpoint para verificar se a API e banco de dados estão funcionando corretamente",
        "operationId": "HealthController_check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Sistema funcionando corretamente",
            "content": {
              "application/json": {
                "example": {
                  "status": "ok",
                  "message": "ERP Laboratório Backend está funcionando!",
                  "timestamp": "2025-09-02T20:01:27.483Z",
                  "database": "erplab - conectado",
                  "port": 10016
                }
              }
            }
          }
        },
        "summary": "Verificação de saúde do sistema",
        "tags": ["health"]
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "description": "Autentica o usuário e retorna tokens de acesso JWT",
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Credenciais inválidas"
          }
        },
        "summary": "Realizar login",
        "tags": ["Autenticação"]
      }
    },
    "/api/v1/auth/refresh": {
      "post": {
        "description": "Usa o refresh token para gerar um novo access token",
        "operationId": "AuthController_refreshToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token renovado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Refresh token inválido"
          }
        },
        "summary": "Renovar access token",
        "tags": ["Autenticação"]
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "description": "Invalida a sessão do usuário autenticado",
        "operationId": "AuthController_logout",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Logout realizado com sucesso"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Realizar logout",
        "tags": ["Autenticação"]
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "description": "Retorna as informações do usuário atual baseado no token JWT",
        "operationId": "AuthController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Dados do usuário",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "nome": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "tipo": {
                      "type": "string"
                    },
                    "unidadeSaudeId": {
                      "type": "string"
                    },
                    "permissoes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obter dados do usuário autenticado",
        "tags": ["Autenticação"]
      }
    },
    "/api/v1/auth/validate": {
      "post": {
        "description": "Verifica se um token JWT é válido",
        "operationId": "AuthController_validateToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "Token JWT para validar"
                  }
                },
                "required": ["token"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status de validação do token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateTokenResponseDto"
                }
              }
            }
          }
        },
        "summary": "Validar token JWT",
        "tags": ["Autenticação"]
      }
    },
    "/api/v1/auth/forgot-password": {
      "post": {
        "description": "Envia um email com link para recuperação de senha",
        "operationId": "AuthController_forgotPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email de recuperação enviado se o email existir no sistema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Erro ao enviar email de recuperação"
          }
        },
        "summary": "Solicitar recuperação de senha",
        "tags": ["Autenticação"]
      }
    },
    "/api/v1/auth/reset-password": {
      "post": {
        "description": "Define uma nova senha usando o token recebido por email",
        "operationId": "AuthController_resetPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Senha alterada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Token inválido ou expirado"
          }
        },
        "summary": "Resetar senha com token de recuperação",
        "tags": ["Autenticação"]
      }
    },
    "/api/v1/auth/validate-reset-token/{token}": {
      "get": {
        "description": "Verifica se um token de recuperação é válido e não expirou",
        "operationId": "AuthController_validateResetToken",
        "parameters": [
          {
            "name": "token",
            "required": true,
            "in": "path",
            "description": "Token UUID de recuperação de senha",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status de validação do token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateTokenResponseDto"
                }
              }
            }
          }
        },
        "summary": "Validar token de recuperação de senha",
        "tags": ["Autenticação"]
      }
    },
    "/api/v1/auth/change-password": {
      "post": {
        "description": "Permite ao usuário logado alterar sua própria senha fornecendo a senha atual",
        "operationId": "AuthController_changePassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Senha alterada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Nova senha igual à senha atual"
          },
          "401": {
            "description": "Senha atual incorreta ou usuário não autenticado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Alterar senha do usuário autenticado",
        "tags": ["Autenticação"]
      }
    },
    "/api/v1/usuarios": {
      "post": {
        "description": "Cria um novo usuário no sistema. O código interno será gerado automaticamente se não fornecido.",
        "operationId": "UsuariosController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUsuarioDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Usuario"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos"
          },
          "409": {
            "description": "E-mail ou CPF já cadastrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Criar um novo usuário",
        "tags": ["Usuários"]
      },
      "get": {
        "description": "Lista todos os usuários com filtros opcionais e paginação.",
        "operationId": "UsuariosController_findAll",
        "parameters": [
          {
            "name": "unidadeId",
            "required": false,
            "in": "query",
            "description": "Filtrar por unidade",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ativo",
            "required": false,
            "in": "query",
            "description": "Filtrar por status ativo",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "cpf",
            "required": false,
            "in": "query",
            "description": "Filtrar por CPF",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "required": false,
            "in": "query",
            "description": "Filtrar por e-mail",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nome",
            "required": false,
            "in": "query",
            "description": "Filtrar por nome",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Itens por página",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número da página",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de usuários retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Usuario"
                      }
                    },
                    "total": {
                      "type": "number",
                      "example": 100
                    },
                    "page": {
                      "type": "number",
                      "example": 1
                    },
                    "limit": {
                      "type": "number",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "number",
                      "example": 10
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar usuários",
        "tags": ["Usuários"]
      }
    },
    "/api/v1/usuarios/stats": {
      "get": {
        "description": "Retorna estatísticas dos usuários.",
        "operationId": "UsuariosController_getStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Estatísticas retornadas com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "number"
                    },
                    "ativos": {
                      "type": "number"
                    },
                    "inativos": {
                      "type": "number"
                    },
                    "bloqueados": {
                      "type": "number"
                    },
                    "com2FA": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Estatísticas dos usuários",
        "tags": ["Usuários"]
      }
    },
    "/api/v1/usuarios/me": {
      "get": {
        "description": "Retorna os dados do usuário atualmente autenticado.",
        "operationId": "UsuariosController_getMe",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Dados do usuário retornados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Usuario"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obter dados do usuário autenticado",
        "tags": ["Usuários"]
      }
    },
    "/api/v1/usuarios/{id}": {
      "get": {
        "description": "Busca um usuário específico pelo ID.",
        "operationId": "UsuariosController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do usuário",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Usuario"
                }
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar usuário por ID",
        "tags": ["Usuários"]
      },
      "patch": {
        "description": "Atualiza os dados de um usuário existente.",
        "operationId": "UsuariosController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do usuário",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUsuarioDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuário atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Usuario"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos"
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Atualizar usuário",
        "tags": ["Usuários"]
      },
      "delete": {
        "description": "Remove um usuário (soft delete - torna inativo).",
        "operationId": "UsuariosController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do usuário",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário removido com sucesso"
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Remover usuário",
        "tags": ["Usuários"]
      }
    },
    "/api/v1/usuarios/{id}/activate": {
      "patch": {
        "description": "Ativa um usuário inativo.",
        "operationId": "UsuariosController_activate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do usuário",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário ativado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Usuario"
                }
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Ativar usuário",
        "tags": ["Usuários"]
      }
    },
    "/api/v1/usuarios/{id}/block": {
      "patch": {
        "description": "Bloqueia um usuário por um período determinado.",
        "operationId": "UsuariosController_block",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do usuário",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "minutos": {
                    "type": "number",
                    "example": 30,
                    "description": "Minutos de bloqueio"
                  }
                },
                "required": ["minutos"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuário bloqueado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Usuario"
                }
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Bloquear usuário",
        "tags": ["Usuários"]
      }
    },
    "/api/v1/usuarios/{id}/unblock": {
      "patch": {
        "description": "Desbloqueia um usuário bloqueado.",
        "operationId": "UsuariosController_unblock",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do usuário",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário desbloqueado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Usuario"
                }
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Desbloquear usuário",
        "tags": ["Usuários"]
      }
    },
    "/api/v1/usuarios/change-password": {
      "post": {
        "description": "Permite que o usuário autenticado altere sua própria senha.",
        "operationId": "UsuariosController_changePassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Senha alterada com sucesso"
          },
          "400": {
            "description": "Nova senha e confirmação não conferem"
          },
          "401": {
            "description": "Senha atual incorreta"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Alterar senha",
        "tags": ["Usuários"]
      }
    },
    "/api/v1/usuarios/{id}/reset-password": {
      "patch": {
        "description": "Reseta a senha de um usuário (admin only).",
        "operationId": "UsuariosController_resetPassword",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do usuário",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "novaSenha": {
                    "type": "string",
                    "example": "NovaSenha123!",
                    "description": "Nova senha temporária"
                  }
                },
                "required": ["novaSenha"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Senha resetada com sucesso"
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Resetar senha",
        "tags": ["Usuários"]
      }
    },
    "/api/v1/auditoria/log": {
      "post": {
        "description": "Registra um novo log de auditoria no sistema",
        "operationId": "AuditoriaController_registrarLog",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAuditoriaLogDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Log registrado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditoriaLog"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Registrar log de auditoria",
        "tags": ["Auditoria"]
      }
    },
    "/api/v1/auditoria": {
      "get": {
        "description": "Busca logs de auditoria com filtros e paginação",
        "operationId": "AuditoriaController_buscarLogs",
        "parameters": [
          {
            "name": "tipoLog",
            "required": false,
            "in": "query",
            "description": "Tipo do log",
            "schema": {
              "type": "string",
              "enum": ["ACESSO", "ALTERACAO", "ERRO", "ACAO"]
            }
          },
          {
            "name": "nivel",
            "required": false,
            "in": "query",
            "description": "Nível de severidade",
            "schema": {
              "type": "string",
              "enum": ["INFO", "WARNING", "ERROR", "CRITICAL"]
            }
          },
          {
            "name": "operacao",
            "required": false,
            "in": "query",
            "description": "Tipo de operação",
            "schema": {
              "type": "string",
              "enum": [
                "INSERT",
                "UPDATE",
                "DELETE",
                "LOGIN",
                "LOGOUT",
                "LOGIN_FALHA"
              ]
            }
          },
          {
            "name": "usuarioId",
            "required": false,
            "in": "query",
            "description": "ID do usuário",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          },
          {
            "name": "unidadeSaudeId",
            "required": false,
            "in": "query",
            "description": "ID da unidade de saúde",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          },
          {
            "name": "modulo",
            "required": false,
            "in": "query",
            "description": "Nome do módulo",
            "schema": {
              "example": "Pacientes",
              "type": "string"
            }
          },
          {
            "name": "entidade",
            "required": false,
            "in": "query",
            "description": "Nome da entidade",
            "schema": {
              "example": "pacientes",
              "type": "string"
            }
          },
          {
            "name": "entidadeId",
            "required": false,
            "in": "query",
            "description": "ID da entidade",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          },
          {
            "name": "ipAddress",
            "required": false,
            "in": "query",
            "description": "Endereço IP",
            "schema": {
              "example": "192.168.1.1",
              "type": "string"
            }
          },
          {
            "name": "dataInicio",
            "required": false,
            "in": "query",
            "description": "Data inicial (formato YYYY-MM-DD)",
            "schema": {
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "dataFim",
            "required": false,
            "in": "query",
            "description": "Data final (formato YYYY-MM-DD)",
            "schema": {
              "example": "2024-12-31",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página atual",
            "schema": {
              "default": 1,
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Itens por página",
            "schema": {
              "default": 10,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "description": "Campo para ordenação",
            "schema": {
              "default": "dataHora",
              "example": "dataHora",
              "type": "string"
            }
          },
          {
            "name": "orderDirection",
            "required": false,
            "in": "query",
            "description": "Direção da ordenação",
            "schema": {
              "default": "DESC",
              "type": "string",
              "enum": ["ASC", "DESC"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logs encontrados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AuditoriaLog"
                      }
                    },
                    "total": {
                      "type": "number",
                      "example": 100
                    },
                    "page": {
                      "type": "number",
                      "example": 1
                    },
                    "limit": {
                      "type": "number",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "number",
                      "example": 10
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar logs de auditoria",
        "tags": ["Auditoria"]
      }
    },
    "/api/v1/auditoria/usuario/{usuarioId}": {
      "get": {
        "description": "Busca logs de auditoria de um usuário específico",
        "operationId": "AuditoriaController_buscarLogsPorUsuario",
        "parameters": [
          {
            "name": "usuarioId",
            "required": true,
            "in": "path",
            "description": "ID do usuário",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados (padrão: 50)",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logs do usuário encontrados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditoriaLog"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar logs por usuário",
        "tags": ["Auditoria"]
      }
    },
    "/api/v1/auditoria/entidade/{entidade}/{entidadeId}": {
      "get": {
        "description": "Busca logs de auditoria de uma entidade específica",
        "operationId": "AuditoriaController_buscarLogsPorEntidade",
        "parameters": [
          {
            "name": "entidade",
            "required": true,
            "in": "path",
            "description": "Nome da entidade",
            "schema": {
              "example": "pacientes",
              "type": "string"
            }
          },
          {
            "name": "entidadeId",
            "required": true,
            "in": "path",
            "description": "ID da entidade",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logs da entidade encontrados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditoriaLog"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar logs por entidade",
        "tags": ["Auditoria"]
      }
    },
    "/api/v1/auditoria/estatisticas": {
      "get": {
        "description": "Retorna estatísticas consolidadas dos logs de auditoria",
        "operationId": "AuditoriaController_obterEstatisticas",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Estatísticas retornadas com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalLogs": {
                      "type": "number"
                    },
                    "porTipo": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "number"
                      }
                    },
                    "porNivel": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "number"
                      }
                    },
                    "porOperacao": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "number"
                      }
                    },
                    "acessosHoje": {
                      "type": "number"
                    },
                    "errosHoje": {
                      "type": "number"
                    },
                    "usuariosAtivos": {
                      "type": "number"
                    },
                    "modulosMaisAcessados": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "modulo": {
                            "type": "string"
                          },
                          "acessos": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obter estatísticas de auditoria",
        "tags": ["Auditoria"]
      }
    },
    "/api/v1/auditoria/acesso": {
      "post": {
        "description": "Registra um log de acesso ao sistema",
        "operationId": "AuditoriaController_registrarAcesso",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acao": {
                    "type": "string",
                    "example": "Visualizar Lista"
                  },
                  "modulo": {
                    "type": "string",
                    "example": "Pacientes"
                  },
                  "detalhes": {
                    "type": "string",
                    "example": "Lista filtrada por status ativo"
                  }
                },
                "required": ["acao", "modulo"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Acesso registrado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditoriaLog"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Registrar acesso",
        "tags": ["Auditoria"]
      }
    },
    "/api/v1/auditoria/erro": {
      "post": {
        "description": "Registra um log de erro no sistema",
        "operationId": "AuditoriaController_registrarErro",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "erro": {
                    "type": "string",
                    "example": "Falha ao processar pagamento"
                  },
                  "modulo": {
                    "type": "string",
                    "example": "Financeiro"
                  },
                  "detalhes": {
                    "type": "string",
                    "example": "Gateway de pagamento indisponível"
                  }
                },
                "required": ["erro"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Erro registrado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditoriaLog"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Registrar erro",
        "tags": ["Auditoria"]
      }
    },
    "/api/v1/cep/{cep}": {
      "get": {
        "description": "Retorna o endereço completo através do CEP informado. Os dados são obtidos através da API ViaCEP e formatados para compatibilidade com o cadastro de unidades.",
        "operationId": "CepController_buscarEndereco",
        "parameters": [
          {
            "name": "cep",
            "required": true,
            "in": "path",
            "description": "CEP com ou sem formatação (ex: 01310-100 ou 01310100)",
            "schema": {
              "example": "01310100",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Endereço encontrado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnderecoResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "CEP inválido - deve conter 8 dígitos",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 400,
                    "message": "CEP inválido. O CEP deve conter 8 dígitos.",
                    "error": "Bad Request"
                  }
                }
              }
            }
          },
          "404": {
            "description": "CEP não encontrado na base de dados",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 404,
                    "message": "CEP não encontrado.",
                    "error": "Not Found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro ao buscar informações do CEP"
          }
        },
        "summary": "Buscar endereço completo por CEP",
        "tags": ["CEP - Consulta de Endereços"]
      }
    },
    "/api/v1/cnae": {
      "post": {
        "description": "Endpoint para cadastrar um novo CNAE no sistema",
        "operationId": "CnaeController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCnaeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "CNAE criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cnae"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos"
          },
          "409": {
            "description": "CNAE já existe com este código"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Criar novo CNAE",
        "tags": ["CNAE - Classificação Nacional de Atividades Econômicas"]
      },
      "get": {
        "description": "Retorna lista paginada de CNAEs podendo filtrar por código, descrição, seção, divisão e status",
        "operationId": "CnaeController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número da página (padrão: 1)",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Quantidade por página (padrão: 10, máximo: 100)",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "codigo",
            "required": false,
            "in": "query",
            "description": "Filtrar por código",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "descricao",
            "required": false,
            "in": "query",
            "description": "Filtrar por descrição",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "secao",
            "required": false,
            "in": "query",
            "description": "Filtrar por seção",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "divisao",
            "required": false,
            "in": "query",
            "description": "Filtrar por divisão",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ativo",
            "required": false,
            "in": "query",
            "description": "Filtrar por status",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista paginada de CNAEs",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "data": [
                      {
                        "id": "uuid",
                        "codigo": "86101",
                        "descricao": "ATIVIDADES DE ATENDIMENTO HOSPITALAR",
                        "secao": "Q"
                      }
                    ],
                    "meta": {
                      "page": 1,
                      "limit": 10,
                      "total": 1358,
                      "totalPages": 136,
                      "hasPrevPage": false,
                      "hasNextPage": true
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar CNAEs com filtros e paginação",
        "tags": ["CNAE - Classificação Nacional de Atividades Econômicas"]
      }
    },
    "/api/v1/cnae/search": {
      "get": {
        "description": "Busca CNAEs por termo em código, descrição ou subclasse. Retorna no máximo 20 resultados.",
        "operationId": "CnaeController_search",
        "parameters": [
          {
            "name": "q",
            "required": true,
            "in": "query",
            "description": "Termo de busca (mínimo 2 caracteres)",
            "schema": {
              "example": "laboratório",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CNAEs encontrados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cnae"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar CNAEs por termo",
        "tags": ["CNAE - Classificação Nacional de Atividades Econômicas"]
      }
    },
    "/api/v1/cnae/codigo": {
      "get": {
        "description": "Busca um CNAE específico pelo seu código",
        "operationId": "CnaeController_findByCodigo",
        "parameters": [
          {
            "name": "codigo",
            "required": true,
            "in": "query",
            "description": "Código do CNAE",
            "schema": {
              "example": "8640-2/02",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CNAE encontrado"
          },
          "404": {
            "description": "CNAE não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar CNAE por código",
        "tags": ["CNAE - Classificação Nacional de Atividades Econômicas"]
      }
    },
    "/api/v1/cnae/secao/{secao}": {
      "get": {
        "description": "Retorna todos os CNAEs de uma seção específica",
        "operationId": "CnaeController_findBySecao",
        "parameters": [
          {
            "name": "secao",
            "required": true,
            "in": "path",
            "description": "Letra da seção (A-U)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar CNAEs por seção",
        "tags": ["CNAE - Classificação Nacional de Atividades Econômicas"]
      }
    },
    "/api/v1/cnae/divisao/{divisao}": {
      "get": {
        "description": "Retorna todos os CNAEs de uma divisão específica",
        "operationId": "CnaeController_findByDivisao",
        "parameters": [
          {
            "name": "divisao",
            "required": true,
            "in": "path",
            "description": "Código da divisão (01-99)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar CNAEs por divisão",
        "tags": ["CNAE - Classificação Nacional de Atividades Econômicas"]
      }
    },
    "/api/v1/cnae/{id}": {
      "get": {
        "description": "Busca um CNAE específico pelo seu ID (UUID)",
        "operationId": "CnaeController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do CNAE",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CNAE encontrado"
          },
          "404": {
            "description": "CNAE não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar CNAE por ID",
        "tags": ["CNAE - Classificação Nacional de Atividades Econômicas"]
      },
      "patch": {
        "operationId": "CnaeController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do CNAE",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCnaeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "CNAE atualizado com sucesso"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Atualizar CNAE",
        "tags": ["CNAE - Classificação Nacional de Atividades Econômicas"]
      },
      "delete": {
        "operationId": "CnaeController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do CNAE",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CNAE desativado com sucesso"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Desativar CNAE",
        "tags": ["CNAE - Classificação Nacional de Atividades Econômicas"]
      }
    },
    "/api/v1/cnae/import": {
      "post": {
        "description": "Permite importar múltiplos CNAEs de uma vez. Útil para carga inicial de dados.",
        "operationId": "CnaeController_importBulk",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "CNAEs importados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "message": "100 CNAEs importados com sucesso"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro na importação"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Importar CNAEs em lote",
        "tags": ["CNAE - Classificação Nacional de Atividades Econômicas"]
      }
    },
    "/api/v1/atendimento": {
      "get": {
        "description": "RF001-RF004: Sistema de contato multi-canal, auto-atendimento, gestão de filas e OS",
        "operationId": "AtendimentoController_listarAtendimentos",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de atendimentos retornada com sucesso"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar atendimentos",
        "tags": ["atendimento"]
      }
    },
    "/api/v1/atendimento/fila": {
      "get": {
        "description": "RF003: Gestão de fila de atendimento com Kanban visual",
        "operationId": "AtendimentoController_obterFilaAtendimento",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Fila de atendimento atual"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obter fila de atendimento",
        "tags": ["atendimento"]
      }
    },
    "/api/v1/atendimento/ordem-servico": {
      "post": {
        "description": "RF004: Geração automática de OS com dados do paciente e exames",
        "operationId": "AtendimentoController_gerarOrdemServico",
        "parameters": [],
        "responses": {
          "201": {
            "description": "OS criada com sucesso"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Gerar Ordem de Serviço",
        "tags": ["atendimento"]
      }
    },
    "/api/v1/atendimento/ocr/pedido-medico": {
      "post": {
        "description": "RF002: Auto-atendimento com OCR para leitura de pedidos médicos",
        "operationId": "AtendimentoController_processarPedidoOCR",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Pedido médico processado com sucesso"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Processar pedido médico com OCR",
        "tags": ["atendimento"]
      }
    },
    "/api/v1/pacientes": {
      "post": {
        "description": "Cria um novo paciente no sistema. O código interno será gerado automaticamente se não fornecido.",
        "operationId": "PacientesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePacienteDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Paciente criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paciente"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos"
          },
          "409": {
            "description": "CPF já cadastrado na empresa"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Criar um novo paciente",
        "tags": ["Pacientes"]
      },
      "get": {
        "description": "Lista todos os pacientes da empresa com filtros opcionais e paginação.",
        "operationId": "PacientesController_findAll",
        "parameters": [
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Filtrar por status",
            "schema": {
              "enum": ["ativo", "inativo", "bloqueado"],
              "type": "string"
            }
          },
          {
            "name": "email",
            "required": false,
            "in": "query",
            "description": "Filtrar por email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cpf",
            "required": false,
            "in": "query",
            "description": "Filtrar por CPF",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nome",
            "required": false,
            "in": "query",
            "description": "Filtrar por nome",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Itens por página",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número da página",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de pacientes retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Paciente"
                      }
                    },
                    "total": {
                      "type": "number",
                      "example": 100
                    },
                    "page": {
                      "type": "number",
                      "example": 1
                    },
                    "limit": {
                      "type": "number",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "number",
                      "example": 10
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar pacientes",
        "tags": ["Pacientes"]
      }
    },
    "/api/v1/pacientes/search": {
      "get": {
        "description": "Busca pacientes por nome parcial para autocomplete.",
        "operationId": "PacientesController_search",
        "parameters": [
          {
            "name": "nome",
            "required": true,
            "in": "query",
            "description": "Nome para busca",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de resultados (padrão: 10)",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de pacientes encontrados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Paciente"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar pacientes por nome",
        "tags": ["Pacientes"]
      }
    },
    "/api/v1/pacientes/stats": {
      "get": {
        "description": "Retorna estatísticas dos pacientes por empresa.",
        "operationId": "PacientesController_getStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Estatísticas retornadas com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "number"
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "ativo": {
                          "type": "number"
                        },
                        "inativo": {
                          "type": "number"
                        },
                        "bloqueado": {
                          "type": "number"
                        }
                      }
                    },
                    "convenio": {
                      "type": "object",
                      "properties": {
                        "com_convenio": {
                          "type": "number"
                        },
                        "sem_convenio": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Estatísticas dos pacientes",
        "tags": ["Pacientes"]
      }
    },
    "/api/v1/pacientes/cpf/{cpf}": {
      "get": {
        "description": "Busca um paciente específico pelo CPF.",
        "operationId": "PacientesController_findByCpf",
        "parameters": [
          {
            "name": "cpf",
            "required": true,
            "in": "path",
            "description": "CPF do paciente (apenas números)",
            "schema": {
              "example": "12345678901",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paciente encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paciente"
                }
              }
            }
          },
          "404": {
            "description": "Paciente não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar paciente por CPF",
        "tags": ["Pacientes"]
      }
    },
    "/api/v1/pacientes/{id}": {
      "get": {
        "description": "Busca um paciente específico pelo ID.",
        "operationId": "PacientesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do paciente",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paciente encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paciente"
                }
              }
            }
          },
          "404": {
            "description": "Paciente não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar paciente por ID",
        "tags": ["Pacientes"]
      },
      "patch": {
        "description": "Atualiza os dados de um paciente existente.",
        "operationId": "PacientesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do paciente",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePacienteDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Paciente atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paciente"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos"
          },
          "404": {
            "description": "Paciente não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Atualizar paciente",
        "tags": ["Pacientes"]
      },
      "delete": {
        "description": "Remove um paciente (soft delete - torna inativo).",
        "operationId": "PacientesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do paciente",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paciente removido com sucesso"
          },
          "404": {
            "description": "Paciente não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Remover paciente",
        "tags": ["Pacientes"]
      }
    },
    "/api/v1/pacientes/{id}/activate": {
      "patch": {
        "description": "Ativa um paciente inativo.",
        "operationId": "PacientesController_activate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do paciente",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paciente ativado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paciente"
                }
              }
            }
          },
          "404": {
            "description": "Paciente não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Ativar paciente",
        "tags": ["Pacientes"]
      }
    },
    "/api/v1/pacientes/{id}/block": {
      "patch": {
        "description": "Bloqueia um paciente ativo.",
        "operationId": "PacientesController_block",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do paciente",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paciente bloqueado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paciente"
                }
              }
            }
          },
          "404": {
            "description": "Paciente não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Bloquear paciente",
        "tags": ["Pacientes"]
      }
    },
    "/api/v1/unidades-saude": {
      "post": {
        "description": "Cria uma nova unidade de saúde com todos os dados relacionados (horários, dados bancários, CNAEs)",
        "operationId": "UnidadeSaudeController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUnidadeSaudeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Unidade de saúde criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnidadeSaudeResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos"
          },
          "409": {
            "description": "CNPJ já cadastrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Criar nova unidade de saúde",
        "tags": ["Unidades de Saúde"]
      },
      "get": {
        "description": "Lista todas as unidades de saúde com paginação e filtros opcionais",
        "operationId": "UnidadeSaudeController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número da página (default: 1)",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite de registros por página (default: 10)",
            "schema": {
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca por nome, fantasia, CNPJ ou razão social",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ativo",
            "required": false,
            "in": "query",
            "description": "Filtrar por status ativo/inativo",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "cidade",
            "required": false,
            "in": "query",
            "description": "Filtrar por cidade",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "estado",
            "required": false,
            "in": "query",
            "description": "Filtrar por estado (UF)",
            "schema": {
              "example": "SP",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de unidades de saúde",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UnidadeSaudeListResponseDto"
                      }
                    },
                    "total": {
                      "type": "number",
                      "example": 100
                    },
                    "page": {
                      "type": "number",
                      "example": 1
                    },
                    "limit": {
                      "type": "number",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "number",
                      "example": 10
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar unidades de saúde",
        "tags": ["Unidades de Saúde"]
      }
    },
    "/api/v1/unidades-saude/ativas": {
      "get": {
        "description": "Lista apenas as unidades de saúde ativas (para dropdowns/selects)",
        "operationId": "UnidadeSaudeController_listActive",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de unidades ativas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "nomeUnidade": {
                        "type": "string"
                      },
                      "nomeFantasia": {
                        "type": "string"
                      },
                      "cnpj": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar unidades ativas",
        "tags": ["Unidades de Saúde"]
      }
    },
    "/api/v1/unidades-saude/cidade/{cidade}": {
      "get": {
        "description": "Lista todas as unidades de saúde ativas de uma cidade específica",
        "operationId": "UnidadeSaudeController_findByCidade",
        "parameters": [
          {
            "name": "cidade",
            "required": true,
            "in": "path",
            "description": "Nome da cidade",
            "schema": {
              "example": "São Roque",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de unidades da cidade",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnidadeSaudeResponseDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar unidades por cidade",
        "tags": ["Unidades de Saúde"]
      }
    },
    "/api/v1/unidades-saude/cnpj/{cnpj}": {
      "get": {
        "description": "Busca uma unidade de saúde específica pelo CNPJ",
        "operationId": "UnidadeSaudeController_findByCnpj",
        "parameters": [
          {
            "name": "cnpj",
            "required": true,
            "in": "path",
            "description": "CNPJ da unidade (apenas números)",
            "schema": {
              "example": "12345678000190",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unidade de saúde encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnidadeSaudeResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Unidade não encontrada"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar unidade por CNPJ",
        "tags": ["Unidades de Saúde"]
      }
    },
    "/api/v1/unidades-saude/{id}": {
      "get": {
        "description": "Busca uma unidade de saúde específica com todos os dados relacionados",
        "operationId": "UnidadeSaudeController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID da unidade de saúde",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unidade de saúde encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnidadeSaudeResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Unidade não encontrada"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar unidade por ID",
        "tags": ["Unidades de Saúde"]
      },
      "patch": {
        "description": "Atualiza os dados de uma unidade de saúde existente",
        "operationId": "UnidadeSaudeController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID da unidade de saúde",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUnidadeSaudeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Unidade de saúde atualizada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnidadeSaudeResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Unidade não encontrada"
          },
          "409": {
            "description": "CNPJ já cadastrado em outra unidade"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Atualizar unidade de saúde",
        "tags": ["Unidades de Saúde"]
      },
      "delete": {
        "description": "Remove (soft delete) uma unidade de saúde",
        "operationId": "UnidadeSaudeController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID da unidade de saúde",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Unidade removida com sucesso"
          },
          "404": {
            "description": "Unidade não encontrada"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Remover unidade de saúde",
        "tags": ["Unidades de Saúde"]
      }
    },
    "/api/v1/unidades-saude/{id}/ativar": {
      "patch": {
        "description": "Ativa uma unidade de saúde previamente desativada",
        "operationId": "UnidadeSaudeController_activate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID da unidade de saúde",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unidade ativada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnidadeSaudeResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Unidade não encontrada"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Ativar unidade de saúde",
        "tags": ["Unidades de Saúde"]
      }
    },
    "/api/v1/unidades-saude/{id}/desativar": {
      "patch": {
        "description": "Desativa uma unidade de saúde ativa",
        "operationId": "UnidadeSaudeController_deactivate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID da unidade de saúde",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unidade desativada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnidadeSaudeResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Unidade não encontrada"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Desativar unidade de saúde",
        "tags": ["Unidades de Saúde"]
      }
    },
    "/api/v1/exames": {
      "post": {
        "description": "Cria um novo exame no sistema com todas as configurações necessárias.",
        "operationId": "ExamesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateExameDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Exame criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exame"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos"
          },
          "409": {
            "description": "Código interno já cadastrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Criar um novo exame",
        "tags": ["Exames"]
      },
      "get": {
        "description": "Lista todos os exames com filtros opcionais e paginação.",
        "operationId": "ExamesController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número da página",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Quantidade de itens por página",
            "schema": {
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Buscar por nome do exame",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoria",
            "required": false,
            "in": "query",
            "description": "Filtrar por categoria",
            "schema": {
              "enum": ["laboratorio", "imagem", "procedimento", "consulta"],
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Filtrar por status",
            "schema": {
              "enum": ["ativo", "inativo", "suspenso"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de exames retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Exame"
                      }
                    },
                    "total": {
                      "type": "number",
                      "example": 100
                    },
                    "page": {
                      "type": "number",
                      "example": 1
                    },
                    "lastPage": {
                      "type": "number",
                      "example": 10
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar exames",
        "tags": ["Exames"]
      }
    },
    "/api/v1/exames/categoria/{categoria}": {
      "get": {
        "description": "Retorna todos os exames ativos de uma categoria específica.",
        "operationId": "ExamesController_findByCategoria",
        "parameters": [
          {
            "name": "categoria",
            "required": true,
            "in": "path",
            "description": "Categoria do exame",
            "schema": {
              "enum": ["laboratorio", "imagem", "procedimento", "consulta"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de exames da categoria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Exame"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar exames por categoria",
        "tags": ["Exames"]
      }
    },
    "/api/v1/exames/tipo/{tipoId}": {
      "get": {
        "description": "Retorna todos os exames ativos de um tipo específico.",
        "operationId": "ExamesController_findByTipo",
        "parameters": [
          {
            "name": "tipoId",
            "required": true,
            "in": "path",
            "description": "ID do tipo de exame",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de exames do tipo",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Exame"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar exames por tipo",
        "tags": ["Exames"]
      }
    },
    "/api/v1/exames/laboratorio/{laboratorioId}": {
      "get": {
        "description": "Retorna todos os exames realizados em um laboratório de apoio específico.",
        "operationId": "ExamesController_findByLaboratorioApoio",
        "parameters": [
          {
            "name": "laboratorioId",
            "required": true,
            "in": "path",
            "description": "ID do laboratório de apoio",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de exames do laboratório",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Exame"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar exames por laboratório de apoio",
        "tags": ["Exames"]
      }
    },
    "/api/v1/exames/buscar/{nome}": {
      "get": {
        "description": "Busca exames pelo nome ou sinônimos.",
        "operationId": "ExamesController_searchByName",
        "parameters": [
          {
            "name": "nome",
            "required": true,
            "in": "path",
            "description": "Nome ou parte do nome do exame",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de exames encontrados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Exame"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar exames por nome",
        "tags": ["Exames"]
      }
    },
    "/api/v1/exames/com-preparo": {
      "get": {
        "description": "Retorna todos os exames ativos que necessitam de preparo especial.",
        "operationId": "ExamesController_getExamesComPreparo",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de exames com preparo",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Exame"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar exames que necessitam preparo",
        "tags": ["Exames"]
      }
    },
    "/api/v1/exames/urgentes": {
      "get": {
        "description": "Retorna exames ordenados por prioridade/peso.",
        "operationId": "ExamesController_getExamesUrgentes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de exames urgentes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Exame"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar exames urgentes",
        "tags": ["Exames"]
      }
    },
    "/api/v1/exames/codigos": {
      "get": {
        "description": "Busca exames pelos códigos TUSS, AMB ou SUS.",
        "operationId": "ExamesController_findByCodigos",
        "parameters": [
          {
            "name": "tuss",
            "required": false,
            "in": "query",
            "description": "Código TUSS",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amb",
            "required": false,
            "in": "query",
            "description": "Código AMB",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sus",
            "required": false,
            "in": "query",
            "description": "Código SUS",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de exames encontrados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Exame"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar exames por códigos padronizados",
        "tags": ["Exames"]
      }
    },
    "/api/v1/exames/codigo/{codigo}": {
      "get": {
        "description": "Retorna um exame específico pelo código interno.",
        "operationId": "ExamesController_findByCodigo",
        "parameters": [
          {
            "name": "codigo",
            "required": true,
            "in": "path",
            "description": "Código interno do exame",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Exame encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exame"
                }
              }
            }
          },
          "404": {
            "description": "Exame não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar exame por código interno",
        "tags": ["Exames"]
      }
    },
    "/api/v1/exames/{id}": {
      "get": {
        "description": "Retorna um exame específico pelo ID.",
        "operationId": "ExamesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do exame",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Exame encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exame"
                }
              }
            }
          },
          "404": {
            "description": "Exame não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar exame por ID",
        "tags": ["Exames"]
      },
      "patch": {
        "description": "Atualiza as informações de um exame existente.",
        "operationId": "ExamesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do exame",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateExameDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Exame atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exame"
                }
              }
            }
          },
          "404": {
            "description": "Exame não encontrado"
          },
          "409": {
            "description": "Código interno já existe em outro exame"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Atualizar exame",
        "tags": ["Exames"]
      },
      "delete": {
        "description": "Desativa um exame (soft delete).",
        "operationId": "ExamesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do exame",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Exame desativado com sucesso"
          },
          "404": {
            "description": "Exame não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Desativar exame",
        "tags": ["Exames"]
      }
    },
    "/api/v1/exames/status/bulk": {
      "patch": {
        "description": "Atualiza o status de múltiplos exames.",
        "operationId": "ExamesController_bulkUpdateStatus",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": ["uuid1", "uuid2", "uuid3"]
                  },
                  "status": {
                    "type": "string",
                    "enum": ["ativo", "inativo", "suspenso"],
                    "example": "inativo"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status atualizados com sucesso"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Atualizar status em lote",
        "tags": ["Exames"]
      }
    },
    "/api/v1/convenios": {
      "post": {
        "operationId": "ConvenioController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConvenioDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Convênio criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Convenio"
                }
              }
            }
          },
          "409": {
            "description": "Conflito - Código ou CNPJ já existente"
          }
        },
        "summary": "Criar novo convênio",
        "tags": ["Convênios"]
      },
      "get": {
        "operationId": "ConvenioController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de convênios",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Convenio"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar todos os convênios",
        "tags": ["Convênios"]
      }
    },
    "/api/v1/convenios/ativos": {
      "get": {
        "operationId": "ConvenioController_findAtivos",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de convênios ativos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Convenio"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar convênios ativos",
        "tags": ["Convênios"]
      }
    },
    "/api/v1/convenios/com-integracao": {
      "get": {
        "description": "Retorna todos os convênios que possuem integração via API.",
        "operationId": "ConveniosController_findComIntegracao",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de convênios com integração",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Convenio"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar convênios com integração",
        "tags": ["Convênios"]
      }
    },
    "/api/v1/convenios/tipo-faturamento/{tipo}": {
      "get": {
        "description": "Retorna convênios filtrados pelo tipo de faturamento.",
        "operationId": "ConveniosController_findByTipoFaturamento",
        "parameters": [
          {
            "name": "tipo",
            "required": true,
            "in": "path",
            "description": "Tipo de faturamento",
            "schema": {
              "enum": ["tiss", "proprio", "manual"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de convênios do tipo",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Convenio"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar convênios por tipo de faturamento",
        "tags": ["Convênios"]
      }
    },
    "/api/v1/convenios/{id}/autorizacao": {
      "get": {
        "description": "Verifica se o convênio requer autorização e/ou senha.",
        "operationId": "ConveniosController_verificarAutorizacao",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do convênio",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requisitos de autorização",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "requerAutorizacao": {
                      "type": "boolean"
                    },
                    "requerSenha": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Verificar requisitos de autorização",
        "tags": ["Convênios"]
      }
    },
    "/api/v1/convenios/{id}/regras": {
      "get": {
        "description": "Retorna as regras específicas e configurações do convênio.",
        "operationId": "ConveniosController_getRegrasConvenio",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do convênio",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Regras do convênio",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "percentualDesconto": {
                      "type": "number"
                    },
                    "tabelaPrecos": {
                      "type": "string"
                    },
                    "validadeGuiaDias": {
                      "type": "number"
                    },
                    "regrasEspecificas": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obter regras do convênio",
        "tags": ["Convênios"]
      }
    },
    "/api/v1/convenios/codigo/{codigo}": {
      "get": {
        "operationId": "ConvenioController_findByCodigo",
        "parameters": [
          {
            "name": "codigo",
            "required": true,
            "in": "path",
            "description": "Código do convênio",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Convênio encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Convenio"
                }
              }
            }
          },
          "404": {
            "description": "Convênio não encontrado"
          }
        },
        "summary": "Buscar convênio por código",
        "tags": ["Convênios"]
      }
    },
    "/api/v1/convenios/{id}": {
      "get": {
        "operationId": "ConvenioController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do convênio",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Convênio encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Convenio"
                }
              }
            }
          },
          "404": {
            "description": "Convênio não encontrado"
          }
        },
        "summary": "Buscar convênio por ID",
        "tags": ["Convênios"]
      },
      "patch": {
        "operationId": "ConvenioController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do convênio",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConvenioDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Convênio atualizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Convenio"
                }
              }
            }
          },
          "404": {
            "description": "Convênio não encontrado"
          },
          "409": {
            "description": "Conflito - Código ou CNPJ já existente"
          }
        },
        "summary": "Atualizar convênio",
        "tags": ["Convênios"]
      },
      "delete": {
        "operationId": "ConvenioController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do convênio",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Convênio excluído"
          },
          "404": {
            "description": "Convênio não encontrado"
          }
        },
        "summary": "Excluir convênio",
        "tags": ["Convênios"]
      }
    },
    "/api/v1/tipos-exame": {
      "post": {
        "operationId": "TiposExameController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTipoExameDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tipo de exame criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoExame"
                }
              }
            }
          },
          "409": {
            "description": "Tipo de exame com este código já existe"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Criar novo tipo de exame",
        "tags": ["Tipos de Exame"]
      },
      "get": {
        "operationId": "TiposExameController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número da página",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Itens por página",
            "schema": {
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Filtrar por status",
            "schema": {
              "enum": ["ativo", "inativo"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de tipos de exame retornada com sucesso"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar todos os tipos de exame",
        "tags": ["Tipos de Exame"]
      }
    },
    "/api/v1/tipos-exame/ativos": {
      "get": {
        "operationId": "TiposExameController_findAtivos",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de tipos de exame ativos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TipoExame"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar apenas tipos de exame ativos",
        "tags": ["Tipos de Exame"]
      }
    },
    "/api/v1/tipos-exame/com-agendamento": {
      "get": {
        "operationId": "TiposExameController_findComAgendamento",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de tipos que requerem agendamento",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TipoExame"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar tipos que requerem agendamento",
        "tags": ["Tipos de Exame"]
      }
    },
    "/api/v1/tipos-exame/com-autorizacao": {
      "get": {
        "operationId": "TiposExameController_findComAutorizacao",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de tipos que requerem autorização",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TipoExame"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar tipos que requerem autorização",
        "tags": ["Tipos de Exame"]
      }
    },
    "/api/v1/tipos-exame/domiciliares": {
      "get": {
        "operationId": "TiposExameController_findDomiciliares",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de tipos que permitem coleta domiciliar",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TipoExame"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar tipos que permitem coleta domiciliar",
        "tags": ["Tipos de Exame"]
      }
    },
    "/api/v1/tipos-exame/{id}": {
      "get": {
        "operationId": "TiposExameController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do tipo de exame",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tipo de exame encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoExame"
                }
              }
            }
          },
          "404": {
            "description": "Tipo de exame não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar tipo de exame por ID",
        "tags": ["Tipos de Exame"]
      },
      "patch": {
        "operationId": "TiposExameController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do tipo de exame",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTipoExameDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tipo de exame atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoExame"
                }
              }
            }
          },
          "404": {
            "description": "Tipo de exame não encontrado"
          },
          "409": {
            "description": "Código já existe em outro tipo"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Atualizar tipo de exame",
        "tags": ["Tipos de Exame"]
      },
      "delete": {
        "operationId": "TiposExameController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do tipo de exame",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tipo de exame desativado com sucesso"
          },
          "404": {
            "description": "Tipo de exame não encontrado"
          },
          "409": {
            "description": "Não é possível excluir tipo com exames vinculados"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Desativar tipo de exame",
        "tags": ["Tipos de Exame"]
      }
    },
    "/api/v1/tipos-exame/codigo/{codigo}": {
      "get": {
        "operationId": "TiposExameController_findByCodigo",
        "parameters": [
          {
            "name": "codigo",
            "required": true,
            "in": "path",
            "description": "Código do tipo de exame",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tipo de exame encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoExame"
                }
              }
            }
          },
          "404": {
            "description": "Tipo de exame não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar tipo de exame por código",
        "tags": ["Tipos de Exame"]
      }
    },
    "/api/v1/agendas": {
      "post": {
        "operationId": "AgendasController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAgendaDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Agenda criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agenda"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Criar nova agenda",
        "tags": ["Agendas"]
      },
      "get": {
        "operationId": "AgendasController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de agendas retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Agenda"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar todas as agendas",
        "tags": ["Agendas"]
      }
    },
    "/api/v1/agendas/{id}": {
      "get": {
        "operationId": "AgendasController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da agenda",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Agenda encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agenda"
                }
              }
            }
          },
          "404": {
            "description": "Agenda não encontrada"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar agenda por ID",
        "tags": ["Agendas"]
      },
      "patch": {
        "operationId": "AgendasController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da agenda",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAgendaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Agenda atualizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agenda"
                }
              }
            }
          },
          "404": {
            "description": "Agenda não encontrada"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Atualizar agenda",
        "tags": ["Agendas"]
      },
      "delete": {
        "operationId": "AgendasController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da agenda",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Agenda removida com sucesso"
          },
          "404": {
            "description": "Agenda não encontrada"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Remover agenda",
        "tags": ["Agendas"]
      }
    },
    "/api/v1/agendas/{id}/bloqueios": {
      "post": {
        "operationId": "AgendasController_addBloqueio",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da agenda",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBloqueioDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Bloqueio adicionado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BloqueioHorario"
                }
              }
            }
          },
          "404": {
            "description": "Agenda não encontrada"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Adicionar bloqueio de horário em agenda",
        "tags": ["Agendas"]
      }
    },
    "/api/v1/agendas/bloqueios/{bloqueioId}": {
      "delete": {
        "operationId": "AgendasController_removeBloqueio",
        "parameters": [
          {
            "name": "bloqueioId",
            "required": true,
            "in": "path",
            "description": "ID do bloqueio",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bloqueio removido com sucesso"
          },
          "404": {
            "description": "Bloqueio não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Remover bloqueio de horário",
        "tags": ["Agendas"]
      }
    },
    "/api/v1/profissionais": {
      "post": {
        "operationId": "ProfissionaisController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProfissionalDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Profissional cadastrado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profissional"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos"
          },
          "409": {
            "description": "CPF já cadastrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Cadastrar novo profissional",
        "tags": ["Profissionais"]
      },
      "get": {
        "operationId": "ProfissionaisController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de profissionais retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Profissional"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar todos os profissionais",
        "tags": ["Profissionais"]
      }
    },
    "/api/v1/profissionais/{id}": {
      "get": {
        "operationId": "ProfissionaisController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do profissional",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Profissional encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profissional"
                }
              }
            }
          },
          "404": {
            "description": "Profissional não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar profissional por ID",
        "tags": ["Profissionais"]
      },
      "patch": {
        "operationId": "ProfissionaisController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do profissional",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfissionalDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profissional atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profissional"
                }
              }
            }
          },
          "404": {
            "description": "Profissional não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Atualizar dados do profissional",
        "tags": ["Profissionais"]
      },
      "delete": {
        "operationId": "ProfissionaisController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do profissional",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Profissional removido com sucesso"
          },
          "404": {
            "description": "Profissional não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Remover profissional",
        "tags": ["Profissionais"]
      }
    },
    "/api/v1/profissionais/cpf/{cpf}": {
      "get": {
        "operationId": "ProfissionaisController_findByCpf",
        "parameters": [
          {
            "name": "cpf",
            "required": true,
            "in": "path",
            "description": "CPF do profissional",
            "schema": {
              "example": "123.456.789-00",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Profissional encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profissional"
                }
              }
            }
          },
          "404": {
            "description": "Profissional não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar profissional por CPF",
        "tags": ["Profissionais"]
      }
    },
    "/api/v1/profissionais/{id}/documentos": {
      "post": {
        "operationId": "ProfissionaisController_addDocumento",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do profissional",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDocumentoDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Documento adicionado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentoProfissional"
                }
              }
            }
          },
          "404": {
            "description": "Profissional não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Adicionar documento ao profissional",
        "tags": ["Profissionais"]
      }
    },
    "/api/v1/profissionais/documentos/{documentoId}": {
      "patch": {
        "operationId": "ProfissionaisController_updateDocumento",
        "parameters": [
          {
            "name": "documentoId",
            "required": true,
            "in": "path",
            "description": "ID do documento",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDocumentoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Documento atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentoProfissional"
                }
              }
            }
          },
          "404": {
            "description": "Documento não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Atualizar documento do profissional",
        "tags": ["Profissionais"]
      },
      "delete": {
        "operationId": "ProfissionaisController_removeDocumento",
        "parameters": [
          {
            "name": "documentoId",
            "required": true,
            "in": "path",
            "description": "ID do documento",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Documento removido com sucesso"
          },
          "404": {
            "description": "Documento não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Remover documento do profissional",
        "tags": ["Profissionais"]
      }
    },
    "/api/v1/profissionais/{id}/agendas/{agendaId}": {
      "post": {
        "operationId": "ProfissionaisController_vincularAgenda",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do profissional",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "agendaId",
            "required": true,
            "in": "path",
            "description": "ID da agenda",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Agenda vinculada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profissional"
                }
              }
            }
          },
          "404": {
            "description": "Profissional ou agenda não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Vincular agenda ao profissional",
        "tags": ["Profissionais"]
      },
      "delete": {
        "operationId": "ProfissionaisController_desvincularAgenda",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do profissional",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "agendaId",
            "required": true,
            "in": "path",
            "description": "ID da agenda",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Agenda desvinculada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profissional"
                }
              }
            }
          },
          "404": {
            "description": "Profissional ou agenda não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Desvincular agenda do profissional",
        "tags": ["Profissionais"]
      }
    },
    "/api/v1/empresas": {
      "post": {
        "operationId": "EmpresasController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmpresaDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Empresa cadastrada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empresa"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos"
          },
          "409": {
            "description": "CNPJ já cadastrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Cadastrar nova empresa",
        "tags": ["Empresas"]
      },
      "get": {
        "operationId": "EmpresasController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de empresas retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Empresa"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar todas as empresas",
        "tags": ["Empresas"]
      }
    },
    "/api/v1/empresas/tipo/{tipo}": {
      "get": {
        "operationId": "EmpresasController_findByTipo",
        "parameters": [
          {
            "name": "tipo",
            "required": true,
            "in": "path",
            "description": "Tipo de empresa",
            "schema": {
              "enum": [
                "CONVENIOS",
                "LABORATORIO_APOIO",
                "TELEMEDICINA",
                "FORNECEDORES",
                "PRESTADORES_SERVICOS"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de empresas do tipo especificado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Empresa"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar empresas por tipo",
        "tags": ["Empresas"]
      }
    },
    "/api/v1/empresas/cnpj/{cnpj}": {
      "get": {
        "operationId": "EmpresasController_findByCnpj",
        "parameters": [
          {
            "name": "cnpj",
            "required": true,
            "in": "path",
            "description": "CNPJ da empresa",
            "schema": {
              "example": "00.000.000/0001-00",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Empresa encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empresa"
                }
              }
            }
          },
          "404": {
            "description": "Empresa não encontrada"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar empresa por CNPJ",
        "tags": ["Empresas"]
      }
    },
    "/api/v1/empresas/{id}": {
      "get": {
        "operationId": "EmpresasController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da empresa",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Empresa encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empresa"
                }
              }
            }
          },
          "404": {
            "description": "Empresa não encontrada"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar empresa por ID",
        "tags": ["Empresas"]
      },
      "patch": {
        "operationId": "EmpresasController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da empresa",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmpresaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Empresa atualizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empresa"
                }
              }
            }
          },
          "404": {
            "description": "Empresa não encontrada"
          },
          "409": {
            "description": "CNPJ já cadastrado para outra empresa"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Atualizar dados da empresa",
        "tags": ["Empresas"]
      },
      "delete": {
        "operationId": "EmpresasController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da empresa",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Empresa removida com sucesso"
          },
          "404": {
            "description": "Empresa não encontrada"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Remover empresa (soft delete)",
        "tags": ["Empresas"]
      }
    },
    "/api/v1/empresas/{id}/ativar": {
      "patch": {
        "operationId": "EmpresasController_activate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da empresa",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Empresa ativada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empresa"
                }
              }
            }
          },
          "404": {
            "description": "Empresa não encontrada"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Ativar empresa",
        "tags": ["Empresas"]
      }
    },
    "/api/v1/empresas/{id}/desativar": {
      "patch": {
        "operationId": "EmpresasController_deactivate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da empresa",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Empresa desativada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empresa"
                }
              }
            }
          },
          "404": {
            "description": "Empresa não encontrada"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Desativar empresa",
        "tags": ["Empresas"]
      }
    },
    "/api/v1/convenios/search": {
      "get": {
        "operationId": "ConvenioController_search",
        "parameters": [
          {
            "name": "q",
            "required": true,
            "in": "query",
            "description": "Termo de busca",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resultados da busca",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Convenio"
                  }
                }
              }
            }
          }
        },
        "summary": "Buscar convênios",
        "tags": ["Convênios"]
      }
    },
    "/api/v1/convenios/cnpj/{cnpj}": {
      "get": {
        "operationId": "ConvenioController_findByCnpj",
        "parameters": [
          {
            "name": "cnpj",
            "required": true,
            "in": "path",
            "description": "CNPJ do convênio",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Convênio encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Convenio"
                }
              }
            }
          },
          "404": {
            "description": "Convênio não encontrado"
          }
        },
        "summary": "Buscar convênio por CNPJ",
        "tags": ["Convênios"]
      }
    },
    "/api/v1/convenios/{id}/toggle-status": {
      "patch": {
        "operationId": "ConvenioController_toggleStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do convênio",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status alterado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Convenio"
                }
              }
            }
          },
          "404": {
            "description": "Convênio não encontrado"
          }
        },
        "summary": "Alternar status do convênio (ativo/inativo)",
        "tags": ["Convênios"]
      }
    },
    "/api/v1/planos": {
      "post": {
        "operationId": "PlanoController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanoDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Plano criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plano"
                }
              }
            }
          },
          "404": {
            "description": "Convênio não encontrado"
          },
          "409": {
            "description": "Conflito - Código já existente para o convênio"
          }
        },
        "summary": "Criar novo plano",
        "tags": ["Planos"]
      },
      "get": {
        "operationId": "PlanoController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de planos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plano"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar todos os planos",
        "tags": ["Planos"]
      }
    },
    "/api/v1/planos/ativos": {
      "get": {
        "operationId": "PlanoController_findAtivos",
        "parameters": [
          {
            "name": "convenioId",
            "required": false,
            "in": "query",
            "description": "Filtrar por convênio",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de planos ativos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plano"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar planos ativos",
        "tags": ["Planos"]
      }
    },
    "/api/v1/planos/convenio/{convenioId}": {
      "get": {
        "operationId": "PlanoController_findByConvenio",
        "parameters": [
          {
            "name": "convenioId",
            "required": true,
            "in": "path",
            "description": "ID do convênio",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de planos do convênio",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plano"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar planos de um convênio",
        "tags": ["Planos"]
      }
    },
    "/api/v1/planos/convenio/{convenioId}/codigo/{codigo}": {
      "get": {
        "operationId": "PlanoController_findByCodigo",
        "parameters": [
          {
            "name": "convenioId",
            "required": true,
            "in": "path",
            "description": "ID do convênio",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "codigo",
            "required": true,
            "in": "path",
            "description": "Código do plano",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plano encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plano"
                }
              }
            }
          },
          "404": {
            "description": "Plano não encontrado"
          }
        },
        "summary": "Buscar plano por código dentro do convênio",
        "tags": ["Planos"]
      }
    },
    "/api/v1/planos/{id}": {
      "get": {
        "operationId": "PlanoController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do plano",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plano encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plano"
                }
              }
            }
          },
          "404": {
            "description": "Plano não encontrado"
          }
        },
        "summary": "Buscar plano por ID",
        "tags": ["Planos"]
      },
      "patch": {
        "operationId": "PlanoController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do plano",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Plano atualizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plano"
                }
              }
            }
          },
          "404": {
            "description": "Plano não encontrado"
          },
          "409": {
            "description": "Conflito - Código já existente"
          }
        },
        "summary": "Atualizar plano",
        "tags": ["Planos"]
      },
      "delete": {
        "operationId": "PlanoController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do plano",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Plano excluído"
          },
          "404": {
            "description": "Plano não encontrado"
          }
        },
        "summary": "Excluir plano",
        "tags": ["Planos"]
      }
    },
    "/api/v1/planos/{id}/verificar-carencia": {
      "get": {
        "operationId": "PlanoController_verificarCarencia",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do plano",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataAdesao",
            "required": true,
            "in": "query",
            "description": "Data de adesão do beneficiário",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Carência verificada"
          }
        },
        "summary": "Verificar carência do plano",
        "tags": ["Planos"]
      }
    },
    "/api/v1/planos/{id}/calcular-coparticipacao": {
      "get": {
        "operationId": "PlanoController_calcularCoparticipacao",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do plano",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "valor",
            "required": true,
            "in": "query",
            "description": "Valor do procedimento",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Coparticipação calculada"
          }
        },
        "summary": "Calcular coparticipação",
        "tags": ["Planos"]
      }
    },
    "/api/v1/instrucoes": {
      "post": {
        "operationId": "InstrucaoController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInstrucaoDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Instrução criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Instrucao"
                }
              }
            }
          },
          "404": {
            "description": "Convênio não encontrado"
          }
        },
        "summary": "Criar nova instrução",
        "tags": ["Instruções"]
      },
      "get": {
        "operationId": "InstrucaoController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de instruções",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Instrucao"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar todas as instruções",
        "tags": ["Instruções"]
      }
    },
    "/api/v1/instrucoes/convenio/{convenioId}": {
      "get": {
        "operationId": "InstrucaoController_findByConvenio",
        "parameters": [
          {
            "name": "convenioId",
            "required": true,
            "in": "path",
            "description": "ID do convênio",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de instruções do convênio",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Instrucao"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar instruções de um convênio",
        "tags": ["Instruções"]
      }
    },
    "/api/v1/instrucoes/convenio/{convenioId}/vigentes": {
      "get": {
        "operationId": "InstrucaoController_findVigentes",
        "parameters": [
          {
            "name": "convenioId",
            "required": true,
            "in": "path",
            "description": "ID do convênio",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "data",
            "required": false,
            "in": "query",
            "description": "Data de referência",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de instruções vigentes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Instrucao"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar instruções vigentes de um convênio",
        "tags": ["Instruções"]
      }
    },
    "/api/v1/instrucoes/convenio/{convenioId}/categoria/{categoria}": {
      "get": {
        "operationId": "InstrucaoController_findByCategoria",
        "parameters": [
          {
            "name": "convenioId",
            "required": true,
            "in": "path",
            "description": "ID do convênio",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoria",
            "required": true,
            "in": "path",
            "description": "Categoria da instrução",
            "schema": {
              "enum": [
                "autorizacao_previa",
                "faturamento",
                "atendimento",
                "documentacao",
                "auditoria",
                "urgencia_emergencia",
                "internacao",
                "sadt"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de instruções da categoria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Instrucao"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar instruções por categoria",
        "tags": ["Instruções"]
      }
    },
    "/api/v1/instrucoes/convenio/{convenioId}/proximas-vencer": {
      "get": {
        "operationId": "InstrucaoController_findProximasVencer",
        "parameters": [
          {
            "name": "convenioId",
            "required": true,
            "in": "path",
            "description": "ID do convênio",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dias",
            "required": false,
            "in": "query",
            "description": "Dias de antecedência",
            "schema": {
              "default": 30,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de instruções próximas do vencimento",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Instrucao"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar instruções próximas do vencimento",
        "tags": ["Instruções"]
      }
    },
    "/api/v1/instrucoes/convenio/{convenioId}/search": {
      "get": {
        "operationId": "InstrucaoController_search",
        "parameters": [
          {
            "name": "convenioId",
            "required": true,
            "in": "path",
            "description": "ID do convênio",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "required": true,
            "in": "query",
            "description": "Termo de busca",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resultados da busca",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Instrucao"
                  }
                }
              }
            }
          }
        },
        "summary": "Buscar instruções",
        "tags": ["Instruções"]
      }
    },
    "/api/v1/instrucoes/{id}": {
      "get": {
        "operationId": "InstrucaoController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da instrução",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Instrução encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Instrucao"
                }
              }
            }
          },
          "404": {
            "description": "Instrução não encontrada"
          }
        },
        "summary": "Buscar instrução por ID",
        "tags": ["Instruções"]
      },
      "patch": {
        "operationId": "InstrucaoController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da instrução",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInstrucaoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Instrução atualizada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Instrucao"
                }
              }
            }
          },
          "404": {
            "description": "Instrução não encontrada"
          }
        },
        "summary": "Atualizar instrução",
        "tags": ["Instruções"]
      },
      "delete": {
        "operationId": "InstrucaoController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da instrução",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Instrução excluída"
          },
          "404": {
            "description": "Instrução não encontrada"
          }
        },
        "summary": "Excluir instrução",
        "tags": ["Instruções"]
      }
    },
    "/api/v1/instrucoes/{id}/historico": {
      "get": {
        "operationId": "InstrucaoController_getHistorico",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da instrução",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Histórico da instrução"
          },
          "404": {
            "description": "Instrução não encontrada"
          }
        },
        "summary": "Obter histórico da instrução",
        "tags": ["Instruções"]
      }
    },
    "/api/v1/instrucoes/{id}/toggle-status": {
      "patch": {
        "operationId": "InstrucaoController_toggleStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da instrução",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status alterado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Instrucao"
                }
              }
            }
          },
          "404": {
            "description": "Instrução não encontrada"
          }
        },
        "summary": "Alternar status da instrução",
        "tags": ["Instruções"]
      }
    },
    "/api/v1/laboratorios": {
      "post": {
        "operationId": "LaboratorioController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLaboratorioDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Laboratório criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Laboratorio"
                }
              }
            }
          },
          "409": {
            "description": "Conflito - Código ou CNPJ já existente"
          }
        },
        "summary": "Criar novo laboratório",
        "tags": ["Laboratórios"]
      },
      "get": {
        "operationId": "LaboratorioController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de laboratórios",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Laboratorio"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar todos os laboratórios",
        "tags": ["Laboratórios"]
      }
    },
    "/api/v1/laboratorios/ativos": {
      "get": {
        "operationId": "LaboratorioController_findAtivos",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de laboratórios ativos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Laboratorio"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar laboratórios ativos",
        "tags": ["Laboratórios"]
      }
    },
    "/api/v1/laboratorios/urgencia": {
      "get": {
        "operationId": "LaboratorioController_findAceitamUrgencia",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de laboratórios que aceitam urgência",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Laboratorio"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar laboratórios que aceitam urgência",
        "tags": ["Laboratórios"]
      }
    },
    "/api/v1/laboratorios/search": {
      "get": {
        "operationId": "LaboratorioController_search",
        "parameters": [
          {
            "name": "q",
            "required": true,
            "in": "query",
            "description": "Termo de busca",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resultados da busca",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Laboratorio"
                  }
                }
              }
            }
          }
        },
        "summary": "Buscar laboratórios",
        "tags": ["Laboratórios"]
      }
    },
    "/api/v1/laboratorios/integracao/{tipo}": {
      "get": {
        "operationId": "LaboratorioController_findByIntegracao",
        "parameters": [
          {
            "name": "tipo",
            "required": true,
            "in": "path",
            "schema": {
              "enum": ["api", "webservice", "manual", "ftp", "email"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Laboratórios com o tipo de integração especificado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Laboratorio"
                  }
                }
              }
            }
          }
        },
        "summary": "Buscar laboratórios por tipo de integração",
        "tags": ["Laboratórios"]
      }
    },
    "/api/v1/laboratorios/codigo/{codigo}": {
      "get": {
        "operationId": "LaboratorioController_findByCodigo",
        "parameters": [
          {
            "name": "codigo",
            "required": true,
            "in": "path",
            "description": "Código do laboratório",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Laboratório encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Laboratorio"
                }
              }
            }
          },
          "404": {
            "description": "Laboratório não encontrado"
          }
        },
        "summary": "Buscar laboratório por código",
        "tags": ["Laboratórios"]
      }
    },
    "/api/v1/laboratorios/cnpj/{cnpj}": {
      "get": {
        "operationId": "LaboratorioController_findByCnpj",
        "parameters": [
          {
            "name": "cnpj",
            "required": true,
            "in": "path",
            "description": "CNPJ do laboratório",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Laboratório encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Laboratorio"
                }
              }
            }
          },
          "404": {
            "description": "Laboratório não encontrado"
          }
        },
        "summary": "Buscar laboratório por CNPJ",
        "tags": ["Laboratórios"]
      }
    },
    "/api/v1/laboratorios/{id}": {
      "get": {
        "operationId": "LaboratorioController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do laboratório",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Laboratório encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Laboratorio"
                }
              }
            }
          },
          "404": {
            "description": "Laboratório não encontrado"
          }
        },
        "summary": "Buscar laboratório por ID",
        "tags": ["Laboratórios"]
      },
      "patch": {
        "operationId": "LaboratorioController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do laboratório",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLaboratorioDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Laboratório atualizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Laboratorio"
                }
              }
            }
          },
          "404": {
            "description": "Laboratório não encontrado"
          },
          "409": {
            "description": "Conflito - Código ou CNPJ já existente"
          }
        },
        "summary": "Atualizar laboratório",
        "tags": ["Laboratórios"]
      },
      "delete": {
        "operationId": "LaboratorioController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do laboratório",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Laboratório excluído"
          },
          "404": {
            "description": "Laboratório não encontrado"
          }
        },
        "summary": "Excluir laboratório",
        "tags": ["Laboratórios"]
      }
    },
    "/api/v1/laboratorios/{id}/toggle-status": {
      "patch": {
        "operationId": "LaboratorioController_toggleStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do laboratório",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status alterado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Laboratorio"
                }
              }
            }
          },
          "404": {
            "description": "Laboratório não encontrado"
          }
        },
        "summary": "Alternar status do laboratório (ativo/inativo)",
        "tags": ["Laboratórios"]
      }
    },
    "/api/v1/telemedicina": {
      "post": {
        "operationId": "TelemedicinaController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTelemedicinaDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Telemedicina criada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Telemedicina"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos."
          },
          "409": {
            "description": "Código ou CNPJ já existe."
          }
        },
        "summary": "Criar nova empresa de telemedicina",
        "tags": ["Telemedicina"]
      },
      "get": {
        "operationId": "TelemedicinaController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de telemedicinas retornada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Telemedicina"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar todas as empresas de telemedicina",
        "tags": ["Telemedicina"]
      }
    },
    "/api/v1/telemedicina/ativos": {
      "get": {
        "operationId": "TelemedicinaController_findAtivos",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de telemedicinas ativas.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Telemedicina"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar telemedicinas ativas",
        "tags": ["Telemedicina"]
      }
    },
    "/api/v1/telemedicina/search": {
      "get": {
        "operationId": "TelemedicinaController_search",
        "parameters": [
          {
            "name": "q",
            "required": true,
            "in": "query",
            "description": "Termo de busca",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resultados da busca.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Telemedicina"
                  }
                }
              }
            }
          }
        },
        "summary": "Buscar telemedicinas por termo",
        "tags": ["Telemedicina"]
      }
    },
    "/api/v1/telemedicina/estatisticas": {
      "get": {
        "operationId": "TelemedicinaController_getEstatisticas",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Estatísticas retornadas com sucesso."
          }
        },
        "summary": "Obter estatísticas das telemedicinas",
        "tags": ["Telemedicina"]
      }
    },
    "/api/v1/telemedicina/integracao/{tipo}": {
      "get": {
        "operationId": "TelemedicinaController_findByIntegracao",
        "parameters": [
          {
            "name": "tipo",
            "required": true,
            "in": "path",
            "description": "Tipo de integração",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de telemedicinas por tipo de integração.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Telemedicina"
                  }
                }
              }
            }
          }
        },
        "summary": "Buscar telemedicinas por tipo de integração",
        "tags": ["Telemedicina"]
      }
    },
    "/api/v1/telemedicina/plataforma/{tipo}": {
      "get": {
        "operationId": "TelemedicinaController_findByPlataforma",
        "parameters": [
          {
            "name": "tipo",
            "required": true,
            "in": "path",
            "description": "Tipo de plataforma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de telemedicinas por tipo de plataforma.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Telemedicina"
                  }
                }
              }
            }
          }
        },
        "summary": "Buscar telemedicinas por tipo de plataforma",
        "tags": ["Telemedicina"]
      }
    },
    "/api/v1/telemedicina/codigo/{codigo}": {
      "get": {
        "operationId": "TelemedicinaController_findByCodigo",
        "parameters": [
          {
            "name": "codigo",
            "required": true,
            "in": "path",
            "description": "Código da telemedicina",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Telemedicina encontrada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Telemedicina"
                }
              }
            }
          },
          "404": {
            "description": "Telemedicina não encontrada."
          }
        },
        "summary": "Buscar telemedicina por código",
        "tags": ["Telemedicina"]
      }
    },
    "/api/v1/telemedicina/cnpj/{cnpj}": {
      "get": {
        "operationId": "TelemedicinaController_findByCnpj",
        "parameters": [
          {
            "name": "cnpj",
            "required": true,
            "in": "path",
            "description": "CNPJ da empresa",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Telemedicina encontrada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Telemedicina"
                }
              }
            }
          },
          "404": {
            "description": "Telemedicina não encontrada."
          }
        },
        "summary": "Buscar telemedicina por CNPJ",
        "tags": ["Telemedicina"]
      }
    },
    "/api/v1/telemedicina/{id}": {
      "get": {
        "operationId": "TelemedicinaController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da telemedicina",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Telemedicina encontrada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Telemedicina"
                }
              }
            }
          },
          "404": {
            "description": "Telemedicina não encontrada."
          }
        },
        "summary": "Buscar telemedicina por ID",
        "tags": ["Telemedicina"]
      },
      "patch": {
        "operationId": "TelemedicinaController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da telemedicina",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTelemedicinaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Telemedicina atualizada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Telemedicina"
                }
              }
            }
          },
          "404": {
            "description": "Telemedicina não encontrada."
          },
          "409": {
            "description": "Código ou CNPJ já existe."
          }
        },
        "summary": "Atualizar telemedicina",
        "tags": ["Telemedicina"]
      },
      "delete": {
        "operationId": "TelemedicinaController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da telemedicina",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Telemedicina removida com sucesso."
          },
          "404": {
            "description": "Telemedicina não encontrada."
          }
        },
        "summary": "Remover telemedicina",
        "tags": ["Telemedicina"]
      }
    },
    "/api/v1/telemedicina/{id}/toggle-status": {
      "patch": {
        "operationId": "TelemedicinaController_toggleStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da telemedicina",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status alterado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Telemedicina"
                }
              }
            }
          },
          "404": {
            "description": "Telemedicina não encontrada."
          }
        },
        "summary": "Alternar status da telemedicina",
        "tags": ["Telemedicina"]
      }
    },
    "/api/v1/telemedicina/{id}/status-integracao": {
      "patch": {
        "operationId": "TelemedicinaController_updateStatusIntegracao",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da telemedicina",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status da integração atualizado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Telemedicina"
                }
              }
            }
          }
        },
        "summary": "Atualizar status da integração",
        "tags": ["Telemedicina"]
      }
    },
    "/api/v1/telemedicina-exames": {
      "post": {
        "operationId": "TelemedicinaExameController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTelemedicinaExameDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Vínculo criado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TelemedicinaExame"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos."
          },
          "409": {
            "description": "Vínculo já existe."
          }
        },
        "summary": "Vincular exame à telemedicina",
        "tags": ["Telemedicina - Exames"]
      },
      "get": {
        "operationId": "TelemedicinaExameController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de vínculos retornada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TelemedicinaExame"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar todos os vínculos telemedicina-exame",
        "tags": ["Telemedicina - Exames"]
      }
    },
    "/api/v1/telemedicina-exames/ativos": {
      "get": {
        "operationId": "TelemedicinaExameController_findAtivos",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de vínculos ativos.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TelemedicinaExame"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar vínculos ativos",
        "tags": ["Telemedicina - Exames"]
      }
    },
    "/api/v1/telemedicina-exames/telemedicina/{telemedicinaId}": {
      "get": {
        "operationId": "TelemedicinaExameController_findByTelemedicina",
        "parameters": [
          {
            "name": "telemedicinaId",
            "required": true,
            "in": "path",
            "description": "ID da telemedicina",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de exames vinculados.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TelemedicinaExame"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar exames vinculados a uma telemedicina",
        "tags": ["Telemedicina - Exames"]
      }
    },
    "/api/v1/telemedicina-exames/exame/{exameId}": {
      "get": {
        "operationId": "TelemedicinaExameController_findByExame",
        "parameters": [
          {
            "name": "exameId",
            "required": true,
            "in": "path",
            "description": "ID do exame",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de telemedicinas vinculadas.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TelemedicinaExame"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar telemedicinas vinculadas a um exame",
        "tags": ["Telemedicina - Exames"]
      }
    },
    "/api/v1/telemedicina-exames/sem-vinculo/{telemedicinaId}": {
      "get": {
        "operationId": "TelemedicinaExameController_findSemVinculo",
        "parameters": [
          {
            "name": "telemedicinaId",
            "required": true,
            "in": "path",
            "description": "ID da telemedicina",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de exames sem vínculo."
          }
        },
        "summary": "Listar exames sem vínculo com a telemedicina",
        "tags": ["Telemedicina - Exames"]
      }
    },
    "/api/v1/telemedicina-exames/search/{telemedicinaId}": {
      "get": {
        "operationId": "TelemedicinaExameController_search",
        "parameters": [
          {
            "name": "telemedicinaId",
            "required": true,
            "in": "path",
            "description": "ID da telemedicina",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "required": true,
            "in": "query",
            "description": "Termo de busca",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resultados da busca.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TelemedicinaExame"
                  }
                }
              }
            }
          }
        },
        "summary": "Buscar vínculos por termo",
        "tags": ["Telemedicina - Exames"]
      }
    },
    "/api/v1/telemedicina-exames/estatisticas": {
      "get": {
        "operationId": "TelemedicinaExameController_getEstatisticas",
        "parameters": [
          {
            "name": "telemedicinaId",
            "required": false,
            "in": "query",
            "description": "ID da telemedicina (opcional)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Estatísticas retornadas com sucesso."
          }
        },
        "summary": "Obter estatísticas dos vínculos",
        "tags": ["Telemedicina - Exames"]
      }
    },
    "/api/v1/telemedicina-exames/vincular-automaticamente/{telemedicinaId}": {
      "post": {
        "operationId": "TelemedicinaExameController_vincularAutomaticamente",
        "parameters": [
          {
            "name": "telemedicinaId",
            "required": true,
            "in": "path",
            "description": "ID da telemedicina",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vinculação automática realizada."
          }
        },
        "summary": "Vincular exames automaticamente",
        "tags": ["Telemedicina - Exames"]
      }
    },
    "/api/v1/telemedicina-exames/{id}": {
      "get": {
        "operationId": "TelemedicinaExameController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do vínculo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vínculo encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TelemedicinaExame"
                }
              }
            }
          },
          "404": {
            "description": "Vínculo não encontrado."
          }
        },
        "summary": "Buscar vínculo por ID",
        "tags": ["Telemedicina - Exames"]
      },
      "patch": {
        "operationId": "TelemedicinaExameController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do vínculo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTelemedicinaExameDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vínculo atualizado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TelemedicinaExame"
                }
              }
            }
          },
          "404": {
            "description": "Vínculo não encontrado."
          },
          "409": {
            "description": "Vínculo já existe."
          }
        },
        "summary": "Atualizar vínculo telemedicina-exame",
        "tags": ["Telemedicina - Exames"]
      },
      "delete": {
        "operationId": "TelemedicinaExameController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do vínculo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vínculo removido com sucesso."
          },
          "404": {
            "description": "Vínculo não encontrado."
          }
        },
        "summary": "Remover vínculo telemedicina-exame",
        "tags": ["Telemedicina - Exames"]
      }
    },
    "/api/v1/telemedicina-exames/{id}/toggle-status": {
      "patch": {
        "operationId": "TelemedicinaExameController_toggleStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do vínculo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status alterado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TelemedicinaExame"
                }
              }
            }
          },
          "404": {
            "description": "Vínculo não encontrado."
          }
        },
        "summary": "Alternar status do vínculo",
        "tags": ["Telemedicina - Exames"]
      }
    },
    "/api/v1/fornecedores": {
      "post": {
        "operationId": "FornecedorController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFornecedorDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Fornecedor criado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fornecedor"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos."
          },
          "409": {
            "description": "Código ou CNPJ já existe."
          }
        },
        "summary": "Criar novo fornecedor",
        "tags": ["Fornecedores"]
      },
      "get": {
        "operationId": "FornecedorController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de fornecedores retornada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Fornecedor"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar todos os fornecedores",
        "tags": ["Fornecedores"]
      }
    },
    "/api/v1/fornecedores/ativos": {
      "get": {
        "operationId": "FornecedorController_findAtivos",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de fornecedores ativos.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Fornecedor"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar fornecedores ativos",
        "tags": ["Fornecedores"]
      }
    },
    "/api/v1/fornecedores/pendentes": {
      "get": {
        "operationId": "FornecedorController_findPendentesAprovacao",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de fornecedores pendentes.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Fornecedor"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar fornecedores pendentes de aprovação",
        "tags": ["Fornecedores"]
      }
    },
    "/api/v1/fornecedores/search": {
      "get": {
        "operationId": "FornecedorController_search",
        "parameters": [
          {
            "name": "q",
            "required": true,
            "in": "query",
            "description": "Termo de busca",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resultados da busca.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Fornecedor"
                  }
                }
              }
            }
          }
        },
        "summary": "Buscar fornecedores por termo",
        "tags": ["Fornecedores"]
      }
    },
    "/api/v1/fornecedores/estatisticas": {
      "get": {
        "operationId": "FornecedorController_getEstatisticas",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Estatísticas retornadas com sucesso."
          }
        },
        "summary": "Obter estatísticas dos fornecedores",
        "tags": ["Fornecedores"]
      }
    },
    "/api/v1/fornecedores/regiao": {
      "get": {
        "operationId": "FornecedorController_getFornecedoresPorRegiao",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Fornecedores por região."
          }
        },
        "summary": "Obter fornecedores por região",
        "tags": ["Fornecedores"]
      }
    },
    "/api/v1/fornecedores/status/{status}": {
      "get": {
        "operationId": "FornecedorController_findByStatus",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "path",
            "description": "Status do fornecedor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de fornecedores por status.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Fornecedor"
                  }
                }
              }
            }
          }
        },
        "summary": "Buscar fornecedores por status",
        "tags": ["Fornecedores"]
      }
    },
    "/api/v1/fornecedores/categoria/{categoria}": {
      "get": {
        "operationId": "FornecedorController_findByCategoria",
        "parameters": [
          {
            "name": "categoria",
            "required": true,
            "in": "path",
            "description": "Categoria de insumos",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de fornecedores por categoria.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Fornecedor"
                  }
                }
              }
            }
          }
        },
        "summary": "Buscar fornecedores por categoria",
        "tags": ["Fornecedores"]
      }
    },
    "/api/v1/fornecedores/regiao/{estados}": {
      "get": {
        "operationId": "FornecedorController_findByRegiao",
        "parameters": [
          {
            "name": "estados",
            "required": true,
            "in": "path",
            "description": "Estados separados por vírgula (UF)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de fornecedores que atendem a região.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Fornecedor"
                  }
                }
              }
            }
          }
        },
        "summary": "Buscar fornecedores que atendem determinados estados",
        "tags": ["Fornecedores"]
      }
    },
    "/api/v1/fornecedores/codigo/{codigo}": {
      "get": {
        "operationId": "FornecedorController_findByCodigo",
        "parameters": [
          {
            "name": "codigo",
            "required": true,
            "in": "path",
            "description": "Código do fornecedor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fornecedor encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fornecedor"
                }
              }
            }
          },
          "404": {
            "description": "Fornecedor não encontrado."
          }
        },
        "summary": "Buscar fornecedor por código",
        "tags": ["Fornecedores"]
      }
    },
    "/api/v1/fornecedores/cnpj/{cnpj}": {
      "get": {
        "operationId": "FornecedorController_findByCnpj",
        "parameters": [
          {
            "name": "cnpj",
            "required": true,
            "in": "path",
            "description": "CNPJ da empresa",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fornecedor encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fornecedor"
                }
              }
            }
          },
          "404": {
            "description": "Fornecedor não encontrado."
          }
        },
        "summary": "Buscar fornecedor por CNPJ",
        "tags": ["Fornecedores"]
      }
    },
    "/api/v1/fornecedores/{id}": {
      "get": {
        "operationId": "FornecedorController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do fornecedor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fornecedor encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fornecedor"
                }
              }
            }
          },
          "404": {
            "description": "Fornecedor não encontrado."
          }
        },
        "summary": "Buscar fornecedor por ID",
        "tags": ["Fornecedores"]
      },
      "patch": {
        "operationId": "FornecedorController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do fornecedor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFornecedorDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Fornecedor atualizado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fornecedor"
                }
              }
            }
          },
          "404": {
            "description": "Fornecedor não encontrado."
          },
          "409": {
            "description": "Código ou CNPJ já existe."
          }
        },
        "summary": "Atualizar fornecedor",
        "tags": ["Fornecedores"]
      },
      "delete": {
        "operationId": "FornecedorController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do fornecedor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fornecedor removido com sucesso."
          },
          "404": {
            "description": "Fornecedor não encontrado."
          }
        },
        "summary": "Remover fornecedor",
        "tags": ["Fornecedores"]
      }
    },
    "/api/v1/fornecedores/{id}/toggle-status": {
      "patch": {
        "operationId": "FornecedorController_toggleStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do fornecedor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status alterado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fornecedor"
                }
              }
            }
          },
          "404": {
            "description": "Fornecedor não encontrado."
          }
        },
        "summary": "Alternar status do fornecedor",
        "tags": ["Fornecedores"]
      }
    },
    "/api/v1/fornecedores/{id}/aprovar": {
      "patch": {
        "operationId": "FornecedorController_aprovarFornecedor",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do fornecedor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fornecedor aprovado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fornecedor"
                }
              }
            }
          }
        },
        "summary": "Aprovar fornecedor",
        "tags": ["Fornecedores"]
      }
    },
    "/api/v1/fornecedores/{id}/reprovar": {
      "patch": {
        "operationId": "FornecedorController_reprovarFornecedor",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do fornecedor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fornecedor reprovado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fornecedor"
                }
              }
            }
          }
        },
        "summary": "Reprovar fornecedor",
        "tags": ["Fornecedores"]
      }
    },
    "/api/v1/fornecedores/{id}/avaliar": {
      "patch": {
        "operationId": "FornecedorController_atualizarAvaliacao",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do fornecedor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Avaliação registrada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Fornecedor"
                }
              }
            }
          }
        },
        "summary": "Avaliar fornecedor",
        "tags": ["Fornecedores"]
      }
    },
    "/api/v1/fornecedor-insumos": {
      "post": {
        "operationId": "FornecedorInsumoController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFornecedorInsumoDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Insumo cadastrado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FornecedorInsumo"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos."
          },
          "409": {
            "description": "Código interno já existe para este fornecedor."
          }
        },
        "summary": "Cadastrar novo insumo para fornecedor",
        "tags": ["Fornecedores - Insumos"]
      },
      "get": {
        "operationId": "FornecedorInsumoController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de insumos retornada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FornecedorInsumo"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar todos os insumos",
        "tags": ["Fornecedores - Insumos"]
      }
    },
    "/api/v1/fornecedor-insumos/ativos": {
      "get": {
        "operationId": "FornecedorInsumoController_findAtivos",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de insumos ativos.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FornecedorInsumo"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar insumos ativos e disponíveis",
        "tags": ["Fornecedores - Insumos"]
      }
    },
    "/api/v1/fornecedor-insumos/promocoes": {
      "get": {
        "operationId": "FornecedorInsumoController_findPromocoes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de insumos em promoção.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FornecedorInsumo"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar insumos em promoção",
        "tags": ["Fornecedores - Insumos"]
      }
    },
    "/api/v1/fornecedor-insumos/estoque-baixo": {
      "get": {
        "operationId": "FornecedorInsumoController_findComEstoqueBaixo",
        "parameters": [
          {
            "name": "minimo",
            "required": false,
            "in": "query",
            "description": "Quantidade mínima (padrão: 10)",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de insumos com estoque baixo.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FornecedorInsumo"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar insumos com estoque baixo",
        "tags": ["Fornecedores - Insumos"]
      }
    },
    "/api/v1/fornecedor-insumos/vencendo-validade": {
      "get": {
        "operationId": "FornecedorInsumoController_findVencendoValidade",
        "parameters": [
          {
            "name": "dias",
            "required": false,
            "in": "query",
            "description": "Dias para vencimento (padrão: 30)",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de insumos vencendo validade.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FornecedorInsumo"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar insumos vencendo validade",
        "tags": ["Fornecedores - Insumos"]
      }
    },
    "/api/v1/fornecedor-insumos/fornecedor/{fornecedorId}": {
      "get": {
        "operationId": "FornecedorInsumoController_findByFornecedor",
        "parameters": [
          {
            "name": "fornecedorId",
            "required": true,
            "in": "path",
            "description": "ID do fornecedor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de insumos do fornecedor.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FornecedorInsumo"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar insumos de um fornecedor",
        "tags": ["Fornecedores - Insumos"]
      }
    },
    "/api/v1/fornecedor-insumos/categoria/{categoria}": {
      "get": {
        "operationId": "FornecedorInsumoController_findByCategoria",
        "parameters": [
          {
            "name": "categoria",
            "required": true,
            "in": "path",
            "description": "Categoria do insumo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de insumos por categoria.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FornecedorInsumo"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar insumos por categoria",
        "tags": ["Fornecedores - Insumos"]
      }
    },
    "/api/v1/fornecedor-insumos/status/{status}": {
      "get": {
        "operationId": "FornecedorInsumoController_findByStatus",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "path",
            "description": "Status do insumo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de insumos por status.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FornecedorInsumo"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar insumos por status",
        "tags": ["Fornecedores - Insumos"]
      }
    },
    "/api/v1/fornecedor-insumos/codigo-barras/{codigo}": {
      "get": {
        "operationId": "FornecedorInsumoController_findByCodigoBarras",
        "parameters": [
          {
            "name": "codigo",
            "required": true,
            "in": "path",
            "description": "Código de barras",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Insumos encontrados.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FornecedorInsumo"
                  }
                }
              }
            }
          }
        },
        "summary": "Buscar insumos por código de barras",
        "tags": ["Fornecedores - Insumos"]
      }
    },
    "/api/v1/fornecedor-insumos/search": {
      "get": {
        "operationId": "FornecedorInsumoController_searchGlobal",
        "parameters": [
          {
            "name": "q",
            "required": true,
            "in": "query",
            "description": "Termo de busca",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resultados da busca.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FornecedorInsumo"
                  }
                }
              }
            }
          }
        },
        "summary": "Buscar insumos globalmente",
        "tags": ["Fornecedores - Insumos"]
      }
    },
    "/api/v1/fornecedor-insumos/search/{fornecedorId}": {
      "get": {
        "operationId": "FornecedorInsumoController_search",
        "parameters": [
          {
            "name": "fornecedorId",
            "required": true,
            "in": "path",
            "description": "ID do fornecedor",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "required": true,
            "in": "query",
            "description": "Termo de busca",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resultados da busca.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FornecedorInsumo"
                  }
                }
              }
            }
          }
        },
        "summary": "Buscar insumos de um fornecedor específico",
        "tags": ["Fornecedores - Insumos"]
      }
    },
    "/api/v1/fornecedor-insumos/estatisticas": {
      "get": {
        "operationId": "FornecedorInsumoController_getEstatisticas",
        "parameters": [
          {
            "name": "fornecedorId",
            "required": false,
            "in": "query",
            "description": "ID do fornecedor (opcional)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Estatísticas retornadas com sucesso."
          }
        },
        "summary": "Obter estatísticas dos insumos",
        "tags": ["Fornecedores - Insumos"]
      }
    },
    "/api/v1/fornecedor-insumos/fornecedor/{fornecedorId}/codigo/{codigo}": {
      "get": {
        "operationId": "FornecedorInsumoController_findByCodigoInterno",
        "parameters": [
          {
            "name": "fornecedorId",
            "required": true,
            "in": "path",
            "description": "ID do fornecedor",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "codigo",
            "required": true,
            "in": "path",
            "description": "Código interno",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Insumo encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FornecedorInsumo"
                }
              }
            }
          },
          "404": {
            "description": "Insumo não encontrado."
          }
        },
        "summary": "Buscar insumo por código interno do fornecedor",
        "tags": ["Fornecedores - Insumos"]
      }
    },
    "/api/v1/fornecedor-insumos/{id}": {
      "get": {
        "operationId": "FornecedorInsumoController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do insumo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Insumo encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FornecedorInsumo"
                }
              }
            }
          },
          "404": {
            "description": "Insumo não encontrado."
          }
        },
        "summary": "Buscar insumo por ID",
        "tags": ["Fornecedores - Insumos"]
      },
      "patch": {
        "operationId": "FornecedorInsumoController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do insumo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFornecedorInsumoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Insumo atualizado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FornecedorInsumo"
                }
              }
            }
          },
          "404": {
            "description": "Insumo não encontrado."
          }
        },
        "summary": "Atualizar insumo",
        "tags": ["Fornecedores - Insumos"]
      },
      "delete": {
        "operationId": "FornecedorInsumoController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do insumo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Insumo removido com sucesso."
          },
          "404": {
            "description": "Insumo não encontrado."
          }
        },
        "summary": "Remover insumo",
        "tags": ["Fornecedores - Insumos"]
      }
    },
    "/api/v1/fornecedor-insumos/{id}/toggle-status": {
      "patch": {
        "operationId": "FornecedorInsumoController_toggleStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do insumo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status alterado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FornecedorInsumo"
                }
              }
            }
          }
        },
        "summary": "Alternar status do insumo",
        "tags": ["Fornecedores - Insumos"]
      }
    },
    "/api/v1/fornecedor-insumos/{id}/estoque": {
      "patch": {
        "operationId": "FornecedorInsumoController_atualizarEstoque",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do insumo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Estoque atualizado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FornecedorInsumo"
                }
              }
            }
          }
        },
        "summary": "Atualizar estoque do insumo",
        "tags": ["Fornecedores - Insumos"]
      }
    },
    "/api/v1/fornecedor-insumos/{id}/preco": {
      "patch": {
        "operationId": "FornecedorInsumoController_atualizarPreco",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do insumo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Preço atualizado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FornecedorInsumo"
                }
              }
            }
          }
        },
        "summary": "Atualizar preço do insumo",
        "tags": ["Fornecedores - Insumos"]
      }
    },
    "/api/v1/fornecedor-insumos/{id}/promocao": {
      "patch": {
        "operationId": "FornecedorInsumoController_adicionarPromocao",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do insumo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Promoção adicionada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FornecedorInsumo"
                }
              }
            }
          }
        },
        "summary": "Adicionar promoção ao insumo",
        "tags": ["Fornecedores - Insumos"]
      }
    },
    "/api/v1/fornecedor-insumos/{id}/remover-promocao": {
      "patch": {
        "operationId": "FornecedorInsumoController_removerPromocao",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do insumo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Promoção removida com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FornecedorInsumo"
                }
              }
            }
          }
        },
        "summary": "Remover promoção do insumo",
        "tags": ["Fornecedores - Insumos"]
      }
    },
    "/api/v1/fornecedor-insumos/{id}/avaliar": {
      "patch": {
        "operationId": "FornecedorInsumoController_avaliarProduto",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do insumo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Avaliação registrada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FornecedorInsumo"
                }
              }
            }
          }
        },
        "summary": "Avaliar produto",
        "tags": ["Fornecedores - Insumos"]
      }
    },
    "/api/v1/fornecedor-insumos/{id}/registrar-pedido": {
      "patch": {
        "operationId": "FornecedorInsumoController_registrarPedido",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do insumo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pedido registrado com sucesso."
          }
        },
        "summary": "Registrar pedido do insumo",
        "tags": ["Fornecedores - Insumos"]
      }
    },
    "/api/v1/prestadores-servico": {
      "post": {
        "operationId": "PrestadorServicoController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePrestadorServicoDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Prestador criado com sucesso"
          },
          "409": {
            "description": "Prestador já existe"
          }
        },
        "summary": "Criar novo prestador de serviço",
        "tags": ["Prestadores de Serviço"]
      },
      "get": {
        "operationId": "PrestadorServicoController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de prestadores"
          }
        },
        "summary": "Listar todos os prestadores de serviço",
        "tags": ["Prestadores de Serviço"]
      }
    },
    "/api/v1/prestadores-servico/ativos": {
      "get": {
        "operationId": "PrestadorServicoController_findActive",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de prestadores ativos"
          }
        },
        "summary": "Listar prestadores ativos",
        "tags": ["Prestadores de Serviço"]
      }
    },
    "/api/v1/prestadores-servico/urgencia": {
      "get": {
        "operationId": "PrestadorServicoController_findComUrgencia",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de prestadores com atendimento urgente"
          }
        },
        "summary": "Listar prestadores que atendem urgência",
        "tags": ["Prestadores de Serviço"]
      }
    },
    "/api/v1/prestadores-servico/24x7": {
      "get": {
        "operationId": "PrestadorServicoController_findCom24x7",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de prestadores 24x7"
          }
        },
        "summary": "Listar prestadores com suporte 24x7",
        "tags": ["Prestadores de Serviço"]
      }
    },
    "/api/v1/prestadores-servico/search": {
      "get": {
        "operationId": "PrestadorServicoController_search",
        "parameters": [
          {
            "name": "q",
            "required": true,
            "in": "query",
            "description": "Termo de busca",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Prestadores encontrados"
          }
        },
        "summary": "Buscar prestadores por termo",
        "tags": ["Prestadores de Serviço"]
      }
    },
    "/api/v1/prestadores-servico/estatisticas": {
      "get": {
        "operationId": "PrestadorServicoController_getEstatisticas",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Estatísticas"
          }
        },
        "summary": "Obter estatísticas dos prestadores",
        "tags": ["Prestadores de Serviço"]
      }
    },
    "/api/v1/prestadores-servico/contratos-vencendo": {
      "get": {
        "operationId": "PrestadorServicoController_getContratosVencendo",
        "parameters": [
          {
            "name": "dias",
            "required": false,
            "in": "query",
            "description": "Dias para vencimento",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contratos vencendo"
          }
        },
        "summary": "Listar contratos próximos ao vencimento",
        "tags": ["Prestadores de Serviço"]
      }
    },
    "/api/v1/prestadores-servico/renovacoes-automaticas": {
      "get": {
        "operationId": "PrestadorServicoController_getRenovacoesAutomaticas",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Contratos para renovação"
          }
        },
        "summary": "Listar contratos com renovação automática próxima",
        "tags": ["Prestadores de Serviço"]
      }
    },
    "/api/v1/prestadores-servico/status/{status}": {
      "get": {
        "operationId": "PrestadorServicoController_findByStatus",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "path",
            "schema": {
              "enum": [
                "ativo",
                "inativo",
                "suspenso",
                "em_analise",
                "cancelado"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Prestadores encontrados"
          }
        },
        "summary": "Buscar prestadores por status do contrato",
        "tags": ["Prestadores de Serviço"]
      }
    },
    "/api/v1/prestadores-servico/tipo-contrato/{tipo}": {
      "get": {
        "operationId": "PrestadorServicoController_findByTipoContrato",
        "parameters": [
          {
            "name": "tipo",
            "required": true,
            "in": "path",
            "description": "Tipo de contrato",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Prestadores encontrados"
          }
        },
        "summary": "Buscar prestadores por tipo de contrato",
        "tags": ["Prestadores de Serviço"]
      }
    },
    "/api/v1/prestadores-servico/codigo/{codigo}": {
      "get": {
        "operationId": "PrestadorServicoController_findByCodigo",
        "parameters": [
          {
            "name": "codigo",
            "required": true,
            "in": "path",
            "description": "Código do prestador",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Prestador encontrado"
          },
          "404": {
            "description": "Prestador não encontrado"
          }
        },
        "summary": "Buscar prestador por código",
        "tags": ["Prestadores de Serviço"]
      }
    },
    "/api/v1/prestadores-servico/cnpj/{cnpj}": {
      "get": {
        "operationId": "PrestadorServicoController_findByCnpj",
        "parameters": [
          {
            "name": "cnpj",
            "required": true,
            "in": "path",
            "description": "CNPJ do prestador",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Prestador encontrado"
          },
          "404": {
            "description": "Prestador não encontrado"
          }
        },
        "summary": "Buscar prestador por CNPJ",
        "tags": ["Prestadores de Serviço"]
      }
    },
    "/api/v1/prestadores-servico/{id}": {
      "get": {
        "operationId": "PrestadorServicoController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do prestador",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Prestador encontrado"
          },
          "404": {
            "description": "Prestador não encontrado"
          }
        },
        "summary": "Buscar prestador por ID",
        "tags": ["Prestadores de Serviço"]
      },
      "patch": {
        "operationId": "PrestadorServicoController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do prestador",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePrestadorServicoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Prestador atualizado"
          },
          "404": {
            "description": "Prestador não encontrado"
          }
        },
        "summary": "Atualizar prestador",
        "tags": ["Prestadores de Serviço"]
      },
      "delete": {
        "operationId": "PrestadorServicoController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do prestador",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Prestador removido"
          },
          "404": {
            "description": "Prestador não encontrado"
          }
        },
        "summary": "Remover prestador",
        "tags": ["Prestadores de Serviço"]
      }
    },
    "/api/v1/prestadores-servico/{id}/status/{status}": {
      "patch": {
        "operationId": "PrestadorServicoController_updateStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do prestador",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": true,
            "in": "path",
            "schema": {
              "enum": [
                "ativo",
                "inativo",
                "suspenso",
                "em_analise",
                "cancelado"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status atualizado"
          },
          "404": {
            "description": "Prestador não encontrado"
          }
        },
        "summary": "Atualizar status do contrato",
        "tags": ["Prestadores de Serviço"]
      }
    },
    "/api/v1/prestadores-servico/{id}/toggle-status": {
      "patch": {
        "operationId": "PrestadorServicoController_toggleStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do prestador",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status alternado"
          },
          "404": {
            "description": "Prestador não encontrado"
          }
        },
        "summary": "Alternar status ativo/inativo",
        "tags": ["Prestadores de Serviço"]
      }
    },
    "/api/v1/prestadores-servico/{id}/avaliar": {
      "post": {
        "operationId": "PrestadorServicoController_avaliar",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do prestador",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Avaliação registrada"
          },
          "404": {
            "description": "Prestador não encontrado"
          }
        },
        "summary": "Avaliar prestador",
        "tags": ["Prestadores de Serviço"]
      }
    },
    "/api/v1/prestadores-servico/{id}/incrementar-servicos": {
      "post": {
        "operationId": "PrestadorServicoController_incrementarServicos",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do prestador",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contador incrementado"
          },
          "404": {
            "description": "Prestador não encontrado"
          }
        },
        "summary": "Incrementar contador de serviços prestados",
        "tags": ["Prestadores de Serviço"]
      }
    },
    "/api/v1/prestador-servico-categorias": {
      "post": {
        "operationId": "PrestadorServicoCategoriaController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePrestadorServicoCategoriaDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Categoria criada com sucesso"
          },
          "404": {
            "description": "Prestador não encontrado"
          },
          "409": {
            "description": "Categoria já existe"
          }
        },
        "summary": "Criar nova categoria de serviço",
        "tags": ["Prestadores de Serviço - Categorias"]
      },
      "get": {
        "operationId": "PrestadorServicoCategoriaController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de categorias"
          }
        },
        "summary": "Listar todas as categorias",
        "tags": ["Prestadores de Serviço - Categorias"]
      }
    },
    "/api/v1/prestador-servico-categorias/ativas": {
      "get": {
        "operationId": "PrestadorServicoCategoriaController_findActive",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de categorias ativas"
          }
        },
        "summary": "Listar categorias ativas",
        "tags": ["Prestadores de Serviço - Categorias"]
      }
    },
    "/api/v1/prestador-servico-categorias/estatisticas": {
      "get": {
        "operationId": "PrestadorServicoCategoriaController_getEstatisticasPorTipo",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Estatísticas"
          }
        },
        "summary": "Obter estatísticas por tipo de serviço",
        "tags": ["Prestadores de Serviço - Categorias"]
      }
    },
    "/api/v1/prestador-servico-categorias/prestador/{prestadorId}": {
      "get": {
        "operationId": "PrestadorServicoCategoriaController_findByPrestador",
        "parameters": [
          {
            "name": "prestadorId",
            "required": true,
            "in": "path",
            "description": "ID do prestador",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Categorias do prestador"
          }
        },
        "summary": "Listar categorias de um prestador",
        "tags": ["Prestadores de Serviço - Categorias"]
      },
      "delete": {
        "operationId": "PrestadorServicoCategoriaController_removeByPrestador",
        "parameters": [
          {
            "name": "prestadorId",
            "required": true,
            "in": "path",
            "description": "ID do prestador",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Categorias removidas"
          }
        },
        "summary": "Remover todas as categorias de um prestador",
        "tags": ["Prestadores de Serviço - Categorias"]
      }
    },
    "/api/v1/prestador-servico-categorias/prestador/{prestadorId}/ativas": {
      "get": {
        "operationId": "PrestadorServicoCategoriaController_findActiveByPrestador",
        "parameters": [
          {
            "name": "prestadorId",
            "required": true,
            "in": "path",
            "description": "ID do prestador",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Categorias ativas do prestador"
          }
        },
        "summary": "Listar categorias ativas de um prestador",
        "tags": ["Prestadores de Serviço - Categorias"]
      }
    },
    "/api/v1/prestador-servico-categorias/prestador/{prestadorId}/estatisticas": {
      "get": {
        "operationId": "PrestadorServicoCategoriaController_getEstatisticasPrestador",
        "parameters": [
          {
            "name": "prestadorId",
            "required": true,
            "in": "path",
            "description": "ID do prestador",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Estatísticas do prestador"
          }
        },
        "summary": "Obter estatísticas de categorias de um prestador",
        "tags": ["Prestadores de Serviço - Categorias"]
      }
    },
    "/api/v1/prestador-servico-categorias/tipo/{tipo}": {
      "get": {
        "operationId": "PrestadorServicoCategoriaController_findByTipo",
        "parameters": [
          {
            "name": "tipo",
            "required": true,
            "in": "path",
            "schema": {
              "enum": [
                "manutencao_equipamentos",
                "prestadores_exames",
                "honorario_contabeis",
                "honorario_consultoria",
                "honorario_advocaticio",
                "internet_telefonia",
                "agua",
                "energia",
                "suporte_software",
                "desenvolvimento_software",
                "seguranca_monitoramento",
                "outros_servicos_pf",
                "outros_servicos_pj",
                "limpeza_conservacao",
                "transporte_logistica",
                "marketing_publicidade",
                "recursos_humanos",
                "treinamento_capacitacao",
                "arquitetura_engenharia",
                "vigilancia_sanitaria",
                "calibracao_metrologia"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Categorias do tipo"
          }
        },
        "summary": "Listar categorias por tipo de serviço",
        "tags": ["Prestadores de Serviço - Categorias"]
      }
    },
    "/api/v1/prestador-servico-categorias/tipo/{tipo}/prestadores": {
      "get": {
        "operationId": "PrestadorServicoCategoriaController_getPrestadoresPorCategoria",
        "parameters": [
          {
            "name": "tipo",
            "required": true,
            "in": "path",
            "schema": {
              "enum": [
                "manutencao_equipamentos",
                "prestadores_exames",
                "honorario_contabeis",
                "honorario_consultoria",
                "honorario_advocaticio",
                "internet_telefonia",
                "agua",
                "energia",
                "suporte_software",
                "desenvolvimento_software",
                "seguranca_monitoramento",
                "outros_servicos_pf",
                "outros_servicos_pj",
                "limpeza_conservacao",
                "transporte_logistica",
                "marketing_publicidade",
                "recursos_humanos",
                "treinamento_capacitacao",
                "arquitetura_engenharia",
                "vigilancia_sanitaria",
                "calibracao_metrologia"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Prestadores com a categoria"
          }
        },
        "summary": "Listar prestadores por tipo de categoria",
        "tags": ["Prestadores de Serviço - Categorias"]
      }
    },
    "/api/v1/prestador-servico-categorias/{id}": {
      "get": {
        "operationId": "PrestadorServicoCategoriaController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da categoria",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Categoria encontrada"
          },
          "404": {
            "description": "Categoria não encontrada"
          }
        },
        "summary": "Buscar categoria por ID",
        "tags": ["Prestadores de Serviço - Categorias"]
      },
      "patch": {
        "operationId": "PrestadorServicoCategoriaController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da categoria",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePrestadorServicoCategoriaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Categoria atualizada"
          },
          "404": {
            "description": "Categoria não encontrada"
          }
        },
        "summary": "Atualizar categoria",
        "tags": ["Prestadores de Serviço - Categorias"]
      },
      "delete": {
        "operationId": "PrestadorServicoCategoriaController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da categoria",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Categoria removida"
          },
          "404": {
            "description": "Categoria não encontrada"
          }
        },
        "summary": "Remover categoria",
        "tags": ["Prestadores de Serviço - Categorias"]
      }
    },
    "/api/v1/prestador-servico-categorias/{id}/toggle-status": {
      "patch": {
        "operationId": "PrestadorServicoCategoriaController_toggleStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da categoria",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status alternado"
          },
          "404": {
            "description": "Categoria não encontrada"
          }
        },
        "summary": "Alternar status ativo/inativo da categoria",
        "tags": ["Prestadores de Serviço - Categorias"]
      }
    },
    "/api/v1/prestador-servico-categorias/importar/{prestadorId}": {
      "post": {
        "operationId": "PrestadorServicoCategoriaController_importarCategorias",
        "parameters": [
          {
            "name": "prestadorId",
            "required": true,
            "in": "path",
            "description": "ID do prestador",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Categorias importadas"
          },
          "404": {
            "description": "Prestador não encontrado"
          }
        },
        "summary": "Importar categorias em lote para um prestador",
        "tags": ["Prestadores de Serviço - Categorias"]
      }
    },
    "/api/v1/kits": {
      "post": {
        "operationId": "KitsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateKitDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Kit criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Kit"
                }
              }
            }
          },
          "404": {
            "description": "Exame, unidade ou convênio não encontrado"
          },
          "409": {
            "description": "Código interno já existe"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Criar um novo kit de exames",
        "tags": ["Kits"]
      },
      "get": {
        "operationId": "KitsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de kits retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Kit"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar todos os kits",
        "tags": ["Kits"]
      }
    },
    "/api/v1/kits/ativos": {
      "get": {
        "operationId": "KitsController_findAtivos",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de kits ativos retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Kit"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar apenas kits ativos",
        "tags": ["Kits"]
      }
    },
    "/api/v1/kits/codigo/{codigo}": {
      "get": {
        "operationId": "KitsController_findByCodigo",
        "parameters": [
          {
            "name": "codigo",
            "required": true,
            "in": "path",
            "description": "Código interno do kit",
            "schema": {
              "example": "KIT001",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Kit encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Kit"
                }
              }
            }
          },
          "404": {
            "description": "Kit não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar kit por código interno",
        "tags": ["Kits"]
      }
    },
    "/api/v1/kits/unidade/{unidadeId}": {
      "get": {
        "operationId": "KitsController_findByUnidade",
        "parameters": [
          {
            "name": "unidadeId",
            "required": true,
            "in": "path",
            "description": "ID da unidade de saúde",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de kits da unidade",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Kit"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar kits disponíveis em uma unidade",
        "tags": ["Kits"]
      }
    },
    "/api/v1/kits/convenio/{convenioId}": {
      "get": {
        "operationId": "KitsController_findByConvenio",
        "parameters": [
          {
            "name": "convenioId",
            "required": true,
            "in": "path",
            "description": "ID do convênio",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de kits do convênio",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Kit"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar kits aceitos por um convênio",
        "tags": ["Kits"]
      }
    },
    "/api/v1/kits/{id}": {
      "get": {
        "operationId": "KitsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do kit",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Kit encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Kit"
                }
              }
            }
          },
          "404": {
            "description": "Kit não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar kit por ID",
        "tags": ["Kits"]
      },
      "patch": {
        "operationId": "KitsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do kit",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateKitDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Kit atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Kit"
                }
              }
            }
          },
          "404": {
            "description": "Kit não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Atualizar dados de um kit",
        "tags": ["Kits"]
      },
      "delete": {
        "operationId": "KitsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do kit",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Kit removido com sucesso"
          },
          "404": {
            "description": "Kit não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Remover um kit",
        "tags": ["Kits"]
      }
    },
    "/api/v1/kits/{id}/toggle-status": {
      "patch": {
        "operationId": "KitsController_toggleStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do kit",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status do kit alterado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Kit"
                }
              }
            }
          },
          "404": {
            "description": "Kit não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Alternar status do kit (ativo/inativo)",
        "tags": ["Kits"]
      }
    },
    "/api/v1/kits/{id}/duplicate": {
      "post": {
        "operationId": "KitsController_duplicateKit",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do kit a ser duplicado",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          },
          {
            "name": "codigoInterno",
            "required": true,
            "in": "query",
            "description": "Novo código interno para o kit duplicado",
            "schema": {
              "example": "KIT002",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Kit duplicado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Kit"
                }
              }
            }
          },
          "404": {
            "description": "Kit original não encontrado"
          },
          "409": {
            "description": "Código interno já existe"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Duplicar um kit existente",
        "tags": ["Kits"]
      }
    },
    "/api/v1/bancos": {
      "post": {
        "operationId": "BancoController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBancoDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Banco criado com sucesso"
          },
          "409": {
            "description": "Banco já existe"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Criar um novo banco",
        "tags": ["Bancos"]
      },
      "get": {
        "operationId": "BancoController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite por página",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca por nome, código ou código interno",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Filtrar por status",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de bancos"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar todos os bancos",
        "tags": ["Bancos"]
      }
    },
    "/api/v1/bancos/ativos": {
      "get": {
        "operationId": "BancoController_findAtivos",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de bancos ativos"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar bancos ativos",
        "tags": ["Bancos"]
      }
    },
    "/api/v1/bancos/estatisticas": {
      "get": {
        "operationId": "BancoController_getEstatisticas",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Estatísticas dos bancos"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obter estatísticas dos bancos",
        "tags": ["Bancos"]
      }
    },
    "/api/v1/bancos/codigo/{codigo}": {
      "get": {
        "operationId": "BancoController_findByCodigo",
        "parameters": [
          {
            "name": "codigo",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Banco encontrado"
          },
          "404": {
            "description": "Banco não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar banco por código FEBRABAN",
        "tags": ["Bancos"]
      }
    },
    "/api/v1/bancos/{id}": {
      "get": {
        "operationId": "BancoController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Banco encontrado"
          },
          "404": {
            "description": "Banco não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar banco por ID",
        "tags": ["Bancos"]
      },
      "patch": {
        "operationId": "BancoController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBancoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Banco atualizado com sucesso"
          },
          "404": {
            "description": "Banco não encontrado"
          },
          "409": {
            "description": "Código já existe em outro banco"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Atualizar banco",
        "tags": ["Bancos"]
      },
      "delete": {
        "operationId": "BancoController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Banco excluído com sucesso"
          },
          "404": {
            "description": "Banco não encontrado"
          },
          "409": {
            "description": "Banco possui contas vinculadas"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Excluir banco",
        "tags": ["Bancos"]
      }
    },
    "/api/v1/bancos/{id}/toggle-status": {
      "patch": {
        "operationId": "BancoController_toggleStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status alterado com sucesso"
          },
          "404": {
            "description": "Banco não encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Alternar status do banco (ativo/inativo)",
        "tags": ["Bancos"]
      }
    }
  },
  "info": {
    "title": "ERP Laboratório API",
    "description": "Sistema ERP modular para laboratórios de análises clínicas e imagens",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "health",
      "description": "Health Check"
    },
    {
      "name": "atendimento",
      "description": "Módulo de Atendimento e Agendamento"
    },
    {
      "name": "exames",
      "description": "Módulo de Gestão de Exames"
    },
    {
      "name": "financeiro",
      "description": "Módulo Financeiro"
    },
    {
      "name": "crm",
      "description": "Módulo CRM e WhatsApp"
    },
    {
      "name": "auditoria",
      "description": "Módulo de Auditoria e Qualidade"
    },
    {
      "name": "estoque",
      "description": "Módulo de Estoque e Compras"
    },
    {
      "name": "tiss",
      "description": "Módulo TISS e Convênios"
    },
    {
      "name": "tarefas",
      "description": "Módulo de Tarefas Internas"
    },
    {
      "name": "bi",
      "description": "Módulo de Business Intelligence"
    },
    {
      "name": "portal-cliente",
      "description": "Portal do Cliente"
    },
    {
      "name": "portal-medico",
      "description": "Portal Médico"
    },
    {
      "name": "integracoes",
      "description": "Módulo de Integrações"
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email do usuário",
            "example": "usuario@example.com"
          },
          "password": {
            "type": "string",
            "description": "Senha do usuário",
            "example": "SenhaSegura123!",
            "minLength": 6
          }
        },
        "required": ["email", "password"]
      },
      "UserResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID único do usuário",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "nome": {
            "type": "string",
            "description": "Nome completo do usuário",
            "example": "João Silva"
          },
          "email": {
            "type": "string",
            "description": "Email do usuário",
            "example": "joao.silva@exemplo.com"
          },
          "permissoes": {
            "description": "Lista de permissões do usuário",
            "example": ["VIEW_PATIENTS", "EDIT_EXAMS"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "foto_url": {
            "type": "string",
            "description": "URL da foto do perfil",
            "example": "https://exemplo.com/foto.jpg"
          }
        },
        "required": ["id", "nome", "email"]
      },
      "LoginResponseDto": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "Token JWT de acesso",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ"
          },
          "refresh_token": {
            "type": "string",
            "description": "Token de renovação",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ"
          },
          "token_type": {
            "type": "string",
            "description": "Tipo do token",
            "example": "Bearer",
            "default": "Bearer"
          },
          "expires_in": {
            "type": "string",
            "description": "Tempo de expiração do token",
            "example": "24h"
          },
          "user": {
            "description": "Dados do usuário autenticado",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserResponseDto"
              }
            ]
          }
        },
        "required": [
          "access_token",
          "refresh_token",
          "token_type",
          "expires_in",
          "user"
        ]
      },
      "RefreshTokenDto": {
        "type": "object",
        "properties": {
          "refresh_token": {
            "type": "string",
            "description": "Refresh token para renovar o access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        },
        "required": ["refresh_token"]
      },
      "RefreshResponseDto": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "Novo token JWT de acesso",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ"
          },
          "token_type": {
            "type": "string",
            "description": "Tipo do token",
            "example": "Bearer",
            "default": "Bearer"
          },
          "expires_in": {
            "type": "string",
            "description": "Tempo de expiração do token",
            "example": "24h"
          }
        },
        "required": ["access_token", "token_type", "expires_in"]
      },
      "ValidateTokenResponseDto": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean",
            "description": "Indica se o token é válido",
            "example": true
          }
        },
        "required": ["valid"]
      },
      "ForgotPasswordDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email do usuário para recuperação de senha",
            "example": "usuario@exemplo.com"
          }
        },
        "required": ["email"]
      },
      "MessageResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Mensagem de resposta",
            "example": "Operação realizada com sucesso"
          }
        },
        "required": ["message"]
      },
      "ResetPasswordDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Token de recuperação de senha",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "newPassword": {
            "type": "string",
            "description": "Nova senha do usuário",
            "example": "NovaSenha123!"
          }
        },
        "required": ["token", "newPassword"]
      },
      "ChangePasswordDto": {
        "type": "object",
        "properties": {
          "senhaAtual": {
            "type": "string",
            "description": "Senha atual do usuário",
            "example": "SenhaAtual123!"
          },
          "novaSenha": {
            "type": "string",
            "description": "Nova senha do usuário (mínimo 8 caracteres)",
            "example": "NovaSenhaSegura123!",
            "minLength": 8
          },
          "confirmacaoSenha": {
            "type": "string",
            "description": "Confirmação da nova senha",
            "example": "NovaSenhaSegura123!"
          }
        },
        "required": ["senhaAtual", "novaSenha", "confirmacaoSenha"]
      },
      "CreateUsuarioDto": {
        "type": "object",
        "properties": {
          "codigoInterno": {
            "type": "string",
            "description": "Código interno do usuário (será gerado automaticamente se não fornecido)",
            "example": "USR123456",
            "maxLength": 50
          },
          "nomeCompleto": {
            "type": "string",
            "description": "Nome completo do usuário",
            "example": "João da Silva Santos",
            "maxLength": 255
          },
          "cpf": {
            "type": "string",
            "description": "CPF do usuário (apenas números)",
            "example": "12345678901",
            "minLength": 11,
            "maxLength": 11
          },
          "telefone": {
            "type": "string",
            "description": "Telefone fixo",
            "example": "1133334444",
            "maxLength": 20
          },
          "celularWhatsapp": {
            "type": "string",
            "description": "Celular/WhatsApp",
            "example": "11999998888",
            "maxLength": 20
          },
          "cargoFuncao": {
            "type": "string",
            "description": "Cargo ou função do usuário",
            "example": "Analista de Sistemas",
            "maxLength": 100
          },
          "cnpjAssociado": {
            "type": "string",
            "description": "CNPJ associado ao usuário (apenas números)",
            "example": "12345678000190",
            "minLength": 14,
            "maxLength": 14
          },
          "dadosAdmissao": {
            "type": "string",
            "description": "Dados de admissão",
            "example": "Admitido em 01/01/2024 - CLT",
            "maxLength": 255
          },
          "fotoUrl": {
            "type": "string",
            "description": "URL da foto do usuário",
            "example": "https://example.com/photos/user123.jpg",
            "maxLength": 500
          },
          "email": {
            "type": "string",
            "description": "E-mail do usuário (usado para login)",
            "example": "joao.silva@example.com",
            "maxLength": 255
          },
          "senha": {
            "type": "string",
            "description": "Senha do usuário (mínimo 8 caracteres)",
            "example": "SenhaSegura123!",
            "minLength": 8
          },
          "resetarSenha": {
            "type": "boolean",
            "description": "Se deve resetar a senha no próximo login",
            "example": false,
            "default": false
          },
          "validacao2Etapas": {
            "type": "boolean",
            "description": "Se deve habilitar validação em 2 etapas",
            "example": false,
            "default": false
          },
          "metodoValidacao": {
            "type": "string",
            "description": "Método de validação em 2 etapas",
            "enum": ["SMS", "EMAIL", "APP"],
            "example": "EMAIL"
          },
          "perguntaRecuperacao": {
            "type": "string",
            "description": "Pergunta de recuperação de senha",
            "example": "Qual o nome do seu primeiro animal de estimação?",
            "maxLength": 255
          },
          "respostaRecuperacao": {
            "type": "string",
            "description": "Resposta da pergunta de recuperação",
            "example": "Rex",
            "maxLength": 255
          },
          "ativo": {
            "type": "boolean",
            "description": "Se o usuário está ativo",
            "example": true,
            "default": true
          },
          "unidadesIds": {
            "description": "IDs das unidades de saúde associadas ao usuário",
            "example": ["uuid-unidade-1", "uuid-unidade-2"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "permissoesIds": {
            "description": "IDs das permissões do usuário",
            "example": ["uuid-permissao-1", "uuid-permissao-2"],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["nomeCompleto", "email", "senha"]
      },
      "Usuario": {
        "type": "object",
        "properties": {}
      },
      "UpdateUsuarioDto": {
        "type": "object",
        "properties": {
          "codigoInterno": {
            "type": "string",
            "description": "Código interno do usuário (será gerado automaticamente se não fornecido)",
            "example": "USR123456",
            "maxLength": 50
          },
          "nomeCompleto": {
            "type": "string",
            "description": "Nome completo do usuário",
            "example": "João da Silva Santos",
            "maxLength": 255
          },
          "cpf": {
            "type": "string",
            "description": "CPF do usuário (apenas números)",
            "example": "12345678901",
            "minLength": 11,
            "maxLength": 11
          },
          "telefone": {
            "type": "string",
            "description": "Telefone fixo",
            "example": "1133334444",
            "maxLength": 20
          },
          "celularWhatsapp": {
            "type": "string",
            "description": "Celular/WhatsApp",
            "example": "11999998888",
            "maxLength": 20
          },
          "cargoFuncao": {
            "type": "string",
            "description": "Cargo ou função do usuário",
            "example": "Analista de Sistemas",
            "maxLength": 100
          },
          "cnpjAssociado": {
            "type": "string",
            "description": "CNPJ associado ao usuário (apenas números)",
            "example": "12345678000190",
            "minLength": 14,
            "maxLength": 14
          },
          "dadosAdmissao": {
            "type": "string",
            "description": "Dados de admissão",
            "example": "Admitido em 01/01/2024 - CLT",
            "maxLength": 255
          },
          "fotoUrl": {
            "type": "string",
            "description": "URL da foto do usuário",
            "example": "https://example.com/photos/user123.jpg",
            "maxLength": 500
          },
          "resetarSenha": {
            "type": "boolean",
            "description": "Se deve resetar a senha no próximo login",
            "example": false,
            "default": false
          },
          "validacao2Etapas": {
            "type": "boolean",
            "description": "Se deve habilitar validação em 2 etapas",
            "example": false,
            "default": false
          },
          "metodoValidacao": {
            "type": "string",
            "description": "Método de validação em 2 etapas",
            "enum": ["SMS", "EMAIL", "APP"],
            "example": "EMAIL"
          },
          "perguntaRecuperacao": {
            "type": "string",
            "description": "Pergunta de recuperação de senha",
            "example": "Qual o nome do seu primeiro animal de estimação?",
            "maxLength": 255
          },
          "respostaRecuperacao": {
            "type": "string",
            "description": "Resposta da pergunta de recuperação",
            "example": "Rex",
            "maxLength": 255
          },
          "ativo": {
            "type": "boolean",
            "description": "Se o usuário está ativo",
            "example": true,
            "default": true
          },
          "unidadesIds": {
            "description": "IDs das unidades de saúde associadas ao usuário",
            "example": ["uuid-unidade-1", "uuid-unidade-2"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "permissoesIds": {
            "description": "IDs das permissões do usuário",
            "example": ["uuid-permissao-1", "uuid-permissao-2"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "senha": {
            "type": "string",
            "description": "Nova senha do usuário (mínimo 8 caracteres)",
            "example": "NovaSenhaSegura123!",
            "minLength": 8
          }
        }
      },
      "CreateAuditoriaLogDto": {
        "type": "object",
        "properties": {
          "tipoLog": {
            "type": "string",
            "description": "Tipo do log",
            "enum": ["ACESSO", "ALTERACAO", "ERRO", "ACAO"],
            "example": "ACESSO"
          },
          "usuarioId": {
            "type": "string",
            "description": "ID do usuário que realizou a ação",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "ipAddress": {
            "type": "string",
            "description": "Endereço IP do usuário",
            "example": "192.168.1.1"
          },
          "userAgent": {
            "type": "string",
            "description": "User Agent do navegador/cliente",
            "example": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"
          },
          "unidadeSaudeId": {
            "type": "string",
            "description": "ID da unidade de saúde",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "modulo": {
            "type": "string",
            "description": "Módulo do sistema",
            "example": "Pacientes",
            "maxLength": 100
          },
          "acao": {
            "type": "string",
            "description": "Ação realizada (para logs de acesso)",
            "example": "Visualizar Lista",
            "maxLength": 100
          },
          "entidade": {
            "type": "string",
            "description": "Nome da entidade afetada (para logs de alteração)",
            "example": "pacientes",
            "maxLength": 100
          },
          "entidadeId": {
            "type": "string",
            "description": "ID da entidade afetada",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "operacao": {
            "type": "string",
            "description": "Tipo de operação realizada",
            "enum": [
              "INSERT",
              "UPDATE",
              "DELETE",
              "LOGIN",
              "LOGOUT",
              "LOGIN_FALHA"
            ],
            "example": "UPDATE"
          },
          "usuarioAlterouId": {
            "type": "string",
            "description": "ID do usuário que foi alterado (para logs de alteração em usuários)",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "dadosAlteracao": {
            "type": "object",
            "description": "Dados da alteração em formato JSON",
            "example": {
              "antes": {
                "nome": "João"
              },
              "depois": {
                "nome": "João Silva"
              }
            }
          },
          "detalhes": {
            "type": "string",
            "description": "Detalhes adicionais sobre o log",
            "example": "Alteração realizada via importação em lote"
          },
          "nivel": {
            "type": "string",
            "description": "Nível de severidade do log",
            "enum": ["INFO", "WARNING", "ERROR", "CRITICAL"],
            "example": "INFO",
            "default": "INFO"
          }
        },
        "required": ["tipoLog", "usuarioId"]
      },
      "AuditoriaLog": {
        "type": "object",
        "properties": {}
      },
      "EnderecoResponseDto": {
        "type": "object",
        "properties": {
          "cep": {
            "type": "string",
            "example": "01310100",
            "description": "CEP sem formatação"
          },
          "rua": {
            "type": "string",
            "example": "Avenida Paulista",
            "description": "Logradouro/Rua"
          },
          "logradouro": {
            "type": "string",
            "example": "Avenida Paulista",
            "description": "Logradouro original da API"
          },
          "complemento": {
            "type": "string",
            "example": "de 612 a 1510 - lado par",
            "description": "Complemento do logradouro"
          },
          "bairro": {
            "type": "string",
            "example": "Bela Vista",
            "description": "Bairro"
          },
          "cidade": {
            "type": "string",
            "example": "São Paulo",
            "description": "Cidade"
          },
          "estado": {
            "type": "string",
            "example": "SP",
            "description": "Estado (sigla UF)"
          },
          "ibge": {
            "type": "string",
            "example": "3550308",
            "description": "Código IBGE do município"
          },
          "gia": {
            "type": "string",
            "example": "1004",
            "description": "Código GIA"
          },
          "ddd": {
            "type": "string",
            "example": "11",
            "description": "DDD da região"
          },
          "siafi": {
            "type": "string",
            "example": "7107",
            "description": "Código SIAFI"
          }
        },
        "required": [
          "cep",
          "rua",
          "logradouro",
          "complemento",
          "bairro",
          "cidade",
          "estado",
          "ibge",
          "gia",
          "ddd",
          "siafi"
        ]
      },
      "CreateCnaeDto": {
        "type": "object",
        "properties": {
          "codigo": {
            "type": "string",
            "example": "8610-1/01",
            "description": "Código CNAE"
          },
          "descricao": {
            "type": "string",
            "example": "Atividades de atendimento hospitalar, exceto pronto-socorro e unidades para atendimento a urgências",
            "description": "Descrição do CNAE"
          },
          "secao": {
            "type": "string",
            "example": "Q",
            "description": "Seção do CNAE"
          },
          "descricaoSecao": {
            "type": "string",
            "example": "SAÚDE HUMANA E SERVIÇOS SOCIAIS",
            "description": "Descrição da seção"
          },
          "divisao": {
            "type": "string",
            "example": "86",
            "description": "Divisão do CNAE"
          },
          "descricaoDivisao": {
            "type": "string",
            "example": "Atividades de atenção à saúde humana",
            "description": "Descrição da divisão"
          },
          "grupo": {
            "type": "string",
            "example": "861",
            "description": "Grupo do CNAE"
          },
          "descricaoGrupo": {
            "type": "string",
            "example": "Atividades de atendimento hospitalar",
            "description": "Descrição do grupo"
          },
          "classe": {
            "type": "string",
            "example": "8610",
            "description": "Classe do CNAE"
          },
          "descricaoClasse": {
            "type": "string",
            "example": "Atividades de atendimento hospitalar",
            "description": "Descrição da classe"
          },
          "subclasse": {
            "type": "string",
            "example": "8610-1",
            "description": "Subclasse do CNAE"
          },
          "descricaoSubclasse": {
            "type": "string",
            "example": "Atividades de atendimento hospitalar",
            "description": "Descrição da subclasse"
          },
          "ativo": {
            "type": "boolean",
            "example": true,
            "description": "Status do CNAE",
            "default": true
          },
          "observacoes": {
            "type": "string",
            "example": "CNAE relacionado a atividades hospitalares",
            "description": "Observações"
          }
        },
        "required": ["codigo", "descricao", "ativo"]
      },
      "Cnae": {
        "type": "object",
        "properties": {}
      },
      "UpdateCnaeDto": {
        "type": "object",
        "properties": {
          "codigo": {
            "type": "string",
            "example": "8610-1/01",
            "description": "Código CNAE"
          },
          "descricao": {
            "type": "string",
            "example": "Atividades de atendimento hospitalar, exceto pronto-socorro e unidades para atendimento a urgências",
            "description": "Descrição do CNAE"
          },
          "secao": {
            "type": "string",
            "example": "Q",
            "description": "Seção do CNAE"
          },
          "descricaoSecao": {
            "type": "string",
            "example": "SAÚDE HUMANA E SERVIÇOS SOCIAIS",
            "description": "Descrição da seção"
          },
          "divisao": {
            "type": "string",
            "example": "86",
            "description": "Divisão do CNAE"
          },
          "descricaoDivisao": {
            "type": "string",
            "example": "Atividades de atenção à saúde humana",
            "description": "Descrição da divisão"
          },
          "grupo": {
            "type": "string",
            "example": "861",
            "description": "Grupo do CNAE"
          },
          "descricaoGrupo": {
            "type": "string",
            "example": "Atividades de atendimento hospitalar",
            "description": "Descrição do grupo"
          },
          "classe": {
            "type": "string",
            "example": "8610",
            "description": "Classe do CNAE"
          },
          "descricaoClasse": {
            "type": "string",
            "example": "Atividades de atendimento hospitalar",
            "description": "Descrição da classe"
          },
          "subclasse": {
            "type": "string",
            "example": "8610-1",
            "description": "Subclasse do CNAE"
          },
          "descricaoSubclasse": {
            "type": "string",
            "example": "Atividades de atendimento hospitalar",
            "description": "Descrição da subclasse"
          },
          "ativo": {
            "type": "boolean",
            "example": true,
            "description": "Status do CNAE",
            "default": true
          },
          "observacoes": {
            "type": "string",
            "example": "CNAE relacionado a atividades hospitalares",
            "description": "Observações"
          }
        }
      },
      "CreatePacienteDto": {
        "type": "object",
        "properties": {
          "codigo_interno": {
            "type": "string",
            "description": "Código interno do paciente (será gerado automaticamente se não fornecido)",
            "example": "PAC123456",
            "maxLength": 20
          },
          "nome": {
            "type": "string",
            "description": "Nome completo do paciente",
            "example": "João da Silva Santos",
            "maxLength": 255
          },
          "nome_social": {
            "type": "string",
            "description": "Nome social do paciente",
            "example": "João Santos",
            "maxLength": 255
          },
          "usar_nome_social": {
            "type": "string",
            "description": "Se deve usar o nome social",
            "enum": ["nao_se_aplica", "sim", "nao"],
            "default": "nao_se_aplica"
          },
          "sexo": {
            "type": "string",
            "description": "Sexo do paciente",
            "enum": ["M", "F", "O"],
            "example": "M"
          },
          "data_nascimento": {
            "type": "string",
            "description": "Data de nascimento no formato YYYY-MM-DD",
            "example": "1990-01-15"
          },
          "nome_mae": {
            "type": "string",
            "description": "Nome completo da mãe",
            "example": "Maria da Silva Santos",
            "maxLength": 255
          },
          "prontuario": {
            "type": "string",
            "description": "Número do prontuário",
            "example": "PRONT123456",
            "maxLength": 50
          },
          "rg": {
            "type": "string",
            "description": "RG do paciente",
            "example": "12.345.678-9",
            "maxLength": 20
          },
          "cpf": {
            "type": "string",
            "description": "CPF do paciente (apenas números)",
            "example": "12345678901",
            "minLength": 11,
            "maxLength": 11
          },
          "estado_civil": {
            "type": "string",
            "description": "Estado civil",
            "example": "Solteiro",
            "maxLength": 50
          },
          "email": {
            "type": "string",
            "description": "E-mail do paciente",
            "example": "joao@email.com",
            "maxLength": 255
          },
          "contatos": {
            "type": "string",
            "description": "Telefone de contato principal",
            "example": "11999999999",
            "maxLength": 20
          },
          "whatsapp": {
            "type": "string",
            "description": "WhatsApp (se diferente do contato principal)",
            "example": "11888888888",
            "maxLength": 20
          },
          "profissao": {
            "type": "string",
            "description": "Profissão",
            "example": "Engenheiro Civil",
            "maxLength": 100
          },
          "observacao": {
            "type": "string",
            "description": "Observações sobre o paciente",
            "example": "Paciente com alergia a dipirona"
          },
          "convenio_id": {
            "type": "string",
            "description": "ID do convênio",
            "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
          },
          "plano": {
            "type": "string",
            "description": "Nome do plano",
            "example": "Plus",
            "maxLength": 100
          },
          "validade": {
            "type": "string",
            "description": "Validade do convênio no formato YYYY-MM-DD",
            "example": "2025-12-31"
          },
          "matricula": {
            "type": "string",
            "description": "Matrícula do convênio",
            "example": "123456789012",
            "maxLength": 50
          },
          "nome_titular": {
            "type": "string",
            "description": "Nome do titular do convênio",
            "example": "João da Silva Santos",
            "maxLength": 255
          },
          "cartao_sus": {
            "type": "string",
            "description": "Número do cartão SUS",
            "example": "123456789012345",
            "maxLength": 50
          },
          "cep": {
            "type": "string",
            "description": "CEP (apenas números)",
            "example": "01310100",
            "minLength": 8,
            "maxLength": 8
          },
          "rua": {
            "type": "string",
            "description": "Rua/Logradouro",
            "example": "Rua das Flores",
            "maxLength": 255
          },
          "numero": {
            "type": "string",
            "description": "Número do endereço",
            "example": "123",
            "maxLength": 20
          },
          "bairro": {
            "type": "string",
            "description": "Bairro",
            "example": "Centro",
            "maxLength": 100
          },
          "complemento": {
            "type": "string",
            "description": "Complemento do endereço",
            "example": "Apto 101",
            "maxLength": 100
          },
          "cidade": {
            "type": "string",
            "description": "Cidade",
            "example": "São Paulo",
            "maxLength": 100
          },
          "estado": {
            "type": "string",
            "description": "Estado (UF)",
            "example": "SP",
            "minLength": 2,
            "maxLength": 2
          },
          "empresa_id": {
            "type": "string",
            "description": "ID da empresa/filial",
            "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
          }
        },
        "required": [
          "nome",
          "sexo",
          "data_nascimento",
          "nome_mae",
          "rg",
          "cpf",
          "estado_civil",
          "email",
          "contatos",
          "profissao",
          "cep",
          "numero",
          "bairro",
          "cidade",
          "estado",
          "empresa_id"
        ]
      },
      "Paciente": {
        "type": "object",
        "properties": {}
      },
      "UpdatePacienteDto": {
        "type": "object",
        "properties": {
          "codigo_interno": {
            "type": "string",
            "description": "Código interno do paciente (será gerado automaticamente se não fornecido)",
            "example": "PAC123456",
            "maxLength": 20
          },
          "nome": {
            "type": "string",
            "description": "Nome completo do paciente",
            "example": "João da Silva Santos",
            "maxLength": 255
          },
          "nome_social": {
            "type": "string",
            "description": "Nome social do paciente",
            "example": "João Santos",
            "maxLength": 255
          },
          "usar_nome_social": {
            "type": "string",
            "description": "Se deve usar o nome social",
            "enum": ["nao_se_aplica", "sim", "nao"],
            "default": "nao_se_aplica"
          },
          "sexo": {
            "type": "string",
            "description": "Sexo do paciente",
            "enum": ["M", "F", "O"],
            "example": "M"
          },
          "data_nascimento": {
            "type": "string",
            "description": "Data de nascimento no formato YYYY-MM-DD",
            "example": "1990-01-15"
          },
          "nome_mae": {
            "type": "string",
            "description": "Nome completo da mãe",
            "example": "Maria da Silva Santos",
            "maxLength": 255
          },
          "prontuario": {
            "type": "string",
            "description": "Número do prontuário",
            "example": "PRONT123456",
            "maxLength": 50
          },
          "rg": {
            "type": "string",
            "description": "RG do paciente",
            "example": "12.345.678-9",
            "maxLength": 20
          },
          "cpf": {
            "type": "string",
            "description": "CPF do paciente (apenas números)",
            "example": "12345678901",
            "minLength": 11,
            "maxLength": 11
          },
          "estado_civil": {
            "type": "string",
            "description": "Estado civil",
            "example": "Solteiro",
            "maxLength": 50
          },
          "email": {
            "type": "string",
            "description": "E-mail do paciente",
            "example": "joao@email.com",
            "maxLength": 255
          },
          "contatos": {
            "type": "string",
            "description": "Telefone de contato principal",
            "example": "11999999999",
            "maxLength": 20
          },
          "whatsapp": {
            "type": "string",
            "description": "WhatsApp (se diferente do contato principal)",
            "example": "11888888888",
            "maxLength": 20
          },
          "profissao": {
            "type": "string",
            "description": "Profissão",
            "example": "Engenheiro Civil",
            "maxLength": 100
          },
          "observacao": {
            "type": "string",
            "description": "Observações sobre o paciente",
            "example": "Paciente com alergia a dipirona"
          },
          "convenio_id": {
            "type": "string",
            "description": "ID do convênio",
            "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
          },
          "plano": {
            "type": "string",
            "description": "Nome do plano",
            "example": "Plus",
            "maxLength": 100
          },
          "validade": {
            "type": "string",
            "description": "Validade do convênio no formato YYYY-MM-DD",
            "example": "2025-12-31"
          },
          "matricula": {
            "type": "string",
            "description": "Matrícula do convênio",
            "example": "123456789012",
            "maxLength": 50
          },
          "nome_titular": {
            "type": "string",
            "description": "Nome do titular do convênio",
            "example": "João da Silva Santos",
            "maxLength": 255
          },
          "cartao_sus": {
            "type": "string",
            "description": "Número do cartão SUS",
            "example": "123456789012345",
            "maxLength": 50
          },
          "cep": {
            "type": "string",
            "description": "CEP (apenas números)",
            "example": "01310100",
            "minLength": 8,
            "maxLength": 8
          },
          "rua": {
            "type": "string",
            "description": "Rua/Logradouro",
            "example": "Rua das Flores",
            "maxLength": 255
          },
          "numero": {
            "type": "string",
            "description": "Número do endereço",
            "example": "123",
            "maxLength": 20
          },
          "bairro": {
            "type": "string",
            "description": "Bairro",
            "example": "Centro",
            "maxLength": 100
          },
          "complemento": {
            "type": "string",
            "description": "Complemento do endereço",
            "example": "Apto 101",
            "maxLength": 100
          },
          "cidade": {
            "type": "string",
            "description": "Cidade",
            "example": "São Paulo",
            "maxLength": 100
          },
          "estado": {
            "type": "string",
            "description": "Estado (UF)",
            "example": "SP",
            "minLength": 2,
            "maxLength": 2
          },
          "empresa_id": {
            "type": "string",
            "description": "ID da empresa/filial",
            "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
          }
        }
      },
      "CreateHorarioAtendimentoDto": {
        "type": "object",
        "properties": {
          "diaSemana": {
            "type": "string",
            "enum": [
              "SEGUNDA",
              "TERCA",
              "QUARTA",
              "QUINTA",
              "SEXTA",
              "SABADO",
              "DOMINGO",
              "FERIADOS"
            ],
            "description": "Dia da semana"
          },
          "horarioInicio": {
            "type": "string",
            "example": "08:00",
            "description": "Horário de início (HH:mm)"
          },
          "horarioFim": {
            "type": "string",
            "example": "18:00",
            "description": "Horário de fim (HH:mm)"
          },
          "intervaloInicio": {
            "type": "string",
            "example": "12:00",
            "description": "Início do intervalo (HH:mm)"
          },
          "intervaloFim": {
            "type": "string",
            "example": "13:00",
            "description": "Fim do intervalo (HH:mm)"
          },
          "semIntervalo": {
            "type": "boolean",
            "default": false,
            "description": "Indica se não há intervalo"
          }
        },
        "required": ["diaSemana", "horarioInicio", "horarioFim", "semIntervalo"]
      },
      "CreateDadoBancarioDto": {
        "type": "object",
        "properties": {
          "banco": {
            "type": "string",
            "example": "Banco do Brasil",
            "description": "Nome do banco"
          },
          "codigoBanco": {
            "type": "string",
            "example": "001",
            "description": "Código do banco"
          },
          "agencia": {
            "type": "string",
            "example": "1234",
            "description": "Número da agência"
          },
          "digitoAgencia": {
            "type": "string",
            "example": "5",
            "description": "Dígito da agência"
          },
          "contaCorrente": {
            "type": "string",
            "example": "12345",
            "description": "Número da conta corrente"
          },
          "digitoConta": {
            "type": "string",
            "example": "6",
            "description": "Dígito da conta"
          },
          "tipoConta": {
            "type": "string",
            "example": "CORRENTE",
            "description": "Tipo da conta",
            "default": "CORRENTE"
          },
          "principal": {
            "type": "boolean",
            "default": false,
            "description": "Indica se é a conta principal"
          },
          "observacoes": {
            "type": "string",
            "description": "Observações sobre a conta bancária"
          }
        },
        "required": ["banco", "agencia", "contaCorrente", "principal"]
      },
      "CreateCnaeSecundarioDto": {
        "type": "object",
        "properties": {
          "cnaeId": {
            "type": "string",
            "example": "uuid-do-cnae",
            "description": "ID do CNAE secundário"
          }
        },
        "required": ["cnaeId"]
      },
      "CreateUnidadeSaudeDto": {
        "type": "object",
        "properties": {
          "nomeUnidade": {
            "type": "string",
            "example": "Laboratório Central",
            "description": "Nome da unidade de saúde"
          },
          "codigoInterno": {
            "type": "string",
            "example": "LAB001",
            "description": "Código interno da unidade"
          },
          "cnpj": {
            "type": "string",
            "example": "12345678000190",
            "description": "CNPJ da unidade"
          },
          "razaoSocial": {
            "type": "string",
            "example": "Laboratório ABC Ltda",
            "description": "Razão social"
          },
          "nomeFantasia": {
            "type": "string",
            "example": "Lab ABC",
            "description": "Nome fantasia"
          },
          "inscricaoMunicipal": {
            "type": "string",
            "example": "123456",
            "description": "Inscrição municipal"
          },
          "inscricaoEstadual": {
            "type": "string",
            "example": "789456123",
            "description": "Inscrição estadual"
          },
          "cnes": {
            "type": "string",
            "example": "1234567",
            "description": "Código CNES"
          },
          "contatosUnidade": {
            "type": "string",
            "example": "(11) 98765-4321",
            "description": "Contatos da unidade"
          },
          "email": {
            "type": "string",
            "example": "contato@lab.com.br",
            "description": "E-mail da unidade"
          },
          "codigoServicoPrincipal": {
            "type": "string",
            "example": "001",
            "description": "Código do serviço principal"
          },
          "codigoServicoSecundario": {
            "example": ["002", "003", "004"],
            "description": "Códigos dos serviços secundários",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cnaePrincipalId": {
            "type": "string",
            "example": "uuid-do-cnae",
            "description": "ID do CNAE principal"
          },
          "cep": {
            "type": "string",
            "example": "01234567",
            "description": "CEP"
          },
          "rua": {
            "type": "string",
            "example": "Rua das Flores",
            "description": "Logradouro"
          },
          "numero": {
            "type": "string",
            "example": "123",
            "description": "Número"
          },
          "bairro": {
            "type": "string",
            "example": "Centro",
            "description": "Bairro"
          },
          "complemento": {
            "type": "string",
            "example": "Sala 10",
            "description": "Complemento"
          },
          "estado": {
            "type": "string",
            "example": "SP",
            "description": "Estado (UF)"
          },
          "cidade": {
            "type": "string",
            "example": "São Paulo",
            "description": "Cidade"
          },
          "nomeResponsavel": {
            "type": "string",
            "example": "Dr. João Silva",
            "description": "Nome do responsável"
          },
          "contatoResponsavel": {
            "type": "string",
            "example": "(11) 98765-4321",
            "description": "Contato do responsável"
          },
          "emailResponsavel": {
            "type": "string",
            "example": "responsavel@lab.com.br",
            "description": "E-mail do responsável"
          },
          "irrfPercentual": {
            "type": "number",
            "example": 1.5,
            "description": "Percentual IRRF",
            "minimum": 0,
            "maximum": 100
          },
          "pisPercentual": {
            "type": "number",
            "example": 0.65,
            "description": "Percentual PIS",
            "minimum": 0,
            "maximum": 100
          },
          "cofinsPercentual": {
            "type": "number",
            "example": 3,
            "description": "Percentual COFINS",
            "minimum": 0,
            "maximum": 100
          },
          "csllPercentual": {
            "type": "number",
            "example": 1,
            "description": "Percentual CSLL",
            "minimum": 0,
            "maximum": 100
          },
          "issPercentual": {
            "type": "number",
            "example": 5,
            "description": "Percentual ISS",
            "minimum": 0,
            "maximum": 100
          },
          "ibsPercentual": {
            "type": "number",
            "example": 0,
            "description": "Percentual IBS",
            "minimum": 0,
            "maximum": 100
          },
          "cbsPercentual": {
            "type": "number",
            "example": 0,
            "description": "Percentual CBS",
            "minimum": 0,
            "maximum": 100
          },
          "reterIss": {
            "type": "boolean",
            "default": false,
            "description": "Reter ISS"
          },
          "reterIr": {
            "type": "boolean",
            "default": false,
            "description": "Reter IR"
          },
          "reterPcc": {
            "type": "boolean",
            "default": false,
            "description": "Reter PCC"
          },
          "reterIbs": {
            "type": "boolean",
            "default": false,
            "description": "Reter IBS"
          },
          "reterCbs": {
            "type": "boolean",
            "default": false,
            "description": "Reter CBS"
          },
          "optanteSimplesNacional": {
            "type": "boolean",
            "default": false,
            "description": "Optante pelo Simples Nacional"
          },
          "certificadoDigitalVinculado": {
            "type": "boolean",
            "default": false,
            "description": "Certificado digital vinculado"
          },
          "certificadoDigitalPath": {
            "type": "string",
            "description": "Caminho do arquivo do certificado digital"
          },
          "certificadoDigitalSenha": {
            "type": "string",
            "description": "Senha do certificado digital"
          },
          "certificadoDigitalValidade": {
            "format": "date-time",
            "type": "string",
            "description": "Data de validade do certificado digital"
          },
          "horariosAtendimento": {
            "description": "Horários de atendimento",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateHorarioAtendimentoDto"
            }
          },
          "dadosBancarios": {
            "description": "Dados bancários",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateDadoBancarioDto"
            }
          },
          "cnaeSecundarios": {
            "description": "CNAEs secundários",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCnaeSecundarioDto"
            }
          },
          "ativo": {
            "type": "boolean",
            "default": true,
            "description": "Status ativo/inativo"
          }
        },
        "required": ["nomeUnidade", "cnpj", "razaoSocial", "nomeFantasia"]
      },
      "HorarioAtendimentoResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "diaSemana": {
            "type": "string"
          },
          "horarioInicio": {
            "type": "string"
          },
          "horarioFim": {
            "type": "string"
          },
          "intervaloInicio": {
            "type": "string"
          },
          "intervaloFim": {
            "type": "string"
          },
          "semIntervalo": {
            "type": "boolean"
          },
          "ativo": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "diaSemana",
          "horarioInicio",
          "horarioFim",
          "semIntervalo",
          "ativo"
        ]
      },
      "DadoBancarioResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "banco": {
            "type": "string"
          },
          "codigoBanco": {
            "type": "string"
          },
          "agencia": {
            "type": "string"
          },
          "digitoAgencia": {
            "type": "string"
          },
          "contaCorrente": {
            "type": "string"
          },
          "digitoConta": {
            "type": "string"
          },
          "tipoConta": {
            "type": "string"
          },
          "principal": {
            "type": "boolean"
          },
          "observacoes": {
            "type": "string"
          },
          "ativo": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "banco",
          "agencia",
          "contaCorrente",
          "tipoConta",
          "principal",
          "ativo"
        ]
      },
      "CnaeSecundarioResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "cnaeId": {
            "type": "string"
          },
          "cnae": {
            "type": "object",
            "description": "Objeto CNAE completo"
          },
          "ativo": {
            "type": "boolean"
          }
        },
        "required": ["id", "cnaeId", "cnae", "ativo"]
      },
      "UnidadeSaudeResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "nomeUnidade": {
            "type": "string"
          },
          "codigoInterno": {
            "type": "string"
          },
          "cnpj": {
            "type": "string"
          },
          "razaoSocial": {
            "type": "string"
          },
          "nomeFantasia": {
            "type": "string"
          },
          "inscricaoMunicipal": {
            "type": "string"
          },
          "inscricaoEstadual": {
            "type": "string"
          },
          "cnes": {
            "type": "string"
          },
          "contatosUnidade": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "codigoServicoPrincipal": {
            "type": "string"
          },
          "codigoServicoSecundario": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cnaePrincipalId": {
            "type": "string"
          },
          "cnaePrincipal": {
            "type": "object",
            "description": "Objeto CNAE principal"
          },
          "cep": {
            "type": "string"
          },
          "rua": {
            "type": "string"
          },
          "numero": {
            "type": "string"
          },
          "bairro": {
            "type": "string"
          },
          "complemento": {
            "type": "string"
          },
          "estado": {
            "type": "string"
          },
          "cidade": {
            "type": "string"
          },
          "nomeResponsavel": {
            "type": "string"
          },
          "contatoResponsavel": {
            "type": "string"
          },
          "emailResponsavel": {
            "type": "string"
          },
          "irrfPercentual": {
            "type": "number"
          },
          "pisPercentual": {
            "type": "number"
          },
          "cofinsPercentual": {
            "type": "number"
          },
          "csllPercentual": {
            "type": "number"
          },
          "issPercentual": {
            "type": "number"
          },
          "ibsPercentual": {
            "type": "number"
          },
          "cbsPercentual": {
            "type": "number"
          },
          "reterIss": {
            "type": "boolean"
          },
          "reterIr": {
            "type": "boolean"
          },
          "reterPcc": {
            "type": "boolean"
          },
          "reterIbs": {
            "type": "boolean"
          },
          "reterCbs": {
            "type": "boolean"
          },
          "optanteSimplesNacional": {
            "type": "boolean"
          },
          "certificadoDigitalVinculado": {
            "type": "boolean"
          },
          "certificadoDigitalValidade": {
            "format": "date-time",
            "type": "string"
          },
          "horariosAtendimento": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HorarioAtendimentoResponseDto"
            }
          },
          "dadosBancarios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DadoBancarioResponseDto"
            }
          },
          "cnaeSecundarios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CnaeSecundarioResponseDto"
            }
          },
          "ativo": {
            "type": "boolean"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "nomeUnidade",
          "cnpj",
          "razaoSocial",
          "nomeFantasia",
          "reterIss",
          "reterIr",
          "reterPcc",
          "reterIbs",
          "reterCbs",
          "optanteSimplesNacional",
          "certificadoDigitalVinculado",
          "horariosAtendimento",
          "dadosBancarios",
          "cnaeSecundarios",
          "ativo",
          "createdAt",
          "updatedAt"
        ]
      },
      "UpdateUnidadeSaudeDto": {
        "type": "object",
        "properties": {
          "nomeUnidade": {
            "type": "string",
            "example": "Laboratório Central",
            "description": "Nome da unidade de saúde"
          },
          "codigoInterno": {
            "type": "string",
            "example": "LAB001",
            "description": "Código interno da unidade"
          },
          "cnpj": {
            "type": "string",
            "example": "12345678000190",
            "description": "CNPJ da unidade"
          },
          "razaoSocial": {
            "type": "string",
            "example": "Laboratório ABC Ltda",
            "description": "Razão social"
          },
          "nomeFantasia": {
            "type": "string",
            "example": "Lab ABC",
            "description": "Nome fantasia"
          },
          "inscricaoMunicipal": {
            "type": "string",
            "example": "123456",
            "description": "Inscrição municipal"
          },
          "inscricaoEstadual": {
            "type": "string",
            "example": "789456123",
            "description": "Inscrição estadual"
          },
          "cnes": {
            "type": "string",
            "example": "1234567",
            "description": "Código CNES"
          },
          "contatosUnidade": {
            "type": "string",
            "example": "(11) 98765-4321",
            "description": "Contatos da unidade"
          },
          "email": {
            "type": "string",
            "example": "contato@lab.com.br",
            "description": "E-mail da unidade"
          },
          "codigoServicoPrincipal": {
            "type": "string",
            "example": "001",
            "description": "Código do serviço principal"
          },
          "codigoServicoSecundario": {
            "example": ["002", "003", "004"],
            "description": "Códigos dos serviços secundários",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cnaePrincipalId": {
            "type": "string",
            "example": "uuid-do-cnae",
            "description": "ID do CNAE principal"
          },
          "cep": {
            "type": "string",
            "example": "01234567",
            "description": "CEP"
          },
          "rua": {
            "type": "string",
            "example": "Rua das Flores",
            "description": "Logradouro"
          },
          "numero": {
            "type": "string",
            "example": "123",
            "description": "Número"
          },
          "bairro": {
            "type": "string",
            "example": "Centro",
            "description": "Bairro"
          },
          "complemento": {
            "type": "string",
            "example": "Sala 10",
            "description": "Complemento"
          },
          "estado": {
            "type": "string",
            "example": "SP",
            "description": "Estado (UF)"
          },
          "cidade": {
            "type": "string",
            "example": "São Paulo",
            "description": "Cidade"
          },
          "nomeResponsavel": {
            "type": "string",
            "example": "Dr. João Silva",
            "description": "Nome do responsável"
          },
          "contatoResponsavel": {
            "type": "string",
            "example": "(11) 98765-4321",
            "description": "Contato do responsável"
          },
          "emailResponsavel": {
            "type": "string",
            "example": "responsavel@lab.com.br",
            "description": "E-mail do responsável"
          },
          "irrfPercentual": {
            "type": "number",
            "example": 1.5,
            "description": "Percentual IRRF",
            "minimum": 0,
            "maximum": 100
          },
          "pisPercentual": {
            "type": "number",
            "example": 0.65,
            "description": "Percentual PIS",
            "minimum": 0,
            "maximum": 100
          },
          "cofinsPercentual": {
            "type": "number",
            "example": 3,
            "description": "Percentual COFINS",
            "minimum": 0,
            "maximum": 100
          },
          "csllPercentual": {
            "type": "number",
            "example": 1,
            "description": "Percentual CSLL",
            "minimum": 0,
            "maximum": 100
          },
          "issPercentual": {
            "type": "number",
            "example": 5,
            "description": "Percentual ISS",
            "minimum": 0,
            "maximum": 100
          },
          "ibsPercentual": {
            "type": "number",
            "example": 0,
            "description": "Percentual IBS",
            "minimum": 0,
            "maximum": 100
          },
          "cbsPercentual": {
            "type": "number",
            "example": 0,
            "description": "Percentual CBS",
            "minimum": 0,
            "maximum": 100
          },
          "reterIss": {
            "type": "boolean",
            "default": false,
            "description": "Reter ISS"
          },
          "reterIr": {
            "type": "boolean",
            "default": false,
            "description": "Reter IR"
          },
          "reterPcc": {
            "type": "boolean",
            "default": false,
            "description": "Reter PCC"
          },
          "reterIbs": {
            "type": "boolean",
            "default": false,
            "description": "Reter IBS"
          },
          "reterCbs": {
            "type": "boolean",
            "default": false,
            "description": "Reter CBS"
          },
          "optanteSimplesNacional": {
            "type": "boolean",
            "default": false,
            "description": "Optante pelo Simples Nacional"
          },
          "certificadoDigitalVinculado": {
            "type": "boolean",
            "default": false,
            "description": "Certificado digital vinculado"
          },
          "certificadoDigitalPath": {
            "type": "string",
            "description": "Caminho do arquivo do certificado digital"
          },
          "certificadoDigitalSenha": {
            "type": "string",
            "description": "Senha do certificado digital"
          },
          "certificadoDigitalValidade": {
            "format": "date-time",
            "type": "string",
            "description": "Data de validade do certificado digital"
          },
          "horariosAtendimento": {
            "description": "Horários de atendimento",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateHorarioAtendimentoDto"
            }
          },
          "dadosBancarios": {
            "description": "Dados bancários",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateDadoBancarioDto"
            }
          },
          "cnaeSecundarios": {
            "description": "CNAEs secundários",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCnaeSecundarioDto"
            }
          },
          "ativo": {
            "type": "boolean",
            "default": true,
            "description": "Status ativo/inativo"
          }
        }
      },
      "CreateExameDto": {
        "type": "object",
        "properties": {
          "codigo_interno": {
            "type": "string",
            "description": "Código interno único do exame",
            "example": "HEMOG001",
            "maxLength": 50
          },
          "nome": {
            "type": "string",
            "description": "Nome completo do exame",
            "example": "Hemograma Completo",
            "maxLength": 255
          },
          "sinonimos": {
            "type": "string",
            "description": "Sinônimos ou nomes alternativos",
            "example": "Hemograma, Contagem de células",
            "maxLength": 50
          },
          "codigo_tuss": {
            "type": "string",
            "description": "Código TUSS (Terminologia Unificada da Saúde Suplementar)",
            "example": "40304361",
            "maxLength": 20
          },
          "codigo_amb": {
            "type": "string",
            "description": "Código AMB (Associação Médica Brasileira)",
            "example": "28.01.001-2",
            "maxLength": 20
          },
          "codigo_loinc": {
            "type": "string",
            "description": "Código LOINC (Logical Observation Identifiers Names and Codes)",
            "example": "58410-2",
            "maxLength": 20
          },
          "codigo_sus": {
            "type": "string",
            "description": "Código SUS",
            "example": "0202010503",
            "maxLength": 20
          },
          "tipo_exame_id": {
            "type": "string",
            "description": "ID do tipo de exame",
            "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
          },
          "categoria": {
            "type": "string",
            "description": "Categoria geral do exame",
            "enum": ["laboratorio", "imagem", "procedimento", "consulta"],
            "example": "laboratorio"
          },
          "subgrupo_id": {
            "type": "string",
            "description": "ID do subgrupo do exame",
            "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
          },
          "setor_id": {
            "type": "string",
            "description": "ID do setor responsável",
            "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
          },
          "metodologia": {
            "type": "string",
            "description": "Metodologia utilizada no exame",
            "example": "Citometria de fluxo",
            "maxLength": 255
          },
          "especialidade_requerida": {
            "type": "string",
            "description": "Se precisa de especialidade médica específica",
            "enum": ["nao", "sim"],
            "default": "nao"
          },
          "especialidade": {
            "type": "string",
            "description": "Especialidade médica requerida",
            "example": "Hematologia",
            "maxLength": 255
          },
          "grupo": {
            "type": "string",
            "description": "Grupo de exames relacionados",
            "example": "Hemograma",
            "maxLength": 100
          },
          "peso": {
            "type": "number",
            "description": "Peso/prioridade para ordenação",
            "example": 100
          },
          "volume_min": {
            "type": "number",
            "description": "Volume mínimo necessário (em ml)",
            "example": 2.5
          },
          "volume_ideal": {
            "type": "number",
            "description": "Volume ideal (em ml)",
            "example": 5
          },
          "unidade_medida": {
            "type": "string",
            "description": "Unidade de medida do resultado",
            "example": "mg/dL",
            "maxLength": 50
          },
          "amostra_biologica": {
            "type": "string",
            "description": "Tipo de amostra biológica necessária",
            "example": "Sangue total EDTA",
            "maxLength": 100
          },
          "tipo_recipiente": {
            "type": "string",
            "description": "Tipo de recipiente para coleta",
            "example": "Tubo roxo EDTA",
            "maxLength": 100
          },
          "necessita_preparo": {
            "type": "string",
            "description": "Se necessita preparo especial",
            "enum": ["nao", "sim"],
            "default": "nao"
          },
          "requisitos": {
            "type": "string",
            "description": "Requisitos para realização do exame",
            "example": "Jejum de 8 horas"
          },
          "tipo_realizacao": {
            "type": "string",
            "description": "Onde o exame é realizado",
            "enum": ["interno", "apoio", "telemedicina"],
            "default": "interno"
          },
          "laboratorio_apoio_id": {
            "type": "string",
            "description": "ID do laboratório de apoio",
            "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
          },
          "destino_exame": {
            "type": "string",
            "description": "Destino do exame no sistema externo",
            "example": "DB_HEMOGRAMA",
            "maxLength": 100
          },
          "envio_automatico": {
            "type": "string",
            "description": "Se envia automaticamente para laboratório de apoio",
            "enum": ["nao", "sim"],
            "default": "nao"
          },
          "prazo_entrega_dias": {
            "type": "number",
            "description": "Prazo de entrega em dias úteis",
            "example": 2
          },
          "formato_prazo": {
            "type": "string",
            "description": "Formato do prazo",
            "example": "2 dias úteis",
            "maxLength": 50
          },
          "tem_valores_referencia": {
            "type": "string",
            "description": "Se tem referência de valores normais",
            "enum": ["nao", "sim"],
            "default": "nao"
          },
          "valores_referencia": {
            "type": "object",
            "description": "Valores de referência por idade/sexo",
            "example": {
              "adulto_masculino": {
                "min": 13.5,
                "max": 17.5
              },
              "adulto_feminino": {
                "min": 12,
                "max": 15.5
              }
            }
          },
          "tecnica_coleta": {
            "type": "string",
            "description": "Técnica de coleta específica",
            "example": "Punção venosa periférica"
          },
          "distribuicao": {
            "type": "string",
            "description": "Distribuição/processamento da amostra",
            "example": "Centrifugar a 3000 rpm por 10 minutos"
          },
          "processamento_entrega": {
            "type": "string",
            "description": "Processamento e entrega de laudos",
            "example": "Resultado liberado em até 2 dias úteis"
          },
          "requisitos_anvisa": {
            "type": "object",
            "description": "Requisitos da ANVISA/Normas técnicas",
            "example": {
              "norma": "RDC 302/2005",
              "requisito": "Controle de qualidade interno"
            }
          },
          "formularios_atendimento": {
            "type": "object",
            "description": "Formulários necessários para o atendimento",
            "example": ["termo_consentimento", "questionario_jejum"]
          },
          "preparo_coleta": {
            "type": "object",
            "description": "Instruções de preparo por público",
            "example": {
              "geral": "Jejum de 8 horas",
              "feminino": "Informar data da última menstruação",
              "infantil": "Jejum de 4 horas para crianças"
            }
          },
          "lembretes": {
            "type": "object",
            "description": "Lembretes para coletores, recepcionistas e ordem de serviço",
            "example": {
              "coletores": "Homogeneizar suavemente o tubo",
              "recepcionistas": "Verificar jejum do paciente",
              "ordem_servico": "Exame deve ser coletado em tubo EDTA"
            }
          },
          "status": {
            "type": "string",
            "description": "Status do exame no sistema",
            "enum": ["ativo", "inativo", "suspenso"],
            "default": "ativo"
          },
          "empresa_id": {
            "type": "string",
            "description": "ID da empresa (null = disponível para todas)",
            "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
          }
        },
        "required": [
          "codigo_interno",
          "nome",
          "tipo_exame_id",
          "categoria",
          "especialidade_requerida",
          "necessita_preparo",
          "tipo_realizacao",
          "envio_automatico",
          "tem_valores_referencia",
          "status"
        ]
      },
      "Exame": {
        "type": "object",
        "properties": {}
      },
      "UpdateExameDto": {
        "type": "object",
        "properties": {
          "codigo_interno": {
            "type": "string",
            "description": "Código interno único do exame",
            "example": "HEMOG001",
            "maxLength": 50
          },
          "nome": {
            "type": "string",
            "description": "Nome completo do exame",
            "example": "Hemograma Completo",
            "maxLength": 255
          },
          "sinonimos": {
            "type": "string",
            "description": "Sinônimos ou nomes alternativos",
            "example": "Hemograma, Contagem de células",
            "maxLength": 50
          },
          "codigo_tuss": {
            "type": "string",
            "description": "Código TUSS (Terminologia Unificada da Saúde Suplementar)",
            "example": "40304361",
            "maxLength": 20
          },
          "codigo_amb": {
            "type": "string",
            "description": "Código AMB (Associação Médica Brasileira)",
            "example": "28.01.001-2",
            "maxLength": 20
          },
          "codigo_loinc": {
            "type": "string",
            "description": "Código LOINC (Logical Observation Identifiers Names and Codes)",
            "example": "58410-2",
            "maxLength": 20
          },
          "codigo_sus": {
            "type": "string",
            "description": "Código SUS",
            "example": "0202010503",
            "maxLength": 20
          },
          "tipo_exame_id": {
            "type": "string",
            "description": "ID do tipo de exame",
            "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
          },
          "categoria": {
            "type": "string",
            "description": "Categoria geral do exame",
            "enum": ["laboratorio", "imagem", "procedimento", "consulta"],
            "example": "laboratorio"
          },
          "subgrupo_id": {
            "type": "string",
            "description": "ID do subgrupo do exame",
            "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
          },
          "setor_id": {
            "type": "string",
            "description": "ID do setor responsável",
            "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
          },
          "metodologia": {
            "type": "string",
            "description": "Metodologia utilizada no exame",
            "example": "Citometria de fluxo",
            "maxLength": 255
          },
          "especialidade_requerida": {
            "type": "string",
            "description": "Se precisa de especialidade médica específica",
            "enum": ["nao", "sim"],
            "default": "nao"
          },
          "especialidade": {
            "type": "string",
            "description": "Especialidade médica requerida",
            "example": "Hematologia",
            "maxLength": 255
          },
          "grupo": {
            "type": "string",
            "description": "Grupo de exames relacionados",
            "example": "Hemograma",
            "maxLength": 100
          },
          "peso": {
            "type": "number",
            "description": "Peso/prioridade para ordenação",
            "example": 100
          },
          "volume_min": {
            "type": "number",
            "description": "Volume mínimo necessário (em ml)",
            "example": 2.5
          },
          "volume_ideal": {
            "type": "number",
            "description": "Volume ideal (em ml)",
            "example": 5
          },
          "unidade_medida": {
            "type": "string",
            "description": "Unidade de medida do resultado",
            "example": "mg/dL",
            "maxLength": 50
          },
          "amostra_biologica": {
            "type": "string",
            "description": "Tipo de amostra biológica necessária",
            "example": "Sangue total EDTA",
            "maxLength": 100
          },
          "tipo_recipiente": {
            "type": "string",
            "description": "Tipo de recipiente para coleta",
            "example": "Tubo roxo EDTA",
            "maxLength": 100
          },
          "necessita_preparo": {
            "type": "string",
            "description": "Se necessita preparo especial",
            "enum": ["nao", "sim"],
            "default": "nao"
          },
          "requisitos": {
            "type": "string",
            "description": "Requisitos para realização do exame",
            "example": "Jejum de 8 horas"
          },
          "tipo_realizacao": {
            "type": "string",
            "description": "Onde o exame é realizado",
            "enum": ["interno", "apoio", "telemedicina"],
            "default": "interno"
          },
          "laboratorio_apoio_id": {
            "type": "string",
            "description": "ID do laboratório de apoio",
            "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
          },
          "destino_exame": {
            "type": "string",
            "description": "Destino do exame no sistema externo",
            "example": "DB_HEMOGRAMA",
            "maxLength": 100
          },
          "envio_automatico": {
            "type": "string",
            "description": "Se envia automaticamente para laboratório de apoio",
            "enum": ["nao", "sim"],
            "default": "nao"
          },
          "prazo_entrega_dias": {
            "type": "number",
            "description": "Prazo de entrega em dias úteis",
            "example": 2
          },
          "formato_prazo": {
            "type": "string",
            "description": "Formato do prazo",
            "example": "2 dias úteis",
            "maxLength": 50
          },
          "tem_valores_referencia": {
            "type": "string",
            "description": "Se tem referência de valores normais",
            "enum": ["nao", "sim"],
            "default": "nao"
          },
          "valores_referencia": {
            "type": "object",
            "description": "Valores de referência por idade/sexo",
            "example": {
              "adulto_masculino": {
                "min": 13.5,
                "max": 17.5
              },
              "adulto_feminino": {
                "min": 12,
                "max": 15.5
              }
            }
          },
          "tecnica_coleta": {
            "type": "string",
            "description": "Técnica de coleta específica",
            "example": "Punção venosa periférica"
          },
          "distribuicao": {
            "type": "string",
            "description": "Distribuição/processamento da amostra",
            "example": "Centrifugar a 3000 rpm por 10 minutos"
          },
          "processamento_entrega": {
            "type": "string",
            "description": "Processamento e entrega de laudos",
            "example": "Resultado liberado em até 2 dias úteis"
          },
          "requisitos_anvisa": {
            "type": "object",
            "description": "Requisitos da ANVISA/Normas técnicas",
            "example": {
              "norma": "RDC 302/2005",
              "requisito": "Controle de qualidade interno"
            }
          },
          "formularios_atendimento": {
            "type": "object",
            "description": "Formulários necessários para o atendimento",
            "example": ["termo_consentimento", "questionario_jejum"]
          },
          "preparo_coleta": {
            "type": "object",
            "description": "Instruções de preparo por público",
            "example": {
              "geral": "Jejum de 8 horas",
              "feminino": "Informar data da última menstruação",
              "infantil": "Jejum de 4 horas para crianças"
            }
          },
          "lembretes": {
            "type": "object",
            "description": "Lembretes para coletores, recepcionistas e ordem de serviço",
            "example": {
              "coletores": "Homogeneizar suavemente o tubo",
              "recepcionistas": "Verificar jejum do paciente",
              "ordem_servico": "Exame deve ser coletado em tubo EDTA"
            }
          },
          "status": {
            "type": "string",
            "description": "Status do exame no sistema",
            "enum": ["ativo", "inativo", "suspenso"],
            "default": "ativo"
          },
          "empresa_id": {
            "type": "string",
            "description": "ID da empresa (null = disponível para todas)",
            "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
          }
        }
      },
      "CreateConvenioDto": {
        "type": "object",
        "properties": {
          "empresa": {
            "description": "Dados da empresa",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateEmpresaDto"
              }
            ]
          },
          "codigo_convenio": {
            "type": "string",
            "description": "Código do convênio",
            "maxLength": 20
          },
          "nome": {
            "type": "string",
            "description": "Nome do convênio"
          },
          "registro_ans": {
            "type": "string",
            "description": "Registro ANS"
          },
          "tem_integracao_api": {
            "type": "boolean",
            "description": "Tem integração API",
            "default": false
          },
          "url_api": {
            "type": "string",
            "description": "URL da API"
          },
          "token_api": {
            "type": "string",
            "description": "Token da API"
          },
          "requer_autorizacao": {
            "type": "boolean",
            "description": "Requer autorização",
            "default": true
          },
          "requer_senha": {
            "type": "boolean",
            "description": "Requer senha",
            "default": false
          },
          "validade_guia_dias": {
            "type": "number",
            "description": "Validade da guia em dias"
          },
          "tipo_faturamento": {
            "type": "string",
            "enum": ["mensal", "quinzenal", "semanal", "avulso"],
            "description": "Tipo de faturamento"
          },
          "portal_envio": {
            "type": "string",
            "description": "Portal de envio"
          },
          "dia_fechamento": {
            "type": "number",
            "description": "Dia de fechamento"
          },
          "prazo_pagamento_dias": {
            "type": "number",
            "description": "Prazo de pagamento em dias",
            "default": 30
          },
          "percentual_desconto": {
            "type": "number",
            "description": "Percentual de desconto"
          },
          "tabela_precos": {
            "type": "string",
            "description": "Tabela de preços"
          },
          "telefone": {
            "type": "string",
            "description": "Telefone"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "contato_nome": {
            "type": "string",
            "description": "Nome do contato"
          },
          "regras_especificas": {
            "type": "object",
            "description": "Regras específicas (JSON)"
          },
          "status": {
            "type": "string",
            "enum": ["ativo", "inativo", "suspenso", "bloqueado"],
            "description": "Status do convênio",
            "default": "ativo"
          },
          "aceita_atendimento_online": {
            "type": "boolean",
            "description": "Aceita atendimento online",
            "default": false
          },
          "percentual_coparticipacao": {
            "type": "number",
            "description": "Percentual de coparticipação"
          },
          "valor_consulta": {
            "type": "number",
            "description": "Valor da consulta"
          },
          "observacoes_convenio": {
            "type": "string",
            "description": "Observações do convênio"
          }
        },
        "required": [
          "empresa",
          "codigo_convenio",
          "tem_integracao_api",
          "requer_autorizacao",
          "requer_senha",
          "prazo_pagamento_dias",
          "status",
          "aceita_atendimento_online"
        ]
      },
      "Convenio": {
        "type": "object",
        "properties": {}
      },
      "UpdateConvenioDto": {
        "type": "object",
        "properties": {
          "empresa": {
            "description": "Dados da empresa",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateEmpresaDto"
              }
            ]
          },
          "codigo_convenio": {
            "type": "string",
            "description": "Código do convênio",
            "maxLength": 20
          },
          "nome": {
            "type": "string",
            "description": "Nome do convênio"
          },
          "registro_ans": {
            "type": "string",
            "description": "Registro ANS"
          },
          "tem_integracao_api": {
            "type": "boolean",
            "description": "Tem integração API",
            "default": false
          },
          "url_api": {
            "type": "string",
            "description": "URL da API"
          },
          "token_api": {
            "type": "string",
            "description": "Token da API"
          },
          "requer_autorizacao": {
            "type": "boolean",
            "description": "Requer autorização",
            "default": true
          },
          "requer_senha": {
            "type": "boolean",
            "description": "Requer senha",
            "default": false
          },
          "validade_guia_dias": {
            "type": "number",
            "description": "Validade da guia em dias"
          },
          "tipo_faturamento": {
            "type": "string",
            "enum": ["mensal", "quinzenal", "semanal", "avulso"],
            "description": "Tipo de faturamento"
          },
          "portal_envio": {
            "type": "string",
            "description": "Portal de envio"
          },
          "dia_fechamento": {
            "type": "number",
            "description": "Dia de fechamento"
          },
          "prazo_pagamento_dias": {
            "type": "number",
            "description": "Prazo de pagamento em dias",
            "default": 30
          },
          "percentual_desconto": {
            "type": "number",
            "description": "Percentual de desconto"
          },
          "tabela_precos": {
            "type": "string",
            "description": "Tabela de preços"
          },
          "telefone": {
            "type": "string",
            "description": "Telefone"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "contato_nome": {
            "type": "string",
            "description": "Nome do contato"
          },
          "regras_especificas": {
            "type": "object",
            "description": "Regras específicas (JSON)"
          },
          "status": {
            "type": "string",
            "enum": ["ativo", "inativo", "suspenso", "bloqueado"],
            "description": "Status do convênio",
            "default": "ativo"
          },
          "aceita_atendimento_online": {
            "type": "boolean",
            "description": "Aceita atendimento online",
            "default": false
          },
          "percentual_coparticipacao": {
            "type": "number",
            "description": "Percentual de coparticipação"
          },
          "valor_consulta": {
            "type": "number",
            "description": "Valor da consulta"
          },
          "observacoes_convenio": {
            "type": "string",
            "description": "Observações do convênio"
          }
        }
      },
      "CreateTipoExameDto": {
        "type": "object",
        "properties": {
          "codigo": {
            "type": "string",
            "description": "Código único do tipo de exame",
            "example": "LAB001",
            "maxLength": 20
          },
          "nome": {
            "type": "string",
            "description": "Nome do tipo de exame",
            "example": "Exames Laboratoriais",
            "maxLength": 100
          },
          "descricao": {
            "type": "string",
            "description": "Descrição detalhada do tipo",
            "example": "Exames de análises clínicas realizados em laboratório"
          },
          "icone": {
            "type": "string",
            "description": "Ícone ou identificador visual",
            "example": "fa-flask",
            "maxLength": 50
          },
          "cor": {
            "type": "string",
            "description": "Cor hexadecimal para interface",
            "example": "#3498db",
            "maxLength": 7
          },
          "ordem": {
            "type": "number",
            "description": "Ordem de exibição",
            "example": 1,
            "minimum": 0,
            "default": 0
          },
          "status": {
            "type": "string",
            "description": "Status do tipo de exame",
            "enum": ["ativo", "inativo"],
            "default": "ativo"
          },
          "requer_agendamento": {
            "type": "boolean",
            "description": "Se requer agendamento prévio",
            "example": false,
            "default": false
          },
          "requer_autorizacao": {
            "type": "boolean",
            "description": "Se requer autorização de convênio",
            "example": false,
            "default": false
          },
          "permite_domiciliar": {
            "type": "boolean",
            "description": "Se permite coleta domiciliar",
            "example": true,
            "default": false
          },
          "configuracoes": {
            "type": "object",
            "description": "Configurações adicionais do tipo",
            "example": {
              "tempoMedio": 30,
              "requisitoEspecial": "jejum"
            }
          }
        },
        "required": [
          "codigo",
          "nome",
          "ordem",
          "status",
          "requer_agendamento",
          "requer_autorizacao",
          "permite_domiciliar"
        ]
      },
      "TipoExame": {
        "type": "object",
        "properties": {}
      },
      "UpdateTipoExameDto": {
        "type": "object",
        "properties": {
          "codigo": {
            "type": "string",
            "description": "Código único do tipo de exame",
            "example": "LAB001",
            "maxLength": 20
          },
          "nome": {
            "type": "string",
            "description": "Nome do tipo de exame",
            "example": "Exames Laboratoriais",
            "maxLength": 100
          },
          "descricao": {
            "type": "string",
            "description": "Descrição detalhada do tipo",
            "example": "Exames de análises clínicas realizados em laboratório"
          },
          "icone": {
            "type": "string",
            "description": "Ícone ou identificador visual",
            "example": "fa-flask",
            "maxLength": 50
          },
          "cor": {
            "type": "string",
            "description": "Cor hexadecimal para interface",
            "example": "#3498db",
            "maxLength": 7
          },
          "ordem": {
            "type": "number",
            "description": "Ordem de exibição",
            "example": 1,
            "minimum": 0,
            "default": 0
          },
          "status": {
            "type": "string",
            "description": "Status do tipo de exame",
            "enum": ["ativo", "inativo"],
            "default": "ativo"
          },
          "requer_agendamento": {
            "type": "boolean",
            "description": "Se requer agendamento prévio",
            "example": false,
            "default": false
          },
          "requer_autorizacao": {
            "type": "boolean",
            "description": "Se requer autorização de convênio",
            "example": false,
            "default": false
          },
          "permite_domiciliar": {
            "type": "boolean",
            "description": "Se permite coleta domiciliar",
            "example": true,
            "default": false
          },
          "configuracoes": {
            "type": "object",
            "description": "Configurações adicionais do tipo",
            "example": {
              "tempoMedio": 30,
              "requisitoEspecial": "jejum"
            }
          }
        }
      },
      "CreatePeriodoAtendimentoDto": {
        "type": "object",
        "properties": {
          "periodo": {
            "type": "string",
            "enum": ["MANHA", "TARDE", "NOITE", "INTEGRAL"],
            "description": "Período do atendimento"
          },
          "horarioInicio": {
            "type": "string",
            "example": "08:00",
            "description": "Horário de início"
          },
          "horarioFim": {
            "type": "string",
            "example": "12:00",
            "description": "Horário de fim"
          },
          "diasSemana": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "SEG",
                "TER",
                "QUA",
                "QUI",
                "SEX",
                "SAB",
                "DOM",
                "FERIADOS"
              ]
            }
          },
          "intervaloPeriodo": {
            "type": "number",
            "example": 30,
            "description": "Intervalo em minutos"
          },
          "capacidadePeriodo": {
            "type": "number",
            "example": 10
          }
        },
        "required": ["periodo", "horarioInicio", "horarioFim"]
      },
      "CreateConfiguracaoAgendaDto": {
        "type": "object",
        "properties": {
          "diasSemana": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "SEG",
                "TER",
                "QUA",
                "QUI",
                "SEX",
                "SAB",
                "DOM",
                "FERIADOS"
              ]
            }
          },
          "periodosAtendimento": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreatePeriodoAtendimentoDto"
            }
          },
          "intervaloAgendamento": {
            "type": "number",
            "example": 30,
            "description": "Intervalo entre agendamentos em minutos"
          },
          "capacidadeTotal": {
            "type": "number",
            "example": 100
          },
          "capacidadePorHorario": {
            "type": "number",
            "example": 4
          }
        },
        "required": [
          "diasSemana",
          "periodosAtendimento",
          "intervaloAgendamento"
        ]
      },
      "CreateAgendaDto": {
        "type": "object",
        "properties": {
          "codigoInterno": {
            "type": "string",
            "example": "AGE001",
            "description": "Código interno da agenda"
          },
          "nomeAgenda": {
            "type": "string",
            "example": "ULTRASSONOGRAFIA - UNIDADE SÃO ROQUE"
          },
          "descricao": {
            "type": "string",
            "example": "Agenda para exames de ultrassonografia"
          },
          "unidadeAssociadaId": {
            "type": "string",
            "description": "ID da unidade de saúde associada"
          },
          "setorId": {
            "type": "string",
            "description": "ID do setor"
          },
          "salaId": {
            "type": "string",
            "description": "ID da sala"
          },
          "profissionalId": {
            "type": "string",
            "description": "ID do profissional"
          },
          "especialidadeId": {
            "type": "string",
            "description": "ID da especialidade"
          },
          "equipamentoId": {
            "type": "string",
            "description": "ID do equipamento"
          },
          "configuracaoAgenda": {
            "$ref": "#/components/schemas/CreateConfiguracaoAgendaDto"
          },
          "status": {
            "type": "string",
            "enum": ["ATIVO", "INATIVO"],
            "default": "ATIVO"
          }
        },
        "required": ["codigoInterno", "nomeAgenda", "configuracaoAgenda"]
      },
      "Agenda": {
        "type": "object",
        "properties": {}
      },
      "UpdateAgendaDto": {
        "type": "object",
        "properties": {
          "codigoInterno": {
            "type": "string",
            "example": "AGE001",
            "description": "Código interno da agenda"
          },
          "nomeAgenda": {
            "type": "string",
            "example": "ULTRASSONOGRAFIA - UNIDADE SÃO ROQUE"
          },
          "descricao": {
            "type": "string",
            "example": "Agenda para exames de ultrassonografia"
          },
          "unidadeAssociadaId": {
            "type": "string",
            "description": "ID da unidade de saúde associada"
          },
          "setorId": {
            "type": "string",
            "description": "ID do setor"
          },
          "salaId": {
            "type": "string",
            "description": "ID da sala"
          },
          "profissionalId": {
            "type": "string",
            "description": "ID do profissional"
          },
          "especialidadeId": {
            "type": "string",
            "description": "ID da especialidade"
          },
          "equipamentoId": {
            "type": "string",
            "description": "ID do equipamento"
          },
          "configuracaoAgenda": {
            "$ref": "#/components/schemas/CreateConfiguracaoAgendaDto"
          },
          "status": {
            "type": "string",
            "enum": ["ATIVO", "INATIVO"],
            "default": "ATIVO"
          }
        }
      },
      "CreateBloqueioDto": {
        "type": "object",
        "properties": {
          "dataInicio": {
            "format": "date-time",
            "type": "string",
            "example": "2024-03-15",
            "description": "Data de início do bloqueio"
          },
          "horaInicio": {
            "type": "string",
            "example": "14:00",
            "description": "Hora de início do bloqueio"
          },
          "dataFim": {
            "format": "date-time",
            "type": "string",
            "example": "2024-03-15",
            "description": "Data de fim do bloqueio"
          },
          "horaFim": {
            "type": "string",
            "example": "18:00",
            "description": "Hora de fim do bloqueio"
          },
          "observacao": {
            "type": "string",
            "example": "Feriado municipal"
          },
          "motivoBloqueio": {
            "type": "string",
            "example": "Manutenção do equipamento"
          }
        },
        "required": ["dataInicio", "horaInicio"]
      },
      "BloqueioHorario": {
        "type": "object",
        "properties": {}
      },
      "CreateEnderecoDto": {
        "type": "object",
        "properties": {
          "cep": {
            "type": "string",
            "example": "01310-100"
          },
          "rua": {
            "type": "string",
            "example": "Avenida Paulista"
          },
          "numero": {
            "type": "string",
            "example": "1578"
          },
          "bairro": {
            "type": "string",
            "example": "Bela Vista"
          },
          "complemento": {
            "type": "string",
            "example": "Conjunto 2"
          },
          "cidade": {
            "type": "string",
            "example": "São Paulo"
          },
          "estado": {
            "type": "string",
            "enum": [
              "AC",
              "AL",
              "AP",
              "AM",
              "BA",
              "CE",
              "DF",
              "ES",
              "GO",
              "MA",
              "MT",
              "MS",
              "MG",
              "PA",
              "PB",
              "PR",
              "PE",
              "PI",
              "RJ",
              "RN",
              "RS",
              "RO",
              "RR",
              "SC",
              "SP",
              "SE",
              "TO"
            ],
            "example": "SP"
          }
        },
        "required": ["cep", "rua", "numero", "bairro", "cidade", "estado"]
      },
      "CreateProfissionalDto": {
        "type": "object",
        "properties": {
          "pronomesPessoal": {
            "type": "string",
            "enum": ["DR", "DRA", "SR", "SRA", "MASCULINO", "FEMININO"],
            "example": "DR"
          },
          "nomeCompleto": {
            "type": "string",
            "example": "João da Silva Santos"
          },
          "cpf": {
            "type": "string",
            "example": "123.456.789-00"
          },
          "dataNascimento": {
            "format": "date-time",
            "type": "string",
            "example": "1985-03-15"
          },
          "sexo": {
            "type": "string",
            "enum": ["MASCULINO", "FEMININO"]
          },
          "celular": {
            "type": "string",
            "example": "(11) 98765-4321"
          },
          "email": {
            "type": "string",
            "example": "joao.silva@exemplo.com"
          },
          "tipoContratacao": {
            "type": "string",
            "enum": ["CLT", "PJ", "AUTONOMO"]
          },
          "profissao": {
            "type": "string",
            "example": "MÉDICO"
          },
          "codigoInterno": {
            "type": "string",
            "example": "19011"
          },
          "tipoProfissional": {
            "type": "string",
            "enum": ["REALIZANTE", "SOLICITANTE", "AMBOS"]
          },
          "nomeConselho": {
            "type": "string",
            "example": "CRM",
            "description": "Nome do conselho profissional"
          },
          "numeroConselho": {
            "type": "string",
            "example": "37308"
          },
          "estadoConselho": {
            "type": "string",
            "enum": [
              "AC",
              "AL",
              "AP",
              "AM",
              "BA",
              "CE",
              "DF",
              "ES",
              "GO",
              "MA",
              "MT",
              "MS",
              "MG",
              "PA",
              "PB",
              "PR",
              "PE",
              "PI",
              "RJ",
              "RN",
              "RS",
              "RO",
              "RR",
              "SC",
              "SP",
              "SE",
              "TO"
            ]
          },
          "codigoCBO": {
            "type": "string",
            "example": "225320",
            "description": "Código CBO da profissão"
          },
          "rqe": {
            "type": "string",
            "example": "1257",
            "description": "Registro de Qualificação de Especialista"
          },
          "especialidadePrincipal": {
            "type": "string",
            "example": "CARDIOLOGIA"
          },
          "possuiAssinaturaDigital": {
            "type": "boolean",
            "default": false
          },
          "endereco": {
            "$ref": "#/components/schemas/CreateEnderecoDto"
          },
          "ativo": {
            "type": "boolean",
            "default": true
          },
          "agendasIds": {
            "description": "IDs das agendas vinculadas",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "pronomesPessoal",
          "nomeCompleto",
          "cpf",
          "dataNascimento",
          "sexo",
          "celular",
          "email",
          "tipoContratacao",
          "profissao",
          "codigoInterno",
          "tipoProfissional",
          "nomeConselho",
          "numeroConselho",
          "estadoConselho",
          "codigoCBO",
          "possuiAssinaturaDigital"
        ]
      },
      "Profissional": {
        "type": "object",
        "properties": {}
      },
      "UpdateProfissionalDto": {
        "type": "object",
        "properties": {
          "pronomesPessoal": {
            "type": "string",
            "enum": ["DR", "DRA", "SR", "SRA", "MASCULINO", "FEMININO"],
            "example": "DR"
          },
          "nomeCompleto": {
            "type": "string",
            "example": "João da Silva Santos"
          },
          "cpf": {
            "type": "string",
            "example": "123.456.789-00"
          },
          "dataNascimento": {
            "format": "date-time",
            "type": "string",
            "example": "1985-03-15"
          },
          "sexo": {
            "type": "string",
            "enum": ["MASCULINO", "FEMININO"]
          },
          "celular": {
            "type": "string",
            "example": "(11) 98765-4321"
          },
          "email": {
            "type": "string",
            "example": "joao.silva@exemplo.com"
          },
          "tipoContratacao": {
            "type": "string",
            "enum": ["CLT", "PJ", "AUTONOMO"]
          },
          "profissao": {
            "type": "string",
            "example": "MÉDICO"
          },
          "codigoInterno": {
            "type": "string",
            "example": "19011"
          },
          "tipoProfissional": {
            "type": "string",
            "enum": ["REALIZANTE", "SOLICITANTE", "AMBOS"]
          },
          "nomeConselho": {
            "type": "string",
            "example": "CRM",
            "description": "Nome do conselho profissional"
          },
          "numeroConselho": {
            "type": "string",
            "example": "37308"
          },
          "estadoConselho": {
            "type": "string",
            "enum": [
              "AC",
              "AL",
              "AP",
              "AM",
              "BA",
              "CE",
              "DF",
              "ES",
              "GO",
              "MA",
              "MT",
              "MS",
              "MG",
              "PA",
              "PB",
              "PR",
              "PE",
              "PI",
              "RJ",
              "RN",
              "RS",
              "RO",
              "RR",
              "SC",
              "SP",
              "SE",
              "TO"
            ]
          },
          "codigoCBO": {
            "type": "string",
            "example": "225320",
            "description": "Código CBO da profissão"
          },
          "rqe": {
            "type": "string",
            "example": "1257",
            "description": "Registro de Qualificação de Especialista"
          },
          "especialidadePrincipal": {
            "type": "string",
            "example": "CARDIOLOGIA"
          },
          "possuiAssinaturaDigital": {
            "type": "boolean",
            "default": false
          },
          "endereco": {
            "$ref": "#/components/schemas/CreateEnderecoDto"
          },
          "ativo": {
            "type": "boolean",
            "default": true
          },
          "agendasIds": {
            "description": "IDs das agendas vinculadas",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreateDocumentoDto": {
        "type": "object",
        "properties": {
          "tipo": {
            "type": "string",
            "enum": [
              "DIPLOMA",
              "CERTIFICADOS",
              "CRM",
              "COMPROVANTE_RESIDENCIA",
              "COMPROVANTE_BANCARIO",
              "ULTRASSONOGRAFIA_GERAL",
              "ULTRASSONOGRAFIA_DOPPLER",
              "RADIOLOGIA",
              "TOMOGRAFIA"
            ]
          },
          "arquivo": {
            "type": "string",
            "example": "url-do-arquivo.pdf"
          },
          "validade": {
            "format": "date-time",
            "type": "string",
            "example": "2025-12-31"
          },
          "status": {
            "type": "string",
            "enum": ["PENDENTE", "APROVADO", "REPROVADO", "VENCIDO"],
            "default": "PENDENTE"
          },
          "observacoes": {
            "type": "string",
            "example": "Documento em análise"
          }
        },
        "required": ["tipo"]
      },
      "DocumentoProfissional": {
        "type": "object",
        "properties": {}
      },
      "CreateEmpresaDto": {
        "type": "object",
        "properties": {
          "tipoEmpresa": {
            "type": "string",
            "enum": [
              "CONVENIOS",
              "LABORATORIO_APOIO",
              "TELEMEDICINA",
              "FORNECEDORES",
              "PRESTADORES_SERVICOS"
            ],
            "description": "Tipo de empresa"
          },
          "codigoInterno": {
            "type": "string",
            "description": "Código interno da empresa"
          },
          "cnpj": {
            "type": "string",
            "example": "00.000.000/0001-00",
            "description": "CNPJ da empresa"
          },
          "razaoSocial": {
            "type": "string",
            "description": "Razão social da empresa"
          },
          "nomeFantasia": {
            "type": "string",
            "description": "Nome fantasia da empresa"
          },
          "inscricaoEstadual": {
            "type": "string",
            "description": "Inscrição estadual"
          },
          "inscricaoMunicipal": {
            "type": "string",
            "description": "Inscrição municipal"
          },
          "telefoneFixo": {
            "type": "string",
            "description": "Telefone fixo"
          },
          "celular": {
            "type": "string",
            "description": "Celular"
          },
          "emailComercial": {
            "type": "string",
            "description": "E-mail comercial"
          },
          "siteEmpresa": {
            "type": "string",
            "description": "Site da empresa"
          },
          "cep": {
            "type": "string",
            "description": "CEP"
          },
          "rua": {
            "type": "string",
            "description": "Rua"
          },
          "numero": {
            "type": "string",
            "description": "Número"
          },
          "bairro": {
            "type": "string",
            "description": "Bairro"
          },
          "complemento": {
            "type": "string",
            "description": "Complemento"
          },
          "estado": {
            "type": "string",
            "description": "Estado (UF)"
          },
          "cidade": {
            "type": "string",
            "description": "Cidade"
          },
          "nomeResponsavel": {
            "type": "string",
            "description": "Nome do responsável"
          },
          "cargoResponsavel": {
            "type": "string",
            "description": "Cargo do responsável"
          },
          "contatoResponsavel": {
            "type": "string",
            "description": "Contato do responsável"
          },
          "emailResponsavel": {
            "type": "string",
            "description": "E-mail do responsável"
          },
          "irrfPercentual": {
            "type": "number",
            "description": "Percentual IRRF"
          },
          "pisPercentual": {
            "type": "number",
            "description": "Percentual PIS"
          },
          "cofinsPercentual": {
            "type": "number",
            "description": "Percentual COFINS"
          },
          "csllPercentual": {
            "type": "number",
            "description": "Percentual CSLL"
          },
          "issPercentual": {
            "type": "number",
            "description": "Percentual ISS"
          },
          "ibsPercentual": {
            "type": "number",
            "description": "Percentual IBS"
          },
          "cbsPercentual": {
            "type": "number",
            "description": "Percentual CBS"
          },
          "reterIss": {
            "type": "boolean",
            "description": "Reter ISS",
            "default": false
          },
          "reterIr": {
            "type": "boolean",
            "description": "Reter IR",
            "default": false
          },
          "reterPcc": {
            "type": "boolean",
            "description": "Reter PCC",
            "default": false
          },
          "reterIbs": {
            "type": "boolean",
            "description": "Reter IBS",
            "default": false
          },
          "reterCbs": {
            "type": "boolean",
            "description": "Reter CBS",
            "default": false
          },
          "optanteSimplesNacional": {
            "type": "boolean",
            "description": "Optante pelo Simples Nacional",
            "default": false
          },
          "banco": {
            "type": "string",
            "description": "Banco"
          },
          "agencia": {
            "type": "string",
            "description": "Agência"
          },
          "contaCorrente": {
            "type": "string",
            "description": "Conta corrente"
          },
          "formaPagamento": {
            "type": "string",
            "description": "Forma de pagamento"
          },
          "ativo": {
            "type": "boolean",
            "default": true,
            "description": "Status ativo/inativo"
          }
        },
        "required": [
          "tipoEmpresa",
          "cnpj",
          "razaoSocial",
          "nomeFantasia",
          "emailComercial"
        ]
      },
      "Empresa": {
        "type": "object",
        "properties": {}
      },
      "UpdateEmpresaDto": {
        "type": "object",
        "properties": {
          "tipoEmpresa": {
            "type": "string",
            "enum": [
              "CONVENIOS",
              "LABORATORIO_APOIO",
              "TELEMEDICINA",
              "FORNECEDORES",
              "PRESTADORES_SERVICOS"
            ],
            "description": "Tipo de empresa"
          },
          "codigoInterno": {
            "type": "string",
            "description": "Código interno da empresa"
          },
          "cnpj": {
            "type": "string",
            "example": "00.000.000/0001-00",
            "description": "CNPJ da empresa"
          },
          "razaoSocial": {
            "type": "string",
            "description": "Razão social da empresa"
          },
          "nomeFantasia": {
            "type": "string",
            "description": "Nome fantasia da empresa"
          },
          "inscricaoEstadual": {
            "type": "string",
            "description": "Inscrição estadual"
          },
          "inscricaoMunicipal": {
            "type": "string",
            "description": "Inscrição municipal"
          },
          "telefoneFixo": {
            "type": "string",
            "description": "Telefone fixo"
          },
          "celular": {
            "type": "string",
            "description": "Celular"
          },
          "emailComercial": {
            "type": "string",
            "description": "E-mail comercial"
          },
          "siteEmpresa": {
            "type": "string",
            "description": "Site da empresa"
          },
          "cep": {
            "type": "string",
            "description": "CEP"
          },
          "rua": {
            "type": "string",
            "description": "Rua"
          },
          "numero": {
            "type": "string",
            "description": "Número"
          },
          "bairro": {
            "type": "string",
            "description": "Bairro"
          },
          "complemento": {
            "type": "string",
            "description": "Complemento"
          },
          "estado": {
            "type": "string",
            "description": "Estado (UF)"
          },
          "cidade": {
            "type": "string",
            "description": "Cidade"
          },
          "nomeResponsavel": {
            "type": "string",
            "description": "Nome do responsável"
          },
          "cargoResponsavel": {
            "type": "string",
            "description": "Cargo do responsável"
          },
          "contatoResponsavel": {
            "type": "string",
            "description": "Contato do responsável"
          },
          "emailResponsavel": {
            "type": "string",
            "description": "E-mail do responsável"
          },
          "irrfPercentual": {
            "type": "number",
            "description": "Percentual IRRF"
          },
          "pisPercentual": {
            "type": "number",
            "description": "Percentual PIS"
          },
          "cofinsPercentual": {
            "type": "number",
            "description": "Percentual COFINS"
          },
          "csllPercentual": {
            "type": "number",
            "description": "Percentual CSLL"
          },
          "issPercentual": {
            "type": "number",
            "description": "Percentual ISS"
          },
          "ibsPercentual": {
            "type": "number",
            "description": "Percentual IBS"
          },
          "cbsPercentual": {
            "type": "number",
            "description": "Percentual CBS"
          },
          "reterIss": {
            "type": "boolean",
            "description": "Reter ISS",
            "default": false
          },
          "reterIr": {
            "type": "boolean",
            "description": "Reter IR",
            "default": false
          },
          "reterPcc": {
            "type": "boolean",
            "description": "Reter PCC",
            "default": false
          },
          "reterIbs": {
            "type": "boolean",
            "description": "Reter IBS",
            "default": false
          },
          "reterCbs": {
            "type": "boolean",
            "description": "Reter CBS",
            "default": false
          },
          "optanteSimplesNacional": {
            "type": "boolean",
            "description": "Optante pelo Simples Nacional",
            "default": false
          },
          "banco": {
            "type": "string",
            "description": "Banco"
          },
          "agencia": {
            "type": "string",
            "description": "Agência"
          },
          "contaCorrente": {
            "type": "string",
            "description": "Conta corrente"
          },
          "formaPagamento": {
            "type": "string",
            "description": "Forma de pagamento"
          },
          "ativo": {
            "type": "boolean",
            "default": true,
            "description": "Status ativo/inativo"
          }
        }
      },
      "CreatePlanoDto": {
        "type": "object",
        "properties": {
          "convenio_id": {
            "type": "string",
            "description": "ID do convênio"
          },
          "codigo_plano": {
            "type": "string",
            "description": "Código do plano",
            "maxLength": 50
          },
          "nome_plano": {
            "type": "string",
            "description": "Nome do plano",
            "maxLength": 255
          },
          "tipo_plano": {
            "type": "string",
            "enum": ["ambulatorial", "hospitalar", "completo", "odontologico"],
            "description": "Tipo do plano"
          },
          "categoria": {
            "type": "string",
            "enum": ["basico", "intermediario", "premium", "executivo"],
            "description": "Categoria do plano"
          },
          "modalidade": {
            "type": "string",
            "enum": ["pre_pagamento", "pos_pagamento", "coparticipacao"],
            "description": "Modalidade do plano"
          },
          "vigencia_inicio": {
            "format": "date-time",
            "type": "string",
            "description": "Data de início da vigência"
          },
          "vigencia_fim": {
            "format": "date-time",
            "type": "string",
            "description": "Data de fim da vigência"
          },
          "status": {
            "type": "string",
            "enum": ["ativo", "inativo", "suspenso"],
            "description": "Status do plano",
            "default": "ativo"
          },
          "carencia_dias": {
            "type": "number",
            "description": "Carência em dias",
            "default": 0
          },
          "cobertura_geografica": {
            "type": "string",
            "enum": ["municipal", "estadual", "nacional", "internacional"],
            "description": "Cobertura geográfica"
          },
          "valor_consulta": {
            "type": "number",
            "description": "Valor da consulta"
          },
          "valor_ch": {
            "type": "number",
            "description": "Valor CH"
          },
          "valor_uco": {
            "type": "number",
            "description": "Valor UCO"
          },
          "valor_filme": {
            "type": "number",
            "description": "Valor do filme"
          },
          "percentual_coparticipacao": {
            "type": "number",
            "description": "Percentual de coparticipação"
          },
          "limite_mensal": {
            "type": "number",
            "description": "Limite mensal"
          },
          "limite_anual": {
            "type": "number",
            "description": "Limite anual"
          },
          "observacoes": {
            "type": "string",
            "description": "Observações"
          }
        },
        "required": [
          "convenio_id",
          "codigo_plano",
          "nome_plano",
          "tipo_plano",
          "categoria",
          "modalidade",
          "vigencia_inicio",
          "status",
          "carencia_dias",
          "cobertura_geografica"
        ]
      },
      "Plano": {
        "type": "object",
        "properties": {}
      },
      "UpdatePlanoDto": {
        "type": "object",
        "properties": {
          "codigo_plano": {
            "type": "string",
            "description": "Código do plano",
            "maxLength": 50
          },
          "nome_plano": {
            "type": "string",
            "description": "Nome do plano",
            "maxLength": 255
          },
          "tipo_plano": {
            "type": "string",
            "enum": ["ambulatorial", "hospitalar", "completo", "odontologico"],
            "description": "Tipo do plano"
          },
          "categoria": {
            "type": "string",
            "enum": ["basico", "intermediario", "premium", "executivo"],
            "description": "Categoria do plano"
          },
          "modalidade": {
            "type": "string",
            "enum": ["pre_pagamento", "pos_pagamento", "coparticipacao"],
            "description": "Modalidade do plano"
          },
          "vigencia_inicio": {
            "format": "date-time",
            "type": "string",
            "description": "Data de início da vigência"
          },
          "vigencia_fim": {
            "format": "date-time",
            "type": "string",
            "description": "Data de fim da vigência"
          },
          "status": {
            "type": "string",
            "enum": ["ativo", "inativo", "suspenso"],
            "description": "Status do plano",
            "default": "ativo"
          },
          "carencia_dias": {
            "type": "number",
            "description": "Carência em dias",
            "default": 0
          },
          "cobertura_geografica": {
            "type": "string",
            "enum": ["municipal", "estadual", "nacional", "internacional"],
            "description": "Cobertura geográfica"
          },
          "valor_consulta": {
            "type": "number",
            "description": "Valor da consulta"
          },
          "valor_ch": {
            "type": "number",
            "description": "Valor CH"
          },
          "valor_uco": {
            "type": "number",
            "description": "Valor UCO"
          },
          "valor_filme": {
            "type": "number",
            "description": "Valor do filme"
          },
          "percentual_coparticipacao": {
            "type": "number",
            "description": "Percentual de coparticipação"
          },
          "limite_mensal": {
            "type": "number",
            "description": "Limite mensal"
          },
          "limite_anual": {
            "type": "number",
            "description": "Limite anual"
          },
          "observacoes": {
            "type": "string",
            "description": "Observações"
          }
        }
      },
      "CreateInstrucaoDto": {
        "type": "object",
        "properties": {
          "convenio_id": {
            "type": "string",
            "description": "ID do convênio"
          },
          "codigo": {
            "type": "string",
            "description": "Código da instrução",
            "maxLength": 20
          },
          "categoria": {
            "type": "string",
            "enum": [
              "autorizacao_previa",
              "faturamento",
              "atendimento",
              "documentacao",
              "auditoria",
              "urgencia_emergencia",
              "internacao",
              "sadt"
            ],
            "description": "Categoria da instrução"
          },
          "tipo_procedimento": {
            "type": "string",
            "enum": [
              "todos",
              "consultas",
              "exames",
              "cirurgias",
              "internacoes",
              "procedimentos_especiais"
            ],
            "description": "Tipo de procedimento",
            "default": "todos"
          },
          "titulo": {
            "type": "string",
            "description": "Título da instrução",
            "maxLength": 255
          },
          "descricao": {
            "type": "string",
            "description": "Descrição detalhada da instrução"
          },
          "prazo_resposta_dias": {
            "type": "number",
            "description": "Prazo de resposta em dias"
          },
          "prazo_resposta_horas": {
            "type": "number",
            "description": "Prazo de resposta em horas"
          },
          "vigencia_inicio": {
            "format": "date-time",
            "type": "string",
            "description": "Data de início da vigência"
          },
          "vigencia_fim": {
            "format": "date-time",
            "type": "string",
            "description": "Data de fim da vigência"
          },
          "status": {
            "type": "string",
            "enum": ["ativa", "inativa", "suspensa"],
            "description": "Status da instrução",
            "default": "ativa"
          },
          "prioridade": {
            "type": "string",
            "enum": ["alta", "media", "baixa"],
            "description": "Prioridade da instrução",
            "default": "media"
          },
          "setor_responsavel": {
            "type": "string",
            "description": "Setor responsável"
          },
          "contato_telefone": {
            "type": "string",
            "description": "Telefone de contato"
          },
          "contato_email": {
            "type": "string",
            "description": "Email de contato"
          },
          "documentos_necessarios": {
            "description": "Lista de documentos necessários",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "anexos": {
            "description": "Anexos",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "links_uteis": {
            "description": "Links úteis",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "description": "Tags para busca",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "observacoes_internas": {
            "type": "string",
            "description": "Observações internas"
          },
          "created_by": {
            "type": "string",
            "description": "Criado por"
          }
        },
        "required": [
          "convenio_id",
          "codigo",
          "categoria",
          "tipo_procedimento",
          "titulo",
          "descricao",
          "vigencia_inicio",
          "status",
          "prioridade"
        ]
      },
      "Instrucao": {
        "type": "object",
        "properties": {}
      },
      "UpdateInstrucaoDto": {
        "type": "object",
        "properties": {
          "codigo": {
            "type": "string",
            "description": "Código da instrução",
            "maxLength": 20
          },
          "categoria": {
            "type": "string",
            "enum": [
              "autorizacao_previa",
              "faturamento",
              "atendimento",
              "documentacao",
              "auditoria",
              "urgencia_emergencia",
              "internacao",
              "sadt"
            ],
            "description": "Categoria da instrução"
          },
          "tipo_procedimento": {
            "type": "string",
            "enum": [
              "todos",
              "consultas",
              "exames",
              "cirurgias",
              "internacoes",
              "procedimentos_especiais"
            ],
            "description": "Tipo de procedimento",
            "default": "todos"
          },
          "titulo": {
            "type": "string",
            "description": "Título da instrução",
            "maxLength": 255
          },
          "descricao": {
            "type": "string",
            "description": "Descrição detalhada da instrução"
          },
          "prazo_resposta_dias": {
            "type": "number",
            "description": "Prazo de resposta em dias"
          },
          "prazo_resposta_horas": {
            "type": "number",
            "description": "Prazo de resposta em horas"
          },
          "vigencia_inicio": {
            "format": "date-time",
            "type": "string",
            "description": "Data de início da vigência"
          },
          "vigencia_fim": {
            "format": "date-time",
            "type": "string",
            "description": "Data de fim da vigência"
          },
          "status": {
            "type": "string",
            "enum": ["ativa", "inativa", "suspensa"],
            "description": "Status da instrução",
            "default": "ativa"
          },
          "prioridade": {
            "type": "string",
            "enum": ["alta", "media", "baixa"],
            "description": "Prioridade da instrução",
            "default": "media"
          },
          "setor_responsavel": {
            "type": "string",
            "description": "Setor responsável"
          },
          "contato_telefone": {
            "type": "string",
            "description": "Telefone de contato"
          },
          "contato_email": {
            "type": "string",
            "description": "Email de contato"
          },
          "documentos_necessarios": {
            "description": "Lista de documentos necessários",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "anexos": {
            "description": "Anexos",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "links_uteis": {
            "description": "Links úteis",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "description": "Tags para busca",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "observacoes_internas": {
            "type": "string",
            "description": "Observações internas"
          },
          "created_by": {
            "type": "string",
            "description": "Criado por"
          }
        }
      },
      "CreateLaboratorioDto": {
        "type": "object",
        "properties": {
          "codigo": {
            "type": "string",
            "description": "Código do laboratório",
            "maxLength": 20
          },
          "razao_social": {
            "type": "string",
            "description": "Razão social",
            "maxLength": 255
          },
          "nome_fantasia": {
            "type": "string",
            "description": "Nome fantasia",
            "maxLength": 255
          },
          "cnpj": {
            "type": "string",
            "description": "CNPJ",
            "minLength": 14,
            "maxLength": 14
          },
          "inscricao_estadual": {
            "type": "string",
            "description": "Inscrição estadual"
          },
          "inscricao_municipal": {
            "type": "string",
            "description": "Inscrição municipal"
          },
          "endereco": {
            "type": "string",
            "description": "Endereço"
          },
          "numero": {
            "type": "string",
            "description": "Número"
          },
          "complemento": {
            "type": "string",
            "description": "Complemento"
          },
          "bairro": {
            "type": "string",
            "description": "Bairro"
          },
          "cidade": {
            "type": "string",
            "description": "Cidade"
          },
          "uf": {
            "type": "string",
            "description": "UF",
            "minLength": 2,
            "maxLength": 2
          },
          "cep": {
            "type": "string",
            "description": "CEP",
            "minLength": 8,
            "maxLength": 8
          },
          "telefone_principal": {
            "type": "string",
            "description": "Telefone principal"
          },
          "telefone_secundario": {
            "type": "string",
            "description": "Telefone secundário"
          },
          "email_principal": {
            "type": "string",
            "description": "Email principal"
          },
          "email_faturamento": {
            "type": "string",
            "description": "Email faturamento"
          },
          "website": {
            "type": "string",
            "description": "Website"
          },
          "responsavel_tecnico": {
            "type": "string",
            "description": "Responsável técnico"
          },
          "conselho_responsavel": {
            "type": "string",
            "description": "Conselho do responsável"
          },
          "numero_conselho": {
            "type": "string",
            "description": "Número do conselho"
          },
          "tipo_integracao": {
            "type": "string",
            "enum": ["api", "webservice", "manual", "ftp", "email"],
            "description": "Tipo de integração",
            "default": "manual"
          },
          "url_integracao": {
            "type": "string",
            "description": "URL de integração"
          },
          "token_integracao": {
            "type": "string",
            "description": "Token de integração"
          },
          "usuario_integracao": {
            "type": "string",
            "description": "Usuário de integração"
          },
          "senha_integracao": {
            "type": "string",
            "description": "Senha de integração"
          },
          "configuracao_adicional": {
            "type": "string",
            "description": "Configuração adicional (JSON)"
          },
          "metodos_envio_resultado": {
            "description": "Métodos de envio de resultado",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "portal_resultados_url": {
            "type": "string",
            "description": "URL do portal de resultados"
          },
          "prazo_entrega_normal": {
            "type": "number",
            "description": "Prazo entrega normal (dias)",
            "default": 3
          },
          "prazo_entrega_urgente": {
            "type": "number",
            "description": "Prazo entrega urgente (dias)",
            "default": 1
          },
          "taxa_urgencia": {
            "type": "number",
            "description": "Taxa de urgência"
          },
          "prazo_pagamento": {
            "type": "number",
            "description": "Prazo de pagamento (dias)",
            "default": 30
          },
          "percentual_repasse": {
            "type": "number",
            "description": "Percentual de repasse"
          },
          "banco": {
            "type": "string",
            "description": "Banco"
          },
          "agencia": {
            "type": "string",
            "description": "Agência"
          },
          "conta": {
            "type": "string",
            "description": "Conta"
          },
          "pix_key": {
            "type": "string",
            "description": "Chave PIX"
          },
          "observacoes": {
            "type": "string",
            "description": "Observações"
          },
          "ativo": {
            "type": "boolean",
            "description": "Ativo",
            "default": true
          },
          "aceita_urgencia": {
            "type": "boolean",
            "description": "Aceita urgência",
            "default": false
          },
          "envia_resultado_automatico": {
            "type": "boolean",
            "description": "Envia resultado automático",
            "default": true
          },
          "data_contrato": {
            "format": "date-time",
            "type": "string",
            "description": "Data do contrato"
          },
          "data_vigencia_inicio": {
            "format": "date-time",
            "type": "string",
            "description": "Data início vigência"
          },
          "data_vigencia_fim": {
            "format": "date-time",
            "type": "string",
            "description": "Data fim vigência"
          }
        },
        "required": [
          "codigo",
          "razao_social",
          "nome_fantasia",
          "cnpj",
          "endereco",
          "numero",
          "bairro",
          "cidade",
          "uf",
          "cep",
          "telefone_principal",
          "email_principal"
        ]
      },
      "Laboratorio": {
        "type": "object",
        "properties": {}
      },
      "UpdateLaboratorioDto": {
        "type": "object",
        "properties": {
          "codigo": {
            "type": "string",
            "description": "Código do laboratório",
            "maxLength": 20
          },
          "razao_social": {
            "type": "string",
            "description": "Razão social",
            "maxLength": 255
          },
          "nome_fantasia": {
            "type": "string",
            "description": "Nome fantasia",
            "maxLength": 255
          },
          "cnpj": {
            "type": "string",
            "description": "CNPJ",
            "minLength": 14,
            "maxLength": 14
          },
          "inscricao_estadual": {
            "type": "string",
            "description": "Inscrição estadual"
          },
          "inscricao_municipal": {
            "type": "string",
            "description": "Inscrição municipal"
          },
          "endereco": {
            "type": "string",
            "description": "Endereço"
          },
          "numero": {
            "type": "string",
            "description": "Número"
          },
          "complemento": {
            "type": "string",
            "description": "Complemento"
          },
          "bairro": {
            "type": "string",
            "description": "Bairro"
          },
          "cidade": {
            "type": "string",
            "description": "Cidade"
          },
          "uf": {
            "type": "string",
            "description": "UF",
            "minLength": 2,
            "maxLength": 2
          },
          "cep": {
            "type": "string",
            "description": "CEP",
            "minLength": 8,
            "maxLength": 8
          },
          "telefone_principal": {
            "type": "string",
            "description": "Telefone principal"
          },
          "telefone_secundario": {
            "type": "string",
            "description": "Telefone secundário"
          },
          "email_principal": {
            "type": "string",
            "description": "Email principal"
          },
          "email_faturamento": {
            "type": "string",
            "description": "Email faturamento"
          },
          "website": {
            "type": "string",
            "description": "Website"
          },
          "responsavel_tecnico": {
            "type": "string",
            "description": "Responsável técnico"
          },
          "conselho_responsavel": {
            "type": "string",
            "description": "Conselho do responsável"
          },
          "numero_conselho": {
            "type": "string",
            "description": "Número do conselho"
          },
          "tipo_integracao": {
            "type": "string",
            "enum": ["api", "webservice", "manual", "ftp", "email"],
            "description": "Tipo de integração",
            "default": "manual"
          },
          "url_integracao": {
            "type": "string",
            "description": "URL de integração"
          },
          "token_integracao": {
            "type": "string",
            "description": "Token de integração"
          },
          "usuario_integracao": {
            "type": "string",
            "description": "Usuário de integração"
          },
          "senha_integracao": {
            "type": "string",
            "description": "Senha de integração"
          },
          "configuracao_adicional": {
            "type": "string",
            "description": "Configuração adicional (JSON)"
          },
          "metodos_envio_resultado": {
            "description": "Métodos de envio de resultado",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "portal_resultados_url": {
            "type": "string",
            "description": "URL do portal de resultados"
          },
          "prazo_entrega_normal": {
            "type": "number",
            "description": "Prazo entrega normal (dias)",
            "default": 3
          },
          "prazo_entrega_urgente": {
            "type": "number",
            "description": "Prazo entrega urgente (dias)",
            "default": 1
          },
          "taxa_urgencia": {
            "type": "number",
            "description": "Taxa de urgência"
          },
          "prazo_pagamento": {
            "type": "number",
            "description": "Prazo de pagamento (dias)",
            "default": 30
          },
          "percentual_repasse": {
            "type": "number",
            "description": "Percentual de repasse"
          },
          "banco": {
            "type": "string",
            "description": "Banco"
          },
          "agencia": {
            "type": "string",
            "description": "Agência"
          },
          "conta": {
            "type": "string",
            "description": "Conta"
          },
          "pix_key": {
            "type": "string",
            "description": "Chave PIX"
          },
          "observacoes": {
            "type": "string",
            "description": "Observações"
          },
          "ativo": {
            "type": "boolean",
            "description": "Ativo",
            "default": true
          },
          "aceita_urgencia": {
            "type": "boolean",
            "description": "Aceita urgência",
            "default": false
          },
          "envia_resultado_automatico": {
            "type": "boolean",
            "description": "Envia resultado automático",
            "default": true
          },
          "data_contrato": {
            "format": "date-time",
            "type": "string",
            "description": "Data do contrato"
          },
          "data_vigencia_inicio": {
            "format": "date-time",
            "type": "string",
            "description": "Data início vigência"
          },
          "data_vigencia_fim": {
            "format": "date-time",
            "type": "string",
            "description": "Data fim vigência"
          }
        }
      },
      "CreateTelemedicinaDto": {
        "type": "object",
        "properties": {
          "empresa": {
            "description": "Dados da empresa",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateEmpresaDto"
              }
            ]
          },
          "codigo_telemedicina": {
            "type": "string",
            "description": "Código da telemedicina",
            "maxLength": 20
          },
          "tipo_integracao": {
            "type": "string",
            "enum": ["api_rest", "webhook", "hl7", "fhir", "manual", "dicom"],
            "description": "Tipo de integração"
          },
          "url_integracao": {
            "type": "string",
            "description": "URL de integração"
          },
          "token_integracao": {
            "type": "string",
            "description": "Token de integração"
          },
          "usuario_integracao": {
            "type": "string",
            "description": "Usuário de integração"
          },
          "senha_integracao": {
            "type": "string",
            "description": "Senha de integração"
          },
          "configuracao_adicional": {
            "type": "string",
            "description": "Configuração adicional em JSON"
          },
          "status_integracao": {
            "type": "string",
            "enum": ["ativo", "inativo", "teste", "manutencao"],
            "description": "Status da integração"
          },
          "tipo_plataforma": {
            "type": "string",
            "enum": ["web", "mobile", "desktop", "hibrida"],
            "description": "Tipo da plataforma"
          },
          "url_plataforma": {
            "type": "string",
            "description": "URL da plataforma"
          },
          "versao_sistema": {
            "type": "string",
            "description": "Versão do sistema"
          },
          "especialidades_atendidas": {
            "description": "Especialidades atendidas",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tipos_consulta": {
            "description": "Tipos de consulta",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "teleconsulta": {
            "type": "boolean",
            "description": "Oferece teleconsulta",
            "default": false
          },
          "telediagnostico": {
            "type": "boolean",
            "description": "Oferece telediagnóstico",
            "default": false
          },
          "telecirurgia": {
            "type": "boolean",
            "description": "Oferece telecirurgia",
            "default": false
          },
          "telemonitoramento": {
            "type": "boolean",
            "description": "Oferece telemonitoramento",
            "default": false
          },
          "tempo_consulta_padrao": {
            "type": "number",
            "description": "Tempo padrão de consulta em minutos"
          },
          "permite_agendamento_online": {
            "type": "boolean",
            "description": "Permite agendamento online",
            "default": false
          },
          "permite_cancelamento_online": {
            "type": "boolean",
            "description": "Permite cancelamento online",
            "default": false
          },
          "antecedencia_minima_agendamento": {
            "type": "number",
            "description": "Antecedência mínima para agendamento em horas"
          },
          "antecedencia_minima_cancelamento": {
            "type": "number",
            "description": "Antecedência mínima para cancelamento em horas"
          },
          "certificado_digital": {
            "type": "string",
            "description": "Certificado digital"
          },
          "suporte_gravacao": {
            "type": "boolean",
            "description": "Suporte à gravação",
            "default": false
          },
          "suporte_streaming": {
            "type": "boolean",
            "description": "Suporte à streaming",
            "default": false
          },
          "criptografia_end_to_end": {
            "type": "boolean",
            "description": "Criptografia end-to-end",
            "default": true
          },
          "protocolo_seguranca": {
            "type": "string",
            "description": "Protocolo de segurança"
          },
          "valor_consulta_particular": {
            "type": "number",
            "description": "Valor da consulta particular"
          },
          "percentual_repasse": {
            "type": "number",
            "description": "Percentual de repasse"
          },
          "taxa_plataforma": {
            "type": "number",
            "description": "Taxa da plataforma"
          },
          "observacoes": {
            "type": "string",
            "description": "Observações gerais"
          },
          "requisitos_tecnicos": {
            "type": "string",
            "description": "Requisitos técnicos"
          }
        },
        "required": [
          "empresa",
          "codigo_telemedicina",
          "tipo_integracao",
          "status_integracao",
          "tipo_plataforma",
          "teleconsulta",
          "telediagnostico",
          "telecirurgia",
          "telemonitoramento",
          "permite_agendamento_online",
          "permite_cancelamento_online",
          "suporte_gravacao",
          "suporte_streaming",
          "criptografia_end_to_end"
        ]
      },
      "Telemedicina": {
        "type": "object",
        "properties": {}
      },
      "UpdateTelemedicinaDto": {
        "type": "object",
        "properties": {
          "empresa": {
            "description": "Dados da empresa",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateEmpresaDto"
              }
            ]
          },
          "codigo_telemedicina": {
            "type": "string",
            "description": "Código da telemedicina",
            "maxLength": 20
          },
          "tipo_integracao": {
            "type": "string",
            "enum": ["api_rest", "webhook", "hl7", "fhir", "manual", "dicom"],
            "description": "Tipo de integração"
          },
          "url_integracao": {
            "type": "string",
            "description": "URL de integração"
          },
          "token_integracao": {
            "type": "string",
            "description": "Token de integração"
          },
          "usuario_integracao": {
            "type": "string",
            "description": "Usuário de integração"
          },
          "senha_integracao": {
            "type": "string",
            "description": "Senha de integração"
          },
          "configuracao_adicional": {
            "type": "string",
            "description": "Configuração adicional em JSON"
          },
          "status_integracao": {
            "type": "string",
            "enum": ["ativo", "inativo", "teste", "manutencao"],
            "description": "Status da integração"
          },
          "tipo_plataforma": {
            "type": "string",
            "enum": ["web", "mobile", "desktop", "hibrida"],
            "description": "Tipo da plataforma"
          },
          "url_plataforma": {
            "type": "string",
            "description": "URL da plataforma"
          },
          "versao_sistema": {
            "type": "string",
            "description": "Versão do sistema"
          },
          "especialidades_atendidas": {
            "description": "Especialidades atendidas",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tipos_consulta": {
            "description": "Tipos de consulta",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "teleconsulta": {
            "type": "boolean",
            "description": "Oferece teleconsulta",
            "default": false
          },
          "telediagnostico": {
            "type": "boolean",
            "description": "Oferece telediagnóstico",
            "default": false
          },
          "telecirurgia": {
            "type": "boolean",
            "description": "Oferece telecirurgia",
            "default": false
          },
          "telemonitoramento": {
            "type": "boolean",
            "description": "Oferece telemonitoramento",
            "default": false
          },
          "tempo_consulta_padrao": {
            "type": "number",
            "description": "Tempo padrão de consulta em minutos"
          },
          "permite_agendamento_online": {
            "type": "boolean",
            "description": "Permite agendamento online",
            "default": false
          },
          "permite_cancelamento_online": {
            "type": "boolean",
            "description": "Permite cancelamento online",
            "default": false
          },
          "antecedencia_minima_agendamento": {
            "type": "number",
            "description": "Antecedência mínima para agendamento em horas"
          },
          "antecedencia_minima_cancelamento": {
            "type": "number",
            "description": "Antecedência mínima para cancelamento em horas"
          },
          "certificado_digital": {
            "type": "string",
            "description": "Certificado digital"
          },
          "suporte_gravacao": {
            "type": "boolean",
            "description": "Suporte à gravação",
            "default": false
          },
          "suporte_streaming": {
            "type": "boolean",
            "description": "Suporte à streaming",
            "default": false
          },
          "criptografia_end_to_end": {
            "type": "boolean",
            "description": "Criptografia end-to-end",
            "default": true
          },
          "protocolo_seguranca": {
            "type": "string",
            "description": "Protocolo de segurança"
          },
          "valor_consulta_particular": {
            "type": "number",
            "description": "Valor da consulta particular"
          },
          "percentual_repasse": {
            "type": "number",
            "description": "Percentual de repasse"
          },
          "taxa_plataforma": {
            "type": "number",
            "description": "Taxa da plataforma"
          },
          "observacoes": {
            "type": "string",
            "description": "Observações gerais"
          },
          "requisitos_tecnicos": {
            "type": "string",
            "description": "Requisitos técnicos"
          }
        }
      },
      "CreateTelemedicinaExameDto": {
        "type": "object",
        "properties": {
          "telemedicina_id": {
            "type": "string",
            "description": "ID da telemedicina"
          },
          "exame_id": {
            "type": "string",
            "description": "ID do exame"
          },
          "codigo_telemedicina": {
            "type": "string",
            "description": "Código do exame na plataforma de telemedicina"
          },
          "nome_exame_telemedicina": {
            "type": "string",
            "description": "Nome do exame na plataforma de telemedicina"
          },
          "categoria_telemedicina": {
            "type": "string",
            "description": "Categoria na plataforma de telemedicina"
          },
          "ativo": {
            "type": "boolean",
            "description": "Vínculo ativo",
            "default": true
          },
          "permite_upload_imagem": {
            "type": "boolean",
            "description": "Permite upload de imagem",
            "default": false
          },
          "requer_especialista": {
            "type": "boolean",
            "description": "Requer especialista",
            "default": false
          },
          "tempo_laudo_padrao": {
            "type": "number",
            "description": "Tempo padrão para laudo em horas"
          },
          "valor_laudo": {
            "type": "number",
            "description": "Valor do laudo"
          },
          "observacoes": {
            "type": "string",
            "description": "Observações"
          }
        },
        "required": [
          "telemedicina_id",
          "exame_id",
          "ativo",
          "permite_upload_imagem",
          "requer_especialista"
        ]
      },
      "TelemedicinaExame": {
        "type": "object",
        "properties": {}
      },
      "UpdateTelemedicinaExameDto": {
        "type": "object",
        "properties": {
          "telemedicina_id": {
            "type": "string",
            "description": "ID da telemedicina"
          },
          "exame_id": {
            "type": "string",
            "description": "ID do exame"
          },
          "codigo_telemedicina": {
            "type": "string",
            "description": "Código do exame na plataforma de telemedicina"
          },
          "nome_exame_telemedicina": {
            "type": "string",
            "description": "Nome do exame na plataforma de telemedicina"
          },
          "categoria_telemedicina": {
            "type": "string",
            "description": "Categoria na plataforma de telemedicina"
          },
          "ativo": {
            "type": "boolean",
            "description": "Vínculo ativo",
            "default": true
          },
          "permite_upload_imagem": {
            "type": "boolean",
            "description": "Permite upload de imagem",
            "default": false
          },
          "requer_especialista": {
            "type": "boolean",
            "description": "Requer especialista",
            "default": false
          },
          "tempo_laudo_padrao": {
            "type": "number",
            "description": "Tempo padrão para laudo em horas"
          },
          "valor_laudo": {
            "type": "number",
            "description": "Valor do laudo"
          },
          "observacoes": {
            "type": "string",
            "description": "Observações"
          }
        }
      },
      "CreateFornecedorDto": {
        "type": "object",
        "properties": {
          "empresa": {
            "description": "Dados da empresa",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateEmpresaDto"
              }
            ]
          },
          "codigo_fornecedor": {
            "type": "string",
            "description": "Código do fornecedor",
            "maxLength": 20
          },
          "categorias_fornecidas": {
            "type": "array",
            "description": "Categorias de insumos fornecidas",
            "items": {
              "type": "string",
              "enum": [
                "reagentes_insumos",
                "equipamentos_medicos",
                "material_escritorio",
                "uniformes_epi",
                "medicamentos",
                "outros"
              ]
            }
          },
          "metodos_transporte": {
            "type": "array",
            "description": "Métodos de transporte disponíveis",
            "items": {
              "type": "string",
              "enum": [
                "correios",
                "transportadora",
                "proprio",
                "entrega_local",
                "retirada"
              ]
            }
          },
          "formas_pagamento_aceitas": {
            "type": "array",
            "description": "Formas de pagamento aceitas",
            "items": {
              "type": "string",
              "enum": [
                "boleto",
                "pix",
                "transferencia",
                "cartao_credito",
                "cartao_debito",
                "dinheiro",
                "cheque",
                "prazo_30_dias",
                "prazo_60_dias",
                "prazo_90_dias"
              ]
            }
          },
          "prazo_entrega_padrao": {
            "type": "number",
            "description": "Prazo de entrega padrão em dias",
            "default": 7
          },
          "prazo_entrega_urgente": {
            "type": "number",
            "description": "Prazo de entrega urgente em dias"
          },
          "orcamento_minimo": {
            "type": "number",
            "description": "Orçamento mínimo para pedidos"
          },
          "orcamento_maximo": {
            "type": "number",
            "description": "Orçamento máximo para pedidos"
          },
          "desconto_padrao": {
            "type": "number",
            "description": "Desconto padrão em percentual"
          },
          "avaliacao_media": {
            "type": "number",
            "description": "Avaliação média de 0 a 5"
          },
          "total_avaliacoes": {
            "type": "number",
            "description": "Total de avaliações",
            "default": 0
          },
          "status_fornecedor": {
            "type": "string",
            "enum": ["ativo", "inativo", "bloqueado", "pendente_aprovacao"],
            "description": "Status do fornecedor"
          },
          "certificacoes": {
            "description": "Certificações do fornecedor",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "possui_certificacao_iso": {
            "type": "boolean",
            "description": "Possui certificação ISO",
            "default": false
          },
          "possui_licenca_anvisa": {
            "type": "boolean",
            "description": "Possui licença ANVISA",
            "default": false
          },
          "data_vencimento_licencas": {
            "format": "date-time",
            "type": "string",
            "description": "Data de vencimento das licenças"
          },
          "representante_comercial": {
            "type": "string",
            "description": "Nome do representante comercial"
          },
          "telefone_comercial": {
            "type": "string",
            "description": "Telefone comercial"
          },
          "email_comercial": {
            "type": "string",
            "description": "Email comercial"
          },
          "gerente_conta": {
            "type": "string",
            "description": "Gerente de conta"
          },
          "aceita_pedido_urgente": {
            "type": "boolean",
            "description": "Aceita pedido urgente",
            "default": false
          },
          "entrega_sabado": {
            "type": "boolean",
            "description": "Faz entrega aos sábados",
            "default": false
          },
          "entrega_domingo": {
            "type": "boolean",
            "description": "Faz entrega aos domingos",
            "default": false
          },
          "horario_inicio_entrega": {
            "type": "string",
            "description": "Horário de início das entregas (HH:mm)"
          },
          "horario_fim_entrega": {
            "type": "string",
            "description": "Horário de fim das entregas (HH:mm)"
          },
          "estados_atendidos": {
            "description": "Estados atendidos (UF)",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cidades_atendidas": {
            "description": "Cidades específicas atendidas",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "atende_todo_brasil": {
            "type": "boolean",
            "description": "Atende todo o Brasil",
            "default": false
          },
          "observacoes": {
            "type": "string",
            "description": "Observações gerais"
          },
          "condicoes_especiais": {
            "type": "string",
            "description": "Condições especiais"
          },
          "historico_problemas": {
            "type": "string",
            "description": "Histórico de problemas"
          },
          "data_ultimo_pedido": {
            "format": "date-time",
            "type": "string",
            "description": "Data do último pedido"
          },
          "data_proxima_avaliacao": {
            "format": "date-time",
            "type": "string",
            "description": "Data da próxima avaliação"
          },
          "aprovado_por": {
            "type": "string",
            "description": "ID do usuário que aprovou"
          },
          "data_aprovacao": {
            "format": "date-time",
            "type": "string",
            "description": "Data da aprovação"
          }
        },
        "required": [
          "empresa",
          "codigo_fornecedor",
          "prazo_entrega_padrao",
          "total_avaliacoes",
          "status_fornecedor",
          "possui_certificacao_iso",
          "possui_licenca_anvisa",
          "aceita_pedido_urgente",
          "entrega_sabado",
          "entrega_domingo",
          "atende_todo_brasil"
        ]
      },
      "Fornecedor": {
        "type": "object",
        "properties": {}
      },
      "UpdateFornecedorDto": {
        "type": "object",
        "properties": {
          "empresa": {
            "description": "Dados da empresa",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateEmpresaDto"
              }
            ]
          },
          "codigo_fornecedor": {
            "type": "string",
            "description": "Código do fornecedor",
            "maxLength": 20
          },
          "categorias_fornecidas": {
            "type": "array",
            "description": "Categorias de insumos fornecidas",
            "items": {
              "type": "string",
              "enum": [
                "reagentes_insumos",
                "equipamentos_medicos",
                "material_escritorio",
                "uniformes_epi",
                "medicamentos",
                "outros"
              ]
            }
          },
          "metodos_transporte": {
            "type": "array",
            "description": "Métodos de transporte disponíveis",
            "items": {
              "type": "string",
              "enum": [
                "correios",
                "transportadora",
                "proprio",
                "entrega_local",
                "retirada"
              ]
            }
          },
          "formas_pagamento_aceitas": {
            "type": "array",
            "description": "Formas de pagamento aceitas",
            "items": {
              "type": "string",
              "enum": [
                "boleto",
                "pix",
                "transferencia",
                "cartao_credito",
                "cartao_debito",
                "dinheiro",
                "cheque",
                "prazo_30_dias",
                "prazo_60_dias",
                "prazo_90_dias"
              ]
            }
          },
          "prazo_entrega_padrao": {
            "type": "number",
            "description": "Prazo de entrega padrão em dias",
            "default": 7
          },
          "prazo_entrega_urgente": {
            "type": "number",
            "description": "Prazo de entrega urgente em dias"
          },
          "orcamento_minimo": {
            "type": "number",
            "description": "Orçamento mínimo para pedidos"
          },
          "orcamento_maximo": {
            "type": "number",
            "description": "Orçamento máximo para pedidos"
          },
          "desconto_padrao": {
            "type": "number",
            "description": "Desconto padrão em percentual"
          },
          "avaliacao_media": {
            "type": "number",
            "description": "Avaliação média de 0 a 5"
          },
          "total_avaliacoes": {
            "type": "number",
            "description": "Total de avaliações",
            "default": 0
          },
          "status_fornecedor": {
            "type": "string",
            "enum": ["ativo", "inativo", "bloqueado", "pendente_aprovacao"],
            "description": "Status do fornecedor"
          },
          "certificacoes": {
            "description": "Certificações do fornecedor",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "possui_certificacao_iso": {
            "type": "boolean",
            "description": "Possui certificação ISO",
            "default": false
          },
          "possui_licenca_anvisa": {
            "type": "boolean",
            "description": "Possui licença ANVISA",
            "default": false
          },
          "data_vencimento_licencas": {
            "format": "date-time",
            "type": "string",
            "description": "Data de vencimento das licenças"
          },
          "representante_comercial": {
            "type": "string",
            "description": "Nome do representante comercial"
          },
          "telefone_comercial": {
            "type": "string",
            "description": "Telefone comercial"
          },
          "email_comercial": {
            "type": "string",
            "description": "Email comercial"
          },
          "gerente_conta": {
            "type": "string",
            "description": "Gerente de conta"
          },
          "aceita_pedido_urgente": {
            "type": "boolean",
            "description": "Aceita pedido urgente",
            "default": false
          },
          "entrega_sabado": {
            "type": "boolean",
            "description": "Faz entrega aos sábados",
            "default": false
          },
          "entrega_domingo": {
            "type": "boolean",
            "description": "Faz entrega aos domingos",
            "default": false
          },
          "horario_inicio_entrega": {
            "type": "string",
            "description": "Horário de início das entregas (HH:mm)"
          },
          "horario_fim_entrega": {
            "type": "string",
            "description": "Horário de fim das entregas (HH:mm)"
          },
          "estados_atendidos": {
            "description": "Estados atendidos (UF)",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cidades_atendidas": {
            "description": "Cidades específicas atendidas",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "atende_todo_brasil": {
            "type": "boolean",
            "description": "Atende todo o Brasil",
            "default": false
          },
          "observacoes": {
            "type": "string",
            "description": "Observações gerais"
          },
          "condicoes_especiais": {
            "type": "string",
            "description": "Condições especiais"
          },
          "historico_problemas": {
            "type": "string",
            "description": "Histórico de problemas"
          },
          "data_ultimo_pedido": {
            "format": "date-time",
            "type": "string",
            "description": "Data do último pedido"
          },
          "data_proxima_avaliacao": {
            "format": "date-time",
            "type": "string",
            "description": "Data da próxima avaliação"
          },
          "aprovado_por": {
            "type": "string",
            "description": "ID do usuário que aprovou"
          },
          "data_aprovacao": {
            "format": "date-time",
            "type": "string",
            "description": "Data da aprovação"
          }
        }
      },
      "CreateFornecedorInsumoDto": {
        "type": "object",
        "properties": {
          "fornecedor_id": {
            "type": "string",
            "description": "ID do fornecedor"
          },
          "codigo_interno": {
            "type": "string",
            "description": "Código interno do fornecedor",
            "maxLength": 50
          },
          "codigo_fabricante": {
            "type": "string",
            "description": "Código do fabricante",
            "maxLength": 50
          },
          "codigo_barras": {
            "type": "string",
            "description": "Código de barras",
            "maxLength": 50
          },
          "nome_insumo": {
            "type": "string",
            "description": "Nome do insumo",
            "maxLength": 255
          },
          "descricao": {
            "type": "string",
            "description": "Descrição detalhada"
          },
          "marca": {
            "type": "string",
            "description": "Marca do produto",
            "maxLength": 100
          },
          "fabricante": {
            "type": "string",
            "description": "Fabricante",
            "maxLength": 100
          },
          "categoria": {
            "type": "string",
            "enum": [
              "reagentes_insumos",
              "equipamentos_medicos",
              "material_escritorio",
              "uniformes_epi",
              "medicamentos",
              "outros"
            ],
            "description": "Categoria do insumo"
          },
          "subcategoria": {
            "type": "string",
            "description": "Subcategoria",
            "maxLength": 100
          },
          "grupo_produto": {
            "type": "string",
            "description": "Grupo do produto",
            "maxLength": 100
          },
          "modelo": {
            "type": "string",
            "description": "Modelo",
            "maxLength": 50
          },
          "especificacao_tecnica": {
            "type": "string",
            "description": "Especificação técnica",
            "maxLength": 100
          },
          "cor": {
            "type": "string",
            "description": "Cor",
            "maxLength": 50
          },
          "tamanho": {
            "type": "string",
            "description": "Tamanho",
            "maxLength": 50
          },
          "voltagem": {
            "type": "string",
            "description": "Voltagem",
            "maxLength": 50
          },
          "unidade_medida": {
            "type": "string",
            "enum": [
              "unidade",
              "caixa",
              "pacote",
              "frasco",
              "litro",
              "mililitro",
              "quilograma",
              "grama",
              "metro",
              "centimetro",
              "par",
              "conjunto"
            ],
            "description": "Unidade de medida"
          },
          "quantidade_embalagem": {
            "type": "number",
            "description": "Quantidade por embalagem",
            "default": 1
          },
          "quantidade_minima_pedido": {
            "type": "number",
            "description": "Quantidade mínima de pedido"
          },
          "quantidade_maxima_pedido": {
            "type": "number",
            "description": "Quantidade máxima de pedido"
          },
          "estoque_disponivel": {
            "type": "number",
            "description": "Estoque disponível"
          },
          "preco_unitario": {
            "type": "number",
            "description": "Preço unitário"
          },
          "preco_promocional": {
            "type": "number",
            "description": "Preço promocional"
          },
          "data_inicio_promocao": {
            "format": "date-time",
            "type": "string",
            "description": "Data de início da promoção"
          },
          "data_fim_promocao": {
            "format": "date-time",
            "type": "string",
            "description": "Data de fim da promoção"
          },
          "desconto_quantidade": {
            "type": "number",
            "description": "Percentual de desconto por quantidade"
          },
          "quantidade_desconto": {
            "type": "number",
            "description": "Quantidade mínima para desconto"
          },
          "prazo_entrega_dias": {
            "type": "number",
            "description": "Prazo de entrega em dias"
          },
          "metodo_transporte_preferencial": {
            "type": "string",
            "enum": [
              "correios",
              "transportadora",
              "proprio",
              "entrega_local",
              "retirada"
            ],
            "description": "Método de transporte preferencial"
          },
          "custo_frete": {
            "type": "number",
            "description": "Custo do frete"
          },
          "frete_gratis_acima_valor": {
            "type": "boolean",
            "description": "Frete grátis acima de um valor",
            "default": false
          },
          "valor_frete_gratis": {
            "type": "number",
            "description": "Valor para frete grátis"
          },
          "formas_pagamento": {
            "type": "array",
            "description": "Formas de pagamento aceitas",
            "items": {
              "type": "string",
              "enum": [
                "boleto",
                "pix",
                "transferencia",
                "cartao_credito",
                "cartao_debito",
                "dinheiro",
                "cheque",
                "prazo_30_dias",
                "prazo_60_dias",
                "prazo_90_dias"
              ]
            }
          },
          "prazo_pagamento_dias": {
            "type": "number",
            "description": "Prazo de pagamento em dias"
          },
          "status": {
            "type": "string",
            "enum": [
              "disponivel",
              "indisponivel",
              "descontinuado",
              "sob_consulta"
            ],
            "description": "Status do insumo"
          },
          "ativo": {
            "type": "boolean",
            "description": "Insumo ativo",
            "default": true
          },
          "data_validade": {
            "format": "date-time",
            "type": "string",
            "description": "Data de validade (produtos perecíveis)"
          },
          "prazo_validade_meses": {
            "type": "number",
            "description": "Prazo de validade padrão em meses"
          },
          "registro_anvisa": {
            "type": "string",
            "description": "Registro ANVISA",
            "maxLength": 100
          },
          "registro_inmetro": {
            "type": "string",
            "description": "Registro INMETRO",
            "maxLength": 100
          },
          "certificacoes_produto": {
            "description": "Certificações do produto",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "requer_receita_medica": {
            "type": "boolean",
            "description": "Requer receita médica",
            "default": false
          },
          "produto_controlado": {
            "type": "boolean",
            "description": "Produto controlado",
            "default": false
          },
          "observacoes": {
            "type": "string",
            "description": "Observações"
          },
          "link_catalogo": {
            "type": "string",
            "description": "Link do catálogo",
            "maxLength": 255
          },
          "imagem_url": {
            "type": "string",
            "description": "URL da imagem",
            "maxLength": 255
          },
          "ficha_tecnica": {
            "type": "string",
            "description": "Ficha técnica"
          },
          "avaliacao_produto": {
            "type": "number",
            "description": "Avaliação do produto (0-5)"
          }
        },
        "required": [
          "fornecedor_id",
          "codigo_interno",
          "nome_insumo",
          "categoria",
          "unidade_medida",
          "quantidade_embalagem",
          "frete_gratis_acima_valor",
          "status",
          "ativo",
          "requer_receita_medica",
          "produto_controlado"
        ]
      },
      "FornecedorInsumo": {
        "type": "object",
        "properties": {}
      },
      "UpdateFornecedorInsumoDto": {
        "type": "object",
        "properties": {
          "fornecedor_id": {
            "type": "string",
            "description": "ID do fornecedor"
          },
          "codigo_interno": {
            "type": "string",
            "description": "Código interno do fornecedor",
            "maxLength": 50
          },
          "codigo_fabricante": {
            "type": "string",
            "description": "Código do fabricante",
            "maxLength": 50
          },
          "codigo_barras": {
            "type": "string",
            "description": "Código de barras",
            "maxLength": 50
          },
          "nome_insumo": {
            "type": "string",
            "description": "Nome do insumo",
            "maxLength": 255
          },
          "descricao": {
            "type": "string",
            "description": "Descrição detalhada"
          },
          "marca": {
            "type": "string",
            "description": "Marca do produto",
            "maxLength": 100
          },
          "fabricante": {
            "type": "string",
            "description": "Fabricante",
            "maxLength": 100
          },
          "categoria": {
            "type": "string",
            "enum": [
              "reagentes_insumos",
              "equipamentos_medicos",
              "material_escritorio",
              "uniformes_epi",
              "medicamentos",
              "outros"
            ],
            "description": "Categoria do insumo"
          },
          "subcategoria": {
            "type": "string",
            "description": "Subcategoria",
            "maxLength": 100
          },
          "grupo_produto": {
            "type": "string",
            "description": "Grupo do produto",
            "maxLength": 100
          },
          "modelo": {
            "type": "string",
            "description": "Modelo",
            "maxLength": 50
          },
          "especificacao_tecnica": {
            "type": "string",
            "description": "Especificação técnica",
            "maxLength": 100
          },
          "cor": {
            "type": "string",
            "description": "Cor",
            "maxLength": 50
          },
          "tamanho": {
            "type": "string",
            "description": "Tamanho",
            "maxLength": 50
          },
          "voltagem": {
            "type": "string",
            "description": "Voltagem",
            "maxLength": 50
          },
          "unidade_medida": {
            "type": "string",
            "enum": [
              "unidade",
              "caixa",
              "pacote",
              "frasco",
              "litro",
              "mililitro",
              "quilograma",
              "grama",
              "metro",
              "centimetro",
              "par",
              "conjunto"
            ],
            "description": "Unidade de medida"
          },
          "quantidade_embalagem": {
            "type": "number",
            "description": "Quantidade por embalagem",
            "default": 1
          },
          "quantidade_minima_pedido": {
            "type": "number",
            "description": "Quantidade mínima de pedido"
          },
          "quantidade_maxima_pedido": {
            "type": "number",
            "description": "Quantidade máxima de pedido"
          },
          "estoque_disponivel": {
            "type": "number",
            "description": "Estoque disponível"
          },
          "preco_unitario": {
            "type": "number",
            "description": "Preço unitário"
          },
          "preco_promocional": {
            "type": "number",
            "description": "Preço promocional"
          },
          "data_inicio_promocao": {
            "format": "date-time",
            "type": "string",
            "description": "Data de início da promoção"
          },
          "data_fim_promocao": {
            "format": "date-time",
            "type": "string",
            "description": "Data de fim da promoção"
          },
          "desconto_quantidade": {
            "type": "number",
            "description": "Percentual de desconto por quantidade"
          },
          "quantidade_desconto": {
            "type": "number",
            "description": "Quantidade mínima para desconto"
          },
          "prazo_entrega_dias": {
            "type": "number",
            "description": "Prazo de entrega em dias"
          },
          "metodo_transporte_preferencial": {
            "type": "string",
            "enum": [
              "correios",
              "transportadora",
              "proprio",
              "entrega_local",
              "retirada"
            ],
            "description": "Método de transporte preferencial"
          },
          "custo_frete": {
            "type": "number",
            "description": "Custo do frete"
          },
          "frete_gratis_acima_valor": {
            "type": "boolean",
            "description": "Frete grátis acima de um valor",
            "default": false
          },
          "valor_frete_gratis": {
            "type": "number",
            "description": "Valor para frete grátis"
          },
          "formas_pagamento": {
            "type": "array",
            "description": "Formas de pagamento aceitas",
            "items": {
              "type": "string",
              "enum": [
                "boleto",
                "pix",
                "transferencia",
                "cartao_credito",
                "cartao_debito",
                "dinheiro",
                "cheque",
                "prazo_30_dias",
                "prazo_60_dias",
                "prazo_90_dias"
              ]
            }
          },
          "prazo_pagamento_dias": {
            "type": "number",
            "description": "Prazo de pagamento em dias"
          },
          "status": {
            "type": "string",
            "enum": [
              "disponivel",
              "indisponivel",
              "descontinuado",
              "sob_consulta"
            ],
            "description": "Status do insumo"
          },
          "ativo": {
            "type": "boolean",
            "description": "Insumo ativo",
            "default": true
          },
          "data_validade": {
            "format": "date-time",
            "type": "string",
            "description": "Data de validade (produtos perecíveis)"
          },
          "prazo_validade_meses": {
            "type": "number",
            "description": "Prazo de validade padrão em meses"
          },
          "registro_anvisa": {
            "type": "string",
            "description": "Registro ANVISA",
            "maxLength": 100
          },
          "registro_inmetro": {
            "type": "string",
            "description": "Registro INMETRO",
            "maxLength": 100
          },
          "certificacoes_produto": {
            "description": "Certificações do produto",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "requer_receita_medica": {
            "type": "boolean",
            "description": "Requer receita médica",
            "default": false
          },
          "produto_controlado": {
            "type": "boolean",
            "description": "Produto controlado",
            "default": false
          },
          "observacoes": {
            "type": "string",
            "description": "Observações"
          },
          "link_catalogo": {
            "type": "string",
            "description": "Link do catálogo",
            "maxLength": 255
          },
          "imagem_url": {
            "type": "string",
            "description": "URL da imagem",
            "maxLength": 255
          },
          "ficha_tecnica": {
            "type": "string",
            "description": "Ficha técnica"
          },
          "avaliacao_produto": {
            "type": "number",
            "description": "Avaliação do produto (0-5)"
          }
        }
      },
      "CreatePrestadorServicoDto": {
        "type": "object",
        "properties": {
          "empresa": {
            "description": "Dados da empresa",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateEmpresaDto"
              }
            ]
          },
          "codigoPrestador": {
            "type": "string",
            "description": "Código único do prestador",
            "example": "PSV001",
            "minLength": 3,
            "maxLength": 20
          },
          "tipoContrato": {
            "type": "string",
            "description": "Tipo de contrato",
            "enum": ["fixo", "por_demanda", "retainer", "projeto"],
            "example": "por_demanda"
          },
          "numeroContrato": {
            "type": "string",
            "description": "Número do contrato",
            "example": "CONT-2025-001"
          },
          "dataInicioContrato": {
            "type": "string",
            "description": "Data de início do contrato",
            "example": "2025-01-01"
          },
          "dataFimContrato": {
            "type": "string",
            "description": "Data de fim do contrato",
            "example": "2025-12-31"
          },
          "renovacaoAutomatica": {
            "type": "boolean",
            "description": "Renovação automática do contrato",
            "example": false,
            "default": false
          },
          "prazoAvisoRenovacao": {
            "type": "number",
            "description": "Prazo em dias para aviso de renovação",
            "example": 30
          },
          "formaPagamento": {
            "type": "string",
            "description": "Forma de pagamento",
            "enum": [
              "mensalidade",
              "por_servico",
              "hora_trabalhada",
              "pacote_fechado",
              "comissao",
              "misto"
            ],
            "example": "por_servico"
          },
          "valorHora": {
            "type": "number",
            "description": "Valor por hora",
            "example": 150
          },
          "valorMensal": {
            "type": "number",
            "description": "Valor mensal",
            "example": 5000
          },
          "valorMinimo": {
            "type": "number",
            "description": "Valor mínimo",
            "example": 500
          },
          "prazoPagamento": {
            "type": "number",
            "description": "Prazo de pagamento em dias",
            "example": 30,
            "default": 30
          },
          "diaVencimento": {
            "type": "number",
            "description": "Dia do vencimento",
            "example": 10
          },
          "frequenciaPagamento": {
            "type": "string",
            "description": "Frequência de pagamento",
            "enum": [
              "diario",
              "semanal",
              "quinzenal",
              "mensal",
              "bimestral",
              "trimestral",
              "semestral",
              "anual",
              "por_servico"
            ],
            "example": "mensal"
          },
          "tipoPix": {
            "type": "string",
            "description": "Tipo de chave PIX",
            "example": "CNPJ"
          },
          "chavePix": {
            "type": "string",
            "description": "Chave PIX",
            "example": "11.222.333/0001-44"
          },
          "banco": {
            "type": "string",
            "description": "Código do banco",
            "example": "001"
          },
          "agencia": {
            "type": "string",
            "description": "Agência bancária",
            "example": "1234"
          },
          "conta": {
            "type": "string",
            "description": "Conta bancária",
            "example": "12345-6"
          },
          "tipoConta": {
            "type": "string",
            "description": "Tipo de conta",
            "example": "corrente"
          },
          "statusContrato": {
            "type": "string",
            "description": "Status do contrato",
            "enum": ["ativo", "inativo", "suspenso", "em_analise", "cancelado"],
            "example": "em_analise"
          },
          "slaResposta": {
            "type": "number",
            "description": "SLA de resposta em horas",
            "example": 4
          },
          "slaResolucao": {
            "type": "number",
            "description": "SLA de resolução em horas",
            "example": 24
          },
          "horarioAtendimento": {
            "type": "string",
            "description": "Horário de atendimento",
            "example": "08:00 - 18:00"
          },
          "diasAtendimento": {
            "description": "Dias de atendimento",
            "example": ["segunda", "terça", "quarta", "quinta", "sexta"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "suporte24x7": {
            "type": "boolean",
            "description": "Suporte 24x7",
            "example": false,
            "default": false
          },
          "atendeUrgencia": {
            "type": "boolean",
            "description": "Atende urgência",
            "example": true,
            "default": false
          },
          "taxaUrgencia": {
            "type": "number",
            "description": "Taxa de urgência (%)",
            "example": 50
          },
          "observacoes": {
            "type": "string",
            "description": "Observações"
          },
          "requisitosAcesso": {
            "type": "string",
            "description": "Requisitos de acesso"
          },
          "certificacoes": {
            "description": "Certificações",
            "example": ["ISO 9001", "ISO 27001"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "seguros": {
            "description": "Seguros",
            "example": ["Responsabilidade Civil", "Seguro Profissional"],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "empresa",
          "codigoPrestador",
          "tipoContrato",
          "renovacaoAutomatica",
          "formaPagamento",
          "prazoPagamento",
          "frequenciaPagamento",
          "statusContrato",
          "suporte24x7",
          "atendeUrgencia"
        ]
      },
      "UpdatePrestadorServicoDto": {
        "type": "object",
        "properties": {
          "tipoContrato": {
            "type": "string",
            "description": "Tipo de contrato",
            "enum": ["fixo", "por_demanda", "retainer", "projeto"],
            "example": "por_demanda"
          },
          "numeroContrato": {
            "type": "string",
            "description": "Número do contrato",
            "example": "CONT-2025-001"
          },
          "dataInicioContrato": {
            "type": "string",
            "description": "Data de início do contrato",
            "example": "2025-01-01"
          },
          "dataFimContrato": {
            "type": "string",
            "description": "Data de fim do contrato",
            "example": "2025-12-31"
          },
          "renovacaoAutomatica": {
            "type": "boolean",
            "description": "Renovação automática do contrato",
            "example": false,
            "default": false
          },
          "prazoAvisoRenovacao": {
            "type": "number",
            "description": "Prazo em dias para aviso de renovação",
            "example": 30
          },
          "formaPagamento": {
            "type": "string",
            "description": "Forma de pagamento",
            "enum": [
              "mensalidade",
              "por_servico",
              "hora_trabalhada",
              "pacote_fechado",
              "comissao",
              "misto"
            ],
            "example": "por_servico"
          },
          "valorHora": {
            "type": "number",
            "description": "Valor por hora",
            "example": 150
          },
          "valorMensal": {
            "type": "number",
            "description": "Valor mensal",
            "example": 5000
          },
          "valorMinimo": {
            "type": "number",
            "description": "Valor mínimo",
            "example": 500
          },
          "prazoPagamento": {
            "type": "number",
            "description": "Prazo de pagamento em dias",
            "example": 30,
            "default": 30
          },
          "diaVencimento": {
            "type": "number",
            "description": "Dia do vencimento",
            "example": 10
          },
          "frequenciaPagamento": {
            "type": "string",
            "description": "Frequência de pagamento",
            "enum": [
              "diario",
              "semanal",
              "quinzenal",
              "mensal",
              "bimestral",
              "trimestral",
              "semestral",
              "anual",
              "por_servico"
            ],
            "example": "mensal"
          },
          "tipoPix": {
            "type": "string",
            "description": "Tipo de chave PIX",
            "example": "CNPJ"
          },
          "chavePix": {
            "type": "string",
            "description": "Chave PIX",
            "example": "11.222.333/0001-44"
          },
          "banco": {
            "type": "string",
            "description": "Código do banco",
            "example": "001"
          },
          "agencia": {
            "type": "string",
            "description": "Agência bancária",
            "example": "1234"
          },
          "conta": {
            "type": "string",
            "description": "Conta bancária",
            "example": "12345-6"
          },
          "tipoConta": {
            "type": "string",
            "description": "Tipo de conta",
            "example": "corrente"
          },
          "statusContrato": {
            "type": "string",
            "description": "Status do contrato",
            "enum": ["ativo", "inativo", "suspenso", "em_analise", "cancelado"],
            "example": "em_analise"
          },
          "slaResposta": {
            "type": "number",
            "description": "SLA de resposta em horas",
            "example": 4
          },
          "slaResolucao": {
            "type": "number",
            "description": "SLA de resolução em horas",
            "example": 24
          },
          "horarioAtendimento": {
            "type": "string",
            "description": "Horário de atendimento",
            "example": "08:00 - 18:00"
          },
          "diasAtendimento": {
            "description": "Dias de atendimento",
            "example": ["segunda", "terça", "quarta", "quinta", "sexta"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "suporte24x7": {
            "type": "boolean",
            "description": "Suporte 24x7",
            "example": false,
            "default": false
          },
          "atendeUrgencia": {
            "type": "boolean",
            "description": "Atende urgência",
            "example": true,
            "default": false
          },
          "taxaUrgencia": {
            "type": "number",
            "description": "Taxa de urgência (%)",
            "example": 50
          },
          "observacoes": {
            "type": "string",
            "description": "Observações"
          },
          "requisitosAcesso": {
            "type": "string",
            "description": "Requisitos de acesso"
          },
          "certificacoes": {
            "description": "Certificações",
            "example": ["ISO 9001", "ISO 27001"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "seguros": {
            "description": "Seguros",
            "example": ["Responsabilidade Civil", "Seguro Profissional"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "empresa": {
            "description": "Dados da empresa para atualizar",
            "allOf": [
              {
                "$ref": "#/components/schemas/UpdateEmpresaDto"
              }
            ]
          }
        }
      },
      "CreatePrestadorServicoCategoriaDto": {
        "type": "object",
        "properties": {
          "prestadorServicoId": {
            "type": "string",
            "description": "ID do prestador de serviço",
            "example": "uuid-do-prestador"
          },
          "tipoServico": {
            "type": "string",
            "description": "Tipo de serviço",
            "enum": [
              "manutencao_equipamentos",
              "prestadores_exames",
              "honorario_contabeis",
              "honorario_consultoria",
              "honorario_advocaticio",
              "internet_telefonia",
              "agua",
              "energia",
              "suporte_software",
              "desenvolvimento_software",
              "seguranca_monitoramento",
              "outros_servicos_pf",
              "outros_servicos_pj",
              "limpeza_conservacao",
              "transporte_logistica",
              "marketing_publicidade",
              "recursos_humanos",
              "treinamento_capacitacao",
              "arquitetura_engenharia",
              "vigilancia_sanitaria",
              "calibracao_metrologia"
            ],
            "example": "manutencao_equipamentos"
          },
          "descricaoServico": {
            "type": "string",
            "description": "Descrição do serviço"
          },
          "valorPadrao": {
            "type": "number",
            "description": "Valor padrão do serviço",
            "example": 500
          },
          "unidadeMedida": {
            "type": "string",
            "description": "Unidade de medida",
            "example": "hora"
          },
          "prazoExecucao": {
            "type": "number",
            "description": "Prazo de execução em dias",
            "example": 5
          },
          "periodicidade": {
            "type": "string",
            "description": "Periodicidade do serviço",
            "example": "mensal"
          },
          "responsavelTecnico": {
            "type": "string",
            "description": "Responsável técnico",
            "example": "João Silva"
          },
          "telefoneResponsavel": {
            "type": "string",
            "description": "Telefone do responsável",
            "example": "(11) 98765-4321"
          },
          "emailResponsavel": {
            "type": "string",
            "description": "Email do responsável",
            "example": "joao.silva@example.com"
          },
          "requerAprovacao": {
            "type": "boolean",
            "description": "Requer aprovação",
            "example": true,
            "default": true
          },
          "requerOrcamento": {
            "type": "boolean",
            "description": "Requer orçamento",
            "example": false,
            "default": false
          },
          "valorLimiteSemAprovacao": {
            "type": "number",
            "description": "Valor limite sem aprovação",
            "example": 1000
          },
          "ativo": {
            "type": "boolean",
            "description": "Categoria ativa",
            "example": true,
            "default": true
          },
          "observacoes": {
            "type": "string",
            "description": "Observações"
          }
        },
        "required": [
          "prestadorServicoId",
          "tipoServico",
          "requerAprovacao",
          "requerOrcamento",
          "ativo"
        ]
      },
      "UpdatePrestadorServicoCategoriaDto": {
        "type": "object",
        "properties": {
          "descricaoServico": {
            "type": "string",
            "description": "Descrição do serviço"
          },
          "valorPadrao": {
            "type": "number",
            "description": "Valor padrão do serviço",
            "example": 500
          },
          "unidadeMedida": {
            "type": "string",
            "description": "Unidade de medida",
            "example": "hora"
          },
          "prazoExecucao": {
            "type": "number",
            "description": "Prazo de execução em dias",
            "example": 5
          },
          "periodicidade": {
            "type": "string",
            "description": "Periodicidade do serviço",
            "example": "mensal"
          },
          "responsavelTecnico": {
            "type": "string",
            "description": "Responsável técnico",
            "example": "João Silva"
          },
          "telefoneResponsavel": {
            "type": "string",
            "description": "Telefone do responsável",
            "example": "(11) 98765-4321"
          },
          "emailResponsavel": {
            "type": "string",
            "description": "Email do responsável",
            "example": "joao.silva@example.com"
          },
          "requerAprovacao": {
            "type": "boolean",
            "description": "Requer aprovação",
            "example": true,
            "default": true
          },
          "requerOrcamento": {
            "type": "boolean",
            "description": "Requer orçamento",
            "example": false,
            "default": false
          },
          "valorLimiteSemAprovacao": {
            "type": "number",
            "description": "Valor limite sem aprovação",
            "example": 1000
          },
          "ativo": {
            "type": "boolean",
            "description": "Categoria ativa",
            "example": true,
            "default": true
          },
          "observacoes": {
            "type": "string",
            "description": "Observações"
          }
        }
      },
      "CreateKitExameDto": {
        "type": "object",
        "properties": {
          "exameId": {
            "type": "string",
            "description": "ID do exame a ser vinculado ao kit",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "quantidade": {
            "type": "number",
            "description": "Quantidade do exame no kit",
            "example": 1,
            "default": 1
          },
          "ordemInsercao": {
            "type": "number",
            "description": "Ordem de inserção/exibição do exame no kit",
            "example": 1
          },
          "observacoes": {
            "type": "string",
            "description": "Observações específicas para este exame no kit",
            "example": "Jejum de 12 horas necessário"
          }
        },
        "required": ["exameId"]
      },
      "CreateKitUnidadeDto": {
        "type": "object",
        "properties": {
          "unidadeId": {
            "type": "string",
            "description": "ID da unidade de saúde",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "disponivel": {
            "type": "boolean",
            "description": "Se o kit está disponível nesta unidade",
            "example": true,
            "default": true
          },
          "observacoes": {
            "type": "string",
            "description": "Observações específicas para esta unidade",
            "example": "Disponível apenas às segundas e quartas"
          }
        },
        "required": ["unidadeId"]
      },
      "CreateKitConvenioDto": {
        "type": "object",
        "properties": {
          "convenioId": {
            "type": "string",
            "description": "ID do convênio",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "valorConvenio": {
            "type": "number",
            "description": "Valor do kit para este convênio específico",
            "example": 250
          },
          "disponivel": {
            "type": "boolean",
            "description": "Se o kit está disponível para este convênio",
            "example": true,
            "default": true
          },
          "requerAutorizacao": {
            "type": "boolean",
            "description": "Se requer autorização do convênio",
            "example": false,
            "default": false
          },
          "observacoes": {
            "type": "string",
            "description": "Observações específicas para este convênio",
            "example": "Necessária autorização prévia para maiores de 60 anos"
          }
        },
        "required": ["convenioId"]
      },
      "CreateKitDto": {
        "type": "object",
        "properties": {
          "codigoInterno": {
            "type": "string",
            "description": "Código interno único do kit",
            "example": "KIT001",
            "maxLength": 50
          },
          "nomeKit": {
            "type": "string",
            "description": "Nome do kit",
            "example": "Kit Check-up Básico",
            "maxLength": 255
          },
          "descricao": {
            "type": "string",
            "description": "Descrição detalhada do kit",
            "example": "Conjunto de exames básicos para check-up anual"
          },
          "tipoKit": {
            "type": "string",
            "description": "Tipo do kit",
            "enum": [
              "CHECK_UP",
              "OCUPACIONAL",
              "PRE_NATAL",
              "COM_DESCRICAO",
              "PERSONALIZADO"
            ],
            "example": "CHECK_UP"
          },
          "statusKit": {
            "type": "string",
            "description": "Status do kit",
            "enum": ["ATIVO", "INATIVO", "EM_REVISAO"],
            "example": "ATIVO",
            "default": "ATIVO"
          },
          "empresaId": {
            "type": "string",
            "description": "ID da empresa proprietária do kit",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "prazoPadraoEntrega": {
            "type": "number",
            "description": "Prazo padrão de entrega em dias",
            "example": 3
          },
          "valorTotal": {
            "type": "number",
            "description": "Valor total do kit",
            "example": 350
          },
          "precoKit": {
            "type": "number",
            "description": "Preço de venda do kit",
            "example": 400
          },
          "observacoes": {
            "type": "string",
            "description": "Observações gerais sobre o kit",
            "example": "Kit especial para campanhas de saúde"
          },
          "exames": {
            "description": "Lista de exames do kit",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateKitExameDto"
            }
          },
          "unidades": {
            "description": "Lista de unidades onde o kit está disponível",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateKitUnidadeDto"
            }
          },
          "convenios": {
            "description": "Lista de convênios que aceitam o kit",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateKitConvenioDto"
            }
          }
        },
        "required": ["codigoInterno", "nomeKit", "tipoKit", "empresaId"]
      },
      "Kit": {
        "type": "object",
        "properties": {}
      },
      "UpdateKitDto": {
        "type": "object",
        "properties": {
          "nomeKit": {
            "type": "string",
            "description": "Nome do kit",
            "example": "Kit Check-up Básico",
            "maxLength": 255
          },
          "descricao": {
            "type": "string",
            "description": "Descrição detalhada do kit",
            "example": "Conjunto de exames básicos para check-up anual"
          },
          "tipoKit": {
            "type": "string",
            "description": "Tipo do kit",
            "enum": [
              "CHECK_UP",
              "OCUPACIONAL",
              "PRE_NATAL",
              "COM_DESCRICAO",
              "PERSONALIZADO"
            ],
            "example": "CHECK_UP"
          },
          "statusKit": {
            "type": "string",
            "description": "Status do kit",
            "enum": ["ATIVO", "INATIVO", "EM_REVISAO"],
            "example": "ATIVO",
            "default": "ATIVO"
          },
          "prazoPadraoEntrega": {
            "type": "number",
            "description": "Prazo padrão de entrega em dias",
            "example": 3
          },
          "valorTotal": {
            "type": "number",
            "description": "Valor total do kit",
            "example": 350
          },
          "precoKit": {
            "type": "number",
            "description": "Preço de venda do kit",
            "example": 400
          },
          "observacoes": {
            "type": "string",
            "description": "Observações gerais sobre o kit",
            "example": "Kit especial para campanhas de saúde"
          },
          "exames": {
            "description": "Lista de exames do kit",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateKitExameDto"
            }
          },
          "unidades": {
            "description": "Lista de unidades onde o kit está disponível",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateKitUnidadeDto"
            }
          },
          "convenios": {
            "description": "Lista de convênios que aceitam o kit",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateKitConvenioDto"
            }
          }
        }
      },
      "CreateBancoDto": {
        "type": "object",
        "properties": {
          "codigo": {
            "type": "string",
            "description": "Código FEBRABAN do banco",
            "example": "001",
            "minLength": 3,
            "maxLength": 3
          },
          "nome": {
            "type": "string",
            "description": "Nome do banco",
            "example": "Banco do Brasil S.A.",
            "maxLength": 255
          },
          "codigo_interno": {
            "type": "string",
            "description": "Código interno do banco",
            "example": "BB",
            "maxLength": 20
          },
          "descricao": {
            "type": "string",
            "description": "Descrição adicional do banco",
            "example": "Banco do Brasil - Código FEBRABAN: 001"
          },
          "status": {
            "type": "string",
            "description": "Status do banco",
            "enum": ["ativo", "inativo"],
            "default": "ativo"
          }
        },
        "required": ["codigo", "nome", "codigo_interno"]
      },
      "UpdateBancoDto": {
        "type": "object",
        "properties": {
          "codigo": {
            "type": "string",
            "description": "Código FEBRABAN do banco",
            "example": "001",
            "minLength": 3,
            "maxLength": 3
          },
          "nome": {
            "type": "string",
            "description": "Nome do banco",
            "example": "Banco do Brasil S.A.",
            "maxLength": 255
          },
          "codigo_interno": {
            "type": "string",
            "description": "Código interno do banco",
            "example": "BB",
            "maxLength": 20
          },
          "descricao": {
            "type": "string",
            "description": "Descrição adicional do banco",
            "example": "Banco do Brasil - Código FEBRABAN: 001"
          },
          "status": {
            "type": "string",
            "description": "Status do banco",
            "enum": ["ativo", "inativo"],
            "default": "ativo"
          }
        }
      }
    }
  }
}
